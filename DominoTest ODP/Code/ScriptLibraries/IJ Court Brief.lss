'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Explicit 

Use "IntelliPRINT"

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub AffidavitPropertyOwner(Process As String)
Declare Sub AffidavitOfService(Process As String)
Declare Sub InjuryOrDamageInformation(Process As String)
Declare Sub SupplementaryReport(Process As String)
Declare Sub OccurrenceReport(Process As String)
Declare Sub SetCBForm
Declare Public Function OccurrenceDoc(doc As NotesDocument) As NotesDocument
Declare Sub PromiseToAppear(Process As String)
Declare Public Function MonthName(Monthnumber As Integer) As String
Declare Sub DomesticViolenceReport(Process As String)
Declare Sub SWtoSeizeFirearms(Process As String)
Declare Sub SubpeonaToWitness(Process As String)
Declare Sub AuthorizeTakeBodilySubstances(Process As String)
Declare Sub Summons(Process As String)
Declare Sub MiscellaneousCourtDocument (Process As String)
Declare Sub AffidavitSeizingProperty(Process As String)
Declare Sub AudioVideoSynopsis(Process As String)
Declare Sub TelewarrantToEnterDwelling(Process As String)
Declare Sub OrderProhibitFirearms(Process As String)
Declare Sub UndertakingGivenToOfficer(Process As String)
Declare Sub ConsentToSearch(Process As String)
Declare Sub ConsentToObtainDNA(Process As String)
Declare Sub ApplicationFirearms(Process As String)
Declare Function GetXMLItemValue(FieldName As String, XMLNodeName List As String) As Variant
Declare Sub NoticeToParent(Process As String)
Declare Sub CourtSynopsis(Process As String)
Declare Sub ShowCauseReport(Process As String)
Declare Sub NoticeIntroduceOffences(Process As String)
Declare Sub SummonsToAppear(Process As String)
Declare Function RetrieveItemValue(SourceDoc As NotesDocument, FieldName As String) As Variant
Declare Sub RequestCopies(Process As String)
Declare Sub InformationObtainTWDwelling(Process As String)
Declare Sub CertificateFailedToAppear(Process As String)
Declare Sub CreateCBRMSDocData (UNID As String)
Declare Sub InformationObtainW(Process As String)
Declare Sub CertificateOfService(Process As String)
Declare Sub CPICResponse(Process As String)
Declare Sub CourtBriefCover(Process As String)
Declare Sub CriminalInformation(Process As String)
Declare Sub CreateCBFormData
Declare Sub WarrantObtainBodSub(Process As String)	
Declare Sub StatementPoliceWitness(Process As String)
Declare Sub ReturnWarrant(Process As String)
Declare Sub PrepareFormForRendering()
Declare Sub CreateCBDlgData
Declare Function OfficerLookup(officer As String)
Declare Sub ReportToJustice(Process As String)
Declare Function ConvertUNIDtoDocID(UNIDStr As String) As String
Declare Sub WarrantForArrest(Process As String)
Declare Sub DeleteXMLItemValue (FieldName As String, XMLNodeName List As String)
Declare Sub CertificateOfTechnician(Process As String)
Declare Sub TelewarrantToObtain(Process As String)
Declare Sub SearchWarrant(Process As String)
Declare Sub InformationObtainBodSub(Process As String)
Declare Sub CaseSubmission(Process As String)
Declare Sub ReturnFirearms(Process As String)
Declare Sub ApplicationSubOrder(Process As String)
Declare Sub CourtBriefIndex (Process As String)
Declare Sub NoticeSuspendDriverLicence(Process As String)
Declare Sub NoticeToProduceBreathCertificate(Process As String)
Declare Sub DNAInformationInsert(Process As String)
Declare Sub Statement(Process As String)
Declare Sub ApplicationBodilySubstances(Process As String)
Declare Sub CrownBriefCover(Process As String)
Declare Sub NoticeOfIncreasedPenalty(Process As String)
Declare Sub WitnessList(Process As String)
Declare Sub CertificateOfPhotographer(Process As String)
Declare Sub ApplicationOrderDisposition(Process As String)
Declare Sub WarrantAuthorizedEntry(Process As String)
Declare Sub FormDatedInformation
Declare Sub InformationObtainSWtoSeizeFirearms(Process As String)
Declare Sub InformationObtainWE(Process As String)
Declare Public Function RecognizanceOfKeepThePeace(process As String)
Declare Function DatetoWords(indate As notesdatetime) As String
Declare Sub WarrantRemandingPrisoner(Process As String)
Declare Sub NoticeofHearing(Process As String)
Declare Sub RetrieveCBRMSDocData (UNID As String, FormName As String)
Declare Sub NoticeOfTrial(Process As String)
Declare Sub StatementCivilianWitness(Process As String)
Declare Sub ReportToJudge(Process As String)
Declare Sub RecogEnteredBeforeOfficer(Process As String)
Declare Sub CertificateOfPractitioner(Process As String)
Declare Sub NoticeToProduceDocuments(Process As String)
Declare Sub WarrantEnterDwelling(Process As String)
Declare Function GetLookupDatabase
Declare Sub RemoveCBTmpFields
Declare Function DaySuffix(DayNumber As Integer) As String
Declare Sub RetrieveCBDlgData
Declare Sub AuthorizationMedicalRelease(process As String)
Declare Sub InformationObtainSW(Process As String)
Declare Sub OrderTakeBodilySubstances(Process As String)
Declare Sub NoticeToCCCAndCEA(Process As String)
Declare Sub ReplaceXMLItemValue(FieldName As String, XMLNodeName List As String, XMLNodeValue As Variant)
Declare Function GetStatutesDatabase

'++LotusScript Development Environment:2:5:(Declarations):0:10
Public thisUI As NotesUIDocument
Public CurrentDoc As NotesDocument
Public CurrentDatabase As NotesDatabase
Public CBForm As NotesDocument
Public NoteIDs As String
Public AddNoteIDs() As String
Public AddNoteIDs2 As String
Public ContinuePrompting As Integer

Dim ws As NotesUIWorkspace

' Dim Notesdatabases
Dim lookupdb As notesdatabase

'Dim NotesViews
Dim view As notesview

' Dim NotesDocuments
Dim occdoc As notesdocument
Dim doc As NotesDocument
Dim ParentDoc As NotesDocument

' Dim Strings
Dim StrTmp As String
Dim StrTmp2 As String
Dim FieldName As String
Dim NL As String

' Dim Lists
Dim FieldList List As String

' Dim Integers
Dim IntTmp As Integer
Dim flag As Integer

' Dim Variants
Dim v As Variant

' Dim NotesItems
Dim item As notesitem
Dim employeeview As notesview
Dim fullname As String, lname As String, fname As String
Dim Dated As notesdatetime








'++LotusScript Development Environment:2:2:AffidavitPropertyOwner:1:8
Sub AffidavitPropertyOwner(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim i As Integer
	
	Select Case Process
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Owner: " & CurrentDoc.CBTmpPropertyOwner(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		FieldList("Owner")=CurrentDoc.CBTmpPropertyOwner(0)		
		FieldList("Property")=CurrentDoc.CBTmpProperty(0)	
		FieldList("PropertyValue")=CurrentDoc.CBTmpPropertyValue(0)	
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpTHAT
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("List") = StrTmp
		
		FieldList("Statement")=CurrentDoc.CBTmpStatement(0)	
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:AffidavitOfService:1:8
Sub AffidavitOfService(Process As String)
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpServedName(0) &_
		" (" & CurrentDoc.CurrentOccNum(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber")=CurrentDoc.CurrentOccNum(0)	
		FieldList("ServedName")=CurrentDoc.CBTmpServedName(0)				
		FieldList("CopyOf")=CurrentDoc.CBTmpCopyOf(0)	
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:InjuryOrDamageInformation:1:8
Sub InjuryOrDamageInformation(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim ThreatDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
			Charges=Charges & RetrieveItemValue(doc, "Charge")(0) & NL
		End Forall
		
		StrTmp=StrTmp & NL & "Charges: " & Charges
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Informant") = CurrentDoc.CBTmpInformant(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		
		' Vicitm Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpVictimUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("Victim")=StrTmp
		
		' Break out Threat Date Information
		Set item = CurrentDoc.GetFirstItem("CBTmpThreatDate")
		If item.Type = 1024 Then
			Set ThreatDate=item.datetimevalue
			Select Case Day(ThreatDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(ThreatDate.lslocaltime) & StrTmp
			FieldList("ThreatDay")=StrTmp
			FieldList("ThreatMonth")=Format(ThreatDate.lslocaltime,"mmmm")
			FieldList("ThreatYear")=Year(ThreatDate.lslocaltime)
		End If
		
		If Not Strleft(CurrentDoc.CBTmpThreatLocation(0)," of ") = "" Then
			FieldList("ThreatLocation1")= Trim(Strleft(CurrentDoc.CBTmpThreatLocation(0),"of"))
			FieldList("ThreatLocation2")= Trim(Strright(CurrentDoc.CBTmpThreatLocation(0),"of"))
		Else
			FieldList("ThreatLocation1")= CurrentDoc.CBTmpThreatLocation(0)
		End If
		FieldList("ThreatWords")= CurrentDoc.CBTmpThreat(0)
		
		' Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("AccusedName") = RetrieveItemValue(doc, "Surname")(0) &_
		" " & RetrieveItemValue(doc, "Given1")(0) & " "&_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Given3")(0)
		FieldList("AccusedAddress") = RetrieveItemValue(doc, "StreetNumber")(0) &_
		" " & RetrieveItemValue(doc, "Street")(0) &_
		NL & RetrieveItemValue(doc, "TownCity")(0) &_
		", " & RetrieveItemValue(doc, "Prov")(0) &_
		" " & RetrieveItemValue(doc, "PostalCode")(0)
		FieldList("AccusedArrestMethod") = doc.ArrestMethod(0)
		FieldList("AccusedSex") = RetrieveItemValue(doc, "Sex")(0)
		If Isdate(doc.DOB(0)) Then
			FieldList("AccusedDOBMonth") = Month(RetrieveItemValue(doc, "DOB")(0))
			FieldList("AccusedDOBDay") = Day(RetrieveItemValue(doc, "DOB")(0))
			FieldList("AccusedDOBYear") = Year(RetrieveItemValue(doc, "DOB")(0))
		End If
		FieldList("AccusedDLNo") = RetrieveItemValue(doc, "DLNumber")(0)
		'FieldList("AccusedPlateNo") = RetrieveItemValue(doc, "LicNum")(0)
		If Isdate(CurrentDoc.NextCourtDate(0)) Then
			FieldList("AccusedReturnDate") = Cstr(Format(CurrentDoc.NextCourtDate(0),"dd mmmm"))
			FieldList("AccusedReturnDateYear") = Cstr(Year(CurrentDoc.NextCourtDate(0)))
		End If
		
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			If Len(Strleft(RetrieveItemValue(doc, "Charge")(0),":")) > 0 Then
				Charges = Charges + Strleft(RetrieveItemValue(doc, "Charge")(0),":") & NL
			Else	
				Charges = Charges + RetrieveItemValue(doc, "Charge")(0) & NL
			End If
		End Forall
		FieldList("AccusedCharges") = Charges
		
		FieldList("AccusedCourtRoom") = CurrentDoc.CBTmpCourtRoom(0)
		FieldList("AccusedCourtAddress") = CurrentDoc.CBTmpCourtAddress(0)
		FieldList("AccusedOfficer") = CurrentDoc.AssignedTo(0)
		FieldList("AccusedOfficerBadge") = CurrentDoc.AssignedToBadge(0)
		FieldList("AccusedOfficerDistrict") = CurrentDoc.AssignedToDistrict(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:SupplementaryReport:1:8
Sub SupplementaryReport(Process As String)
	Set ws = New NotesUIWorkspace
	Dim ns As New NotesSession
	Dim nam As NotesName
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		' The Choices need to be refreshed from RMS everytime
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		
		If CBForm.isnewnote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
			
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Supplementary"				
					item.appendtotextlist Doc.Subject(0) & " (" & doc.OccurrenceNumber(0) & ") " & doc.SuppDate(0) & "|" & doc.UniversalID		
				End Select
				
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		
	Case "CreateDlg"
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpSuppReportList(0))
		Set occdoc = OccurrenceDoc(doc)
		
		StrTmp=Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " &  CBForm.CBFormName(0) & " (" & doc.OccurrenceNumber(0) & ") " & doc.Subject(0))
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  occdoc.IncidentType(0) & "  Occurred at " & Cstr(occdoc.TimeDateCommitted(0)) & " Status: " & occdoc.InvestigationStatus(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		Set item = doc.GetFirstItem("SupplementaryInfo")
		Call CBForm.CopyItem(item,"CBRichText")
		
		FieldList("OccurrenceNumber")=occdoc.OccurrenceNumber(0)	
		FieldList("OccType")=occdoc.IncidentType(0)				
		FieldList("StartDate")=Format(occdoc.TimeDateCommitted(0),"DD MMM YYYY")
		FieldList("StartTime")=Format(occdoc.TimeDateCommitted(0),"HH:MM AMPM")
		FieldList("OccStatus")=occdoc.InvestigationStatus(0)
		
		Set nam = ns.CreateName(doc.ReportingOfficer(0))
		StrTmp = doc.ReportingOfficerRank(0)	
		StrTmp = StrTmp & " " & Left(nam.Common,1) & ". "
		StrTmp = StrTmp & Strright(nam.Common," ") & " #"
		StrTmp = StrTmp & doc.ReportingOfficerBadge(0) & " "
		StrTmp = StrTmp & doc.Agency(0) & " "
		StrTmp = StrTmp & doc.ReportingOfficerDistrict(0)
		FieldList("RepOfficerName")=StrTmp
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:OccurrenceReport:1:8
Sub OccurrenceReport(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
		' The Choices need to be refreshed from RMS everytime
		Const ListEntryConstant = |"Supp ("+@Name([CN];ReportingOfficer)+"):"+Subject|
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		If CBForm.IsNewNote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Custom Form","Supplementary"
					v=Evaluate(ListEntryConstant,doc)
					v=v(0)  & "|" & doc.UniversalID
					item.appendtotextlist v
				End Select
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		
	Case "CreateDlg"
		
		Const OccViewDataConstant=|@Implode(@Trim(@If(Delete = "Delete";
		"[[[Marked Deleted - " + DeletionReason + "]]]"; "") :
		(@If(ViewDisplay!="";ViewDisplay;Form = "Registration";
		OccurrenceSynopsis; "Patrol Area:  (" + PatrolArea + ")  "
		+@Implode( @Trim(ComplaintType:IncidentType);", ")):
		@Implode(@Trim(@Implode(StreetNumber:Street;" "):TownCity);", "):
		LocationDetail:@Implode( @Trim(@Text(TimeDateCommitted) : @Text(TimeDateTo));" > ") ));@Newline)|
		
		Const SuppViewDataConstant=|"Supp ("+@Name([CN];ReportingOfficer)+"):"+Subject|
		StrTmp=CurrentDoc.CBTmpCurrentOccUNID(0)
		Set doc=CurrentDatabase.GetDocumentbyUNID(StrTmp)
		v=Evaluate(OccViewDataConstant,doc)
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpCurrentOccNum(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp= StrTmp & NL & v(0)
		CBForm.CBFormLongDetails=StrTmp
		StrTmp=""
		If CurrentDoc.CBTmpOccDocList(0)<>"" Then
			Forall Supps In CurrentDoc.CBTmpOccDocList
				Set doc=CurrentDatabase.getdocumentbyUNID(Supps)
				v=Evaluate(SuppViewDataConstant,doc)
				StrTmp=StrTmp & NL & v(0)
			End Forall
		End If
		
		If StrTmp<>"" Then
			CBForm.CBFormLongDetails=CBForm.CBFormLongDetails(0) & NL & StrTmp
		End If
		' Set the Choices field to blank because they will always be refreshed directly from the RMS
		CurrentDoc.CBTmpChoices=""
		
	Case "CreateForm"
		StrTmp = ""
		CBForm.OccurrenceNumber=CurrentDoc.CurrentOccNum(0)
		CBForm.CurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
		' An Occ will include all persons, property and charges along with any supps the user chooses.
		' The only NoteIDs stored are the Supps selected by the user. All other IDs will be computed on the fly during the print
		Forall SuppDocsUNID In CurrentDoc.CBTmpOccDocList
			' a blank will be present if no selection was made
			If CurrentDoc.CBTmpOccDocList(0)<>"" Then
				'Set doc=CurrentDatabase.getdocumentbyUNID(SuppDocsUNID)
				StrTmp=StrTmp & SuppDocsUNID & ";"
			End If
		End Forall
		CBForm.IPUnids=StrTmp
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:SetCBForm:1:8
Sub SetCBForm
	Dim StrTmp As String
	Dim session As New notessession
	' If the currently selected doc in the DocumentList has been removed from the db
	' then ignore the error and continue
	On Error Resume Next
	StrTmp=CurrentDoc.DocumentList(0)
	If StrTmp<>"" Then
		Set CBForm=CurrentDatabase.GetDocumentbyUNID(StrTmp)
	End If
End Sub

'++LotusScript Development Environment:2:1:OccurrenceDoc:1:8
Public Function OccurrenceDoc(doc As NotesDocument) As NotesDocument
	Dim pDoc As NotesDocument
	
	On Error Goto ErrHighest
	
	Set pDoc = doc
	Do While pDoc.ParentDocumentUNID <> ""
		Set pDoc = pDoc.ParentDatabase.GetDocumentByUNID( pDoc.ParentDocumentUNID )
		If pDoc Is Nothing Then
			Set pDoc = doc
			Exit Do
		End If
	Loop
	Set OccurrenceDoc = pDoc
	
ErrHighest:
	
	Exit Function
End Function

'++LotusScript Development Environment:2:2:PromiseToAppear:1:8
Sub PromiseToAppear(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As notesdatetime, FingerprintDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Court Date/Time: " & Format(CurrentDoc.CBTmpCourtDate(0),"yyyy-mmm-dd") & " " & _
		Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM") & "  Court Location: " & CurrentDoc.CBTmpCourtLocation(0) & _
		"  Court Room: " & CurrentDoc.CBTmpCourtRoom(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		FieldList("AccusedDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		FieldList("AccusedOccupation")=doc.Occupation(0)
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
			'Charges=Charges & RetrieveItemValue(doc, "Charge")(0) & NL
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		
		FieldList("Charges")=Charges
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDayName")=Format(CourtDate.lslocaltime,"dddd")
		FieldList("CourtDay")=StrTmp
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
		FieldList("CourtYear")=Year(CourtDate.lslocaltime)
		FieldList("CourtTime")=Left(Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM"),5)
		StrTmp=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		If Right(StrTmp,2) = "AM" Then
			FieldList("CourtTimeAMPM")="fore"
		Else
			FieldList("CourtTimeAMPM")="after"
		End If
		
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		
		' Break out the pieces for the Fingerprint date
		Set item = CurrentDoc.GetFirstItem("CBTmpFingerprintDate")
		If item.Type = 1024 Then
			Set FingerprintDate=item.datetimevalue
			Select Case Day(FingerprintDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(FingerprintDate.lslocaltime) & StrTmp
			FieldList("FingerprintDayName")=Format(FingerprintDate.lslocaltime,"dddd")
			FieldList("FingerprintDay")=StrTmp
			FieldList("FingerprintMonth")=Format(FingerprintDate.lslocaltime,"mmmm")
			FieldList("FingerprintYear")=Year(FingerprintDate.lslocaltime)
			FieldList("FingerprintTime")=Left(Format(CurrentDoc.CBTmpFingerprintTime(0),"h:mm AM/PM"),5)
			StrTmp=Format(CurrentDoc.CBTmpFingerprintTime(0),"h:mm AM/PM")
			If Right(StrTmp,2) = "AM" Then
				FieldList("FingerprintTimeAMPM")="fore"
			Else
				FieldList("FingerprintTimeAMPM")="after"
			End If	
		End If
		
		FieldList("FingerprintPoliceStation")=CurrentDoc.CBTmpFingerprintLocation(0)
		FieldList("FingerprintPoliceStationAddress")=CurrentDoc.CBTmpFingerprintAddress(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:1:MonthName:1:8
Public Function MonthName(Monthnumber As Integer) As String
	Select Case MonthNumber
	Case 1
		MonthName = "January"
	Case 2
		MonthName = "February"
	Case 3
		MonthName = "March"
	Case 4
		MonthName = "April"
	Case 5
		MonthName = "May"
	Case 6
		MonthName = "June"
	Case 7
		MonthName = "July"
	Case 8
		MonthName = "August"
	Case 9
		MonthName = "September"
	Case 10
		MonthName = "October"
	Case 11
		MonthName = "November"
	Case 12		
		MonthName = "December"
	End Select
End Function

'++LotusScript Development Environment:2:2:DomesticViolenceReport:1:8
Sub DomesticViolenceReport(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		' The Choices need to be refreshed from RMS everytime
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		
		If CBForm.isnewnote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
			
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Domestic Violence Supplementary"				
					item.appendtotextlist Doc.DVVictim(0) & "/" & doc.DVAccused(0) & "|" & doc.UniversalID		
				End Select
				
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		
	Case "CreateDlg"
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpDomesticViolenceList(0))
		StrTmp=Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " &  CBForm.CBFormName(0) & " " & doc.OccurrenceNumber(0) & " (Occurred: " & Cstr(Doc.DVIncidentDateTime(0)) & ")" )
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Accused: " & doc.DVAccused(0) & "   Victim: " & doc.DVVictim(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		StrTmp=CurrentDoc.CBTmpDomesticViolenceList(0)
		CBForm.IPUnids=StrTmp
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:SWtoSeizeFirearms:1:8
Sub SWtoSeizeFirearms(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpHeldBy(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Search " & CurrentDoc.CBTmpPremisesAt(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber") =  CurrentDoc.OccurrenceNumber(0)
		
		StrTmp = ""
		
		FieldList("Informant") = CurrentDoc.CBTmpInformant(0)
		FieldList("HeldBy") = CurrentDoc.CBTmpHeldBy(0)
		FieldList("Individual") = CurrentDoc.CBTmpIndividual(0)
		FieldList("Dwelling") = CurrentDoc.CBTmpDwelling(0)
		FieldList("PremisesAt") = CurrentDoc.CBTmpPremisesAt(0)
		FieldList("EntryHours") = CurrentDoc.CBTmpEntryHours(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:SubpeonaToWitness:1:8
Sub SubpeonaToWitness(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As notesdatetime
	Dim OffenceDate As NotesDateTime
	Dim CommittedDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim OffenceLocation As String
	Dim AdditionalLocation As String
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpWitness(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Accused: " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpWitnessUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("WitnessName")=StrTmp
		
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("WitnessAddress")=StrTmp
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			If OffenceLocation="" Then
				OffenceLocation=RetrieveItemValue(doc, "CommittedTown")(0)
			Else
				If OffenceLocation<>RetrieveItemValue(doc, "CommittedTown")(0) Then
					AdditionalLocation=RetrieveItemValue(doc, "CommittedTown")(0)
				End If
			End If
			
			' Build a string of charges
			'Charges=Charges & RetrieveItemValue(doc, "Charge")(0) & NL
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		
		If EarliestDate=LatestDate Then
			' all offences occurred on the same date
			StrTmp="on or about the " & DaySuffix(Day(EarliestDate)) & " day of " & Format(EarliestDate,"MMMM, YYYY")			
		Else
			' offences occurred on a range of dates
			StrTmp="commencing on or about the " & DaySuffix(Day(EarliestDate)) & " day of " & Format(EarliestDate,"MMMM, YYYY") & " and ending on or about the " & DaySuffix(Day(LatestDate)) & " day of " & Format(LatestDate,"MMMM YYYY")
		End If
		FieldList("OffenceDate")=StrTmp
		FieldList("OffenceLocation")=OffenceLocation
		If AdditionalLocation<>"" Then
			FieldList("AdditionalLocation")="and elswhere in the Province of Ontario"
		Else
			FieldList("AdditionalLocation")=""
		End If
		
		FieldList("Charges")=Charges
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDay")=StrTmp
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"MMMM")
		FieldList("CourtYear")=Format(CourtDate.lslocaltime,"YYYY")
		FieldList("CourtTime")=Format(CurrentDoc.CBTmpCourtTime(0),"H:MM AM/PM")
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpAppearanceReason
			StrTmp = StrTmp & data & ", "
		End Forall
		FieldList("AppearanceReason")=Trim(StrTmp)
		FieldList("BringTheFollowing")=CurrentDoc.CBTmpBringTheFollowing(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:AuthorizeTakeBodilySubstances:1:8
Sub AuthorizeTakeBodilySubstances(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim DDate As NotesDateTime
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Peace Officer: " & CurrentDoc.CBTmpPeaceOfficer(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OfficerRegion")=CurrentDoc.CBTmpRegion(0)
		
		StrTmp=""
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		If Not doc Is Nothing Then
			StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
			FieldList("Offender")=StrTmp
			FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)
		End If
		
		FieldList("PeaceOfficer") = CurrentDoc.CBTmpPeaceOfficer(0)		
		
		If CurrentDoc.HasItem("CBTmpDerivedDate") Then
			If CurrentDoc.CBTmpDerivedDate(0)<>"" Then
				Set item = CurrentDoc.GetFirstItem("CBTmpDerivedDate")
				Set DDate=item.datetimevalue
				Select Case Day(DDate.lslocaltime)
				Case 1, 21, 31
					StrTmp="st"
				Case 2, 22
					StrTmp="nd"
				Case 3, 23
					StrTmp="rd"
				Case Else
					StrTmp="th"
				End Select
				StrTmp=Day(DDate.lslocaltime) & StrTmp
				FieldList("DerivedDate")=Format(DDate.lslocaltime,"dd/mm/yyyy")
			End If
			FieldList("Reasons")=CurrentDoc.CBTmpReasons(0)
		End If
		
		FieldList("Circumstances")=CurrentDoc.CBTmpCircumstances(0)
		
		FormDatedInformation
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:Summons:1:8
Sub Summons(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CommittedDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim OffenceLocation As String
	Dim AdditionalLocation As String
	Dim Charges As String
	Dim CourtDate As notesdatetime, FingerprintDate As notesdatetime, OffenceDate As notesdatetime
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Court Date: " & Format(CurrentDoc.CBTmpCourtDate(0),"yyyy-mmm-dd") 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		
		FieldList("AccusedDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			If OffenceLocation="" Then
				OffenceLocation=doc.CommittedTown(0)
			Else
				If OffenceLocation<>doc.CommittedTown(0) Then
					AdditionalLocation=doc.CommittedTown(0)
				End If
			End If
			
			'Modified 12Mar2013 Brian Henry to use
			' contents of charge field which is now editable in both adult and YCJA versions
			' +++++++++++++
			' Build a string of charges
			'Charges = Charges & doc.Charge(0)& NL
		End ForAll

			Charges = CurrentDoc.CBTmpCharges(0)
			FieldList("Charges") = Charges
			' +++++++++++++
		
		If EarliestDate=LatestDate Then
			' all offences occurred on the same date
			StrTmp="on or about " & Format(EarliestDate,"DD MMM YYYY")			
		Else
			' offences occurred on a range of dates
			StrTmp="commencing on or about " & Format(EarliestDate,"DD MMM YYYY") & " and ending on or about " & Format(LatestDate,"DD MMM YYYY")
		End If
		
		Set OffenceDate = New NotesDateTime(Format(EarliestDate,"Short Date"))
		Select Case Day(OffenceDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(OffenceDate.lslocaltime) & StrTmp
		FieldList("OffenceDay")=StrTmp
		FieldList("OffenceMonth")=Format(OffenceDate.lslocaltime,"mmmm")
		FieldList("OffenceYear")=Year(OffenceDate.lslocaltime)
		FieldList("OffenceDate")=StrTmp
		FieldList("OffenceLocation")=OffenceLocation
		If AdditionalLocation<>"" Then
			FieldList("AdditionalLocation")="and elswhere in the Province of Ontario"
		Else
			FieldList("AdditionalLocation")=""
		End If
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDayName")=Format(CourtDate.lslocaltime,"dddd")
		FieldList("CourtDay")=StrTmp
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
		FieldList("CourtYear")=Year(CourtDate.lslocaltime)
		
		FieldList("CourtTime")=Left(Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM"),5)
		StrTmp=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		If Right(StrTmp,2) = "AM" Then
			FieldList("CourtTimeAMPM")="fore"
		Else
			FieldList("CourtTimeAMPM")="after"
		End If
		
		
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		FieldList("CourtDivision")=CurrentDoc.CBTmpCourtDivision(0)
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		
		' Break out the pieces for the Fingerprint date
		' First check if there is a Fingerprint date specified (changed September 28th, 2005 Brian Henry)
		If CurrentDoc.CBTmpFingerprintDate(0)<>"" Then
			Set item=CurrentDoc.GetFirstItem("CBTmpFingerprintDate")
			Set FingerprintDate=item.datetimevalue
			Select Case Day(FingerprintDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(FingerprintDate.lslocaltime) & StrTmp
			FieldList("FingerprintDayName")=Format(FingerprintDate.lslocaltime,"dddd")
			FieldList("FingerprintDay")=StrTmp
			FieldList("FingerprintMonth")=Format(FingerprintDate.lslocaltime,"mmmm")
			FieldList("FingerprintYear")=Year(FingerprintDate.lslocaltime)
			' check if fingerprint  time is specified
			If CurrentDoc.CBTmpFingerprintTime(0)<>"" Then
				FieldList("FingerprintTime")=Left(Format(CurrentDoc.CBTmpFingerprintTime(0),"h:mm AM/PM"),5)
				StrTmp=Format(CurrentDoc.CBTmpFingerprintTime(0),"h:mm AM/PM")
				If Right(StrTmp,2) = "AM" Then
					FieldList("FingerprintTimeAMPM")="fore"
				Else
					FieldList("FingerprintTimeAMPM")="after"
				End If
			End If
		End If
		FieldList("FingerprintPoliceStation")=CurrentDoc.CBTmpFingerprintLocation(0)
		FieldList("FingerprintPoliceStationAddress")=CurrentDoc.CBTmpFingerprintAddress(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:MiscellaneousCourtDocument:1:8
Sub MiscellaneousCourtDocument (Process As String)
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		ContinuePrompting = False		
		CBForm.makeresponse CurrentDoc		
		CreateCBDlgData		
		CreateCBFormData		
		CBForm.save True,True			
		ThisUI.refresh	
	Case "CreateDlg"		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpMiscCourtDocDesc(0) & ")"
		CBForm.CBFormShortDetails=StrTmp		
		CBForm.CBFormLongDetails=StrTmp & NL & "Status:" & CurrentDoc.CBTmpMiscCourtDocStatus(0)
	Case "CreateForm"		
		'	The Miscellaneous Court Document is a placeholder for a form created outside of the court brief
		'	It doesn't print from within court brief
		FieldList("MiscCourtDocStatus")= CurrentDoc.CBTmpMiscCourtDocStatus(0)
	End Select	
End Sub

'++LotusScript Development Environment:2:2:AffidavitSeizingProperty:1:8
Sub AffidavitSeizingProperty(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim wkDate As notesdatetime
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Seized Information: " & Format(CurrentDoc.CBTmpSeizedDate(0),"yyyy-mmm-dd") & "  " &_
		Format(CurrentDoc.CBTmpSeizedTime(0),"h:mm AM/PM") & " at " & CurrentDoc.CBTmpSeizedLocation(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		
		If CurrentDoc.CBTmpTypePerson(0) = "Officer" Then
			StrTmp = ""
			If lookupdb.IsOpen Then
				Set employeeview = lookupdb.GetView("Employee by Name")
				Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpPeaceOfficer(0),True)
				If Not doc Is Nothing Then
					If Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/") <> "" Then
						fullname = Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/")
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					Else
						fullname = CurrentDoc.CBTmpPeaceOfficer(0)
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					End If
					StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname & " Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
				Else
					StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
				End If
			Else
				StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
			End If		
			FieldList("AffidavitName")=StrTmp
			FieldList("Statement")="a peace officer,"
		Else
			StrTmp = ""
			If lookupdb.IsOpen Then
				Set employeeview = lookupdb.GetView("Employee by Name")
				Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpDirectionOfficer(0),True)
				If Not doc Is Nothing Then
					If Strleft(CurrentDoc.CBTmpDirectionOfficer(0),"/") <> "" Then
						fullname = Strleft(CurrentDoc.CBTmpDirectionOfficer(0),"/")
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					Else
						fullname = CurrentDoc.CBTmpDirectionOfficer(0)
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					End If
					StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname & " Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
				Else
					StrTmp = CurrentDoc.CBTmpDirectionOfficer(0)
				End If
			Else
				StrTmp = CurrentDoc.CBTmpDirectionOfficer(0)
			End If		
			FieldList("AffidavitName")=CurrentDoc.CBTmpCivilianName(0)
			FieldList("Statement")="a person under the direction of a peace officer " & StrTmp
		End If
		
		FieldList("PersonLocation")= CurrentDoc.CBTmpPersonLocation(0)
		FieldList("PersonRegion")=CurrentDoc.CBTmpPersonRegion(0)
		FieldList("SeizedDate")=Format(CurrentDoc.CBTmpSeizedDate(0),"mmmm dd, yyyy")
		FieldList("SeizedTime")=Format(CurrentDoc.CBTmpSeizedTime(0),"h:mm AM/PM")
		FieldList("SeizedLocation")=CurrentDoc.CBTmpSeizedLocation(0)
		FieldList("TurnedOverDate")=Format(CurrentDoc.CBTmpDateTurnedOver(0),"mmmm dd, yyyy")
		FieldList("TurnedOverTime")=Format(CurrentDoc.CBTmpTimeTurnedOver(0),"h:mm AM/PM")
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:AudioVideoSynopsis:1:8
Sub AudioVideoSynopsis(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim tempdoc As NotesDocument
	Dim leftdata As String
	Dim rightdata As String
	Dim count As Integer
	Dim otherOfficers As String
	Dim videoids As String
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Name: " & CurrentDoc.CBTmpSubjectInterviewed(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		FieldList("PoliceService")= CurrentDoc.Agency(0)
		FieldList("PoliceCaseID")= CurrentDoc.DefaultPoliceCaseID(0)
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		FieldList("InterviewDate")=Format(CurrentDoc.CBTmpInterviewDate(0),"mmmmm dd, yyyy")		
		FieldList("StartTime")=Format(CurrentDoc.CBTmpStartTime(0),"hh:mm AM/PM")	
		FieldList("EndTime")=Format(CurrentDoc.CBTmpEndTime(0),"hh:mm AM/PM")	
		FieldList("StartCounter")=CurrentDoc.CBTmpStartCounter(0)
		FieldList("EndCounter")=CurrentDoc.CBTmpEndCounter(0)
		
		'Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpSubjectUNID(0))
		'StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		'RetrieveItemValue(doc, "Given2")(0) & " " &_
		'RetrieveItemValue(doc, "Surname")(0)
		'StrTmp=Fulltrim(StrTmp)
		
		FieldList("SubjectName")=CurrentDoc.CBTmpSubjectInterviewed(0)
		'FieldList("SubjectDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		FieldList("SubjectDOB")=Format(CurrentDoc.CBTmpSubjectDOB(0) ,"yyyy/mm/dd")
		'FieldList("SubjectType")=RetrieveItemValue(doc, "Type")(0)
		FieldList("SubjectType")=CurrentDoc.CBTmpSubjectType(0)
		
		' Investigating Officer
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpInvestigatingOfficer(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpInvestigatingOfficer(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpInvestigatingOfficer(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpInvestigatingOfficer(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname &_
				" Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpInvestigatingOfficer(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpInvestigatingOfficer(0)
		End If		
		FieldList("InvestigatingOfficer")=StrTmp
		
		' Other Officers Present
		Forall data In CurrentDoc.CBTmpOtherOfficers
			StrTmp = ""
			If lookupdb.IsOpen Then
				Set employeeview = lookupdb.GetView("Employee by Name")
				Set doc=employeeview.GetDocumentByKey(data,True)
				If Not doc Is Nothing Then
					If Strleft(data,"/") <> "" Then
						fullname = Strleft(data,"/")
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					Else
						fullname = data
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					End If
					StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname &_
					" Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
				Else
					StrTmp = data
				End If
			Else
				StrTmp = data
			End If		
			otherOfficers = otherOfficers & StrTmp & NL
		End Forall
		FieldList("OtherOfficers")=otherOfficers
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
		StrTmp=""
		Forall Field In FieldList
			StrTmp=StrTmp & "<" &  Listtag(Field) & ">"  & Field & "</" & Listtag(Field) & ">"
		End Forall
		CBForm.CBFormData=StrTmp
		StrTmp = ""
		
		' VideoTaped Outlines
		Forall data In CurrentDoc.CBTmpVideoData
			Set tempdoc = CurrentDatabase.CreateDocument
			tempdoc.Form = "IPTemp"
			tempdoc.CBFormData = CBForm.CBFormData(0)
			' Video Counter
			leftdata = Strleft(data,"~")
			rightdata = Strright(data,"~")
			StrTmp = StrTmp + leftdata			
			tempdoc.VideoCounter = leftdata
			' Video Outline
			StrTmp = StrTmp + "           " + rightdata + NL 
			tempdoc.VideoOutline = rightdata
			Call tempdoc.save(True,False)
			videoids = videoids + tempdoc.UniversalID+ ";"
		End Forall
		
		FieldList("VideoOutlineStatements")=StrTmp		
		CBForm.IPUnids=videoids
	End Select
End Sub

'++LotusScript Development Environment:2:2:TelewarrantToEnterDwelling:1:8
Sub TelewarrantToEnterDwelling(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim  EntryFromDate As notesdatetime
	Dim  EntryToDate As notesdatetime
	Dim IssuedDate As notesdatetime
	
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Dwelling: " & CurrentDoc.CBTmpDwelling(0) 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB")=Format(doc.DOB(0),"yyyy/mm/dd")
		FieldList("AccusedOccupation") = doc.Occupation(0)
		StrTmp = CurrentDoc.CBTmpAccusedTown(0)
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("AccusedTown1")= Trim(Strleft(StrTmp,"of"))
			FieldList("AccusedTown2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("AccusedTown2")= StrTmp
		End If
		
		FieldList("AccusedProv1")="Province"
		FieldList("AccusedProv2")=CurrentDoc.CBTmpAccusedProv(0)
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Authorization to enter a dwelling house information
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("PeaceOfficer")=CurrentDoc.CBTmpPeaceOfficer(0)
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryFromDate")
		If item.Type = 1024 Then
			Set EntryFromDate=item.datetimevalue
			Select Case Day(EntryFromDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(EntryFromDate.lslocaltime) & StrTmp
			FieldList("EntryFromDay")=StrTmp
			FieldList("EntryFromMonth")=Format(EntryFromDate.lslocaltime,"mmmm")
			FieldList("EntryFromYear")=Year(EntryFromDate.lslocaltime)
			FieldList("EntryFromTime")=Left(Format(CurrentDoc.CBTmpEntryFromTime(0),"h:mm AM/PM"),5)
		End If
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryToDate")
		If item.Type = 1024 Then
			Set EntryToDate=item.datetimevalue
			Select Case Day(EntryToDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(EntryToDate.lslocaltime) & StrTmp
			FieldList("EntryToDay")=StrTmp
			FieldList("EntryToMonth")=Format(EntryToDate.lslocaltime,"mmmm")
			FieldList("EntryToYear")=Year(EntryToDate.lslocaltime)
			FieldList("EntryToTime")=Left(Format(CurrentDoc.CBTmpEntryToTime(0),"h:mm AM/PM"),5)
		End If
		
		FieldList("Conditions")=CurrentDoc.CBTmpConditions(0)
		FieldList("TownCityExecuted")=CurrentDoc.CBTmpTownCityExecuted(0)
		
		Set item=CurrentDoc.GetFirstItem("CBTmpIssuedDate")
		If item.Type = 1024 Then
			Set IssuedDate=item.datetimevalue
			Select Case Day(IssuedDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(IssuedDate.lslocaltime) & StrTmp
			FieldList("IssuedDay")=StrTmp
			FieldList("IssuedMonth")=Format(IssuedDate.lslocaltime,"mmmm")
			FieldList("IssuedYear")=Year(IssuedDate.lslocaltime)
			FieldList("IssuedTime")=Left(Format(CurrentDoc.CBTmpIssuedTime(0),"h:mm AM/PM"),5)
		End If
		
		FieldList("IssuedPlace")=CurrentDoc.CBTmpIssuedPlace(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:OrderProhibitFirearms:1:8
Sub OrderProhibitFirearms(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPeaceOfficer(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Respondent: " & CurrentDoc.CBTmpRespondent(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber") = CurrentDoc.OccurrenceNumber(0)
		FieldList("PeaceOfficer") =  CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("Agency") =  CurrentDoc.CBTmpAgency(0)
		FieldList("Respondent") =  CurrentDoc.CBTmpRespondent(0)
		FieldList("RespondentDOB")=Format(CurrentDoc.CBTmpRespondentDOB(0),"yyyy/mm/dd")
		FieldList("Namely") = CurrentDoc.CBTmpNamely(0)
		FieldList("Period") =  CurrentDoc.CBTmpYears(0)
		FieldList("Items") = CurrentDoc.CBTmpItems(0)
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpCourtOrders
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("CourtOrders") = StrTmp
		FieldList("Days") =  CurrentDoc.CBTmpDays(0)
		FieldList("EntitledPerson") =  CurrentDoc.CBTmpEntitledPerson(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:UndertakingGivenToOfficer:1:8
Sub UndertakingGivenToOfficer(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Abstain from " & CurrentDoc.CBTmpWitness(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		FieldList("Region")=CurrentDoc.JudicialRegion(0)		
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		FieldList("AccusedDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		FieldList("AccusedOccupation")=doc.Occupation(0)
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
			'Charges=Charges & RetrieveItemValue(doc, "Charge")(0)& ", "
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges") = Charges
		
		FieldList("WitnessName")=CurrentDoc.CBTmpWitness(0)
		FieldList("DesignatedJurisdiction")=Currentdoc.CBTmpDesJur(0)
		FieldList("NotifyDesignatedPerson")=Currentdoc.CBTmpNotifyPeaceOfficer(0)
		FieldList("AbstainFromPlace")=Currentdoc.CBTmpAbstainPlace(0)
		FieldList("ExceptConditions")=Currentdoc.CBTmpConditions(0)
		FieldList("PassportDesignatedPerson")=Currentdoc.CBTmpPassportPeaceOfficer(0)
		FieldList("SurrenderToDesignatedPerson")=Currentdoc.CBTmpSurrenderPeaceOfficer(0)
		FieldList("ReportTime")= Format(CurrentDoc.CBTmpReportTime(0),"h:mm AM/PM")
		FieldList("ReportToDesignatedPerson")=Currentdoc.CBTmpReportToPeaceOfficer(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpAbstainFrom
			StrTmp = StrTmp + data + ", "
		End Forall
		
		FieldList("AbstainFrom") = StrTmp
		FieldList("OtherConditions")=Currentdoc.CBTmpOtherCond(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ConsentToSearch:1:8
Sub ConsentToSearch(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPremises(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Investigating: " & CurrentDoc.CBTmpInvestigating(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		
		FieldList("Name")=CurrentDoc.CBTmpPersonName(0)
		FieldList("Investigating")=CurrentDoc.CBTmpInvestigating(0)
		FieldList("Premises")=CurrentDoc.CBTmpPremises(0)
		FieldList("Authorize")=CurrentDoc.CBTmpAuthorized(0)
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ConsentToObtainDNA:1:8
Sub ConsentToObtainDNA(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim SamplesDate As notesdatetime
	Dim ConditionsDate As notesdatetime
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpSampleFrom(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & " Advised By: " & CurrentDoc.CBTmpAdvisedBy(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		FieldList("SampleFrom")=CurrentDoc.CBTmpSampleFrom(0)
		FieldList("AdvisedBy")=CurrentDoc.CBTmpAdvisedBy(0)
		FieldList("SampleOf")=CurrentDoc.CBTmpSampleOf(0)
		FieldList("Involvement")=CurrentDoc.CBTmpInvolvement(0)
		
		Set item = CurrentDoc.GetFirstItem("CBTmpSamplesTakenDate")
		If item.Type = 1024 Then
			Set SamplesDate =item.datetimevalue
			Select Case Day(SamplesDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(SamplesDate.lslocaltime) & StrTmp
			FieldList("SamplesTakenDay")=StrTmp
			FieldList("SamplesTakenMonth")=Format(SamplesDate.lslocaltime,"mmmm")
			FieldList("SamplesTakenYear")=Year(SamplesDate.lslocaltime)
			FieldList("SamplesTakenDate")=Format(SamplesDate.lslocaltime,"yyyy/mm/dd")
			FieldList("SamplesTakenTime")=Format(CurrentDoc.CBTmpSamplesTakenTime(0),"h:mm AM/PM")
		End If
		
		FieldList("SamplesTakenBy")=CurrentDoc.CBTmpSamplesTakenBy(0)
		FieldList("QualifiedOf")=CurrentDoc.CBTmpQualifiedOf(0)
		FieldList("Process")=CurrentDoc.CBTmpProcess(0)
		FieldList("Decision")=CurrentDoc.CBTmpIndStatus(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ApplicationFirearms:1:8
Sub ApplicationFirearms(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPeaceOfficer(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Person prohibited: " & CurrentDoc.CBTmpHeldBy(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("PeaceOfficer") =  CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("Agency") =  CurrentDoc.CBTmpAgency(0)
		FieldList("Order") =  CurrentDoc.CBTmpOrder(0)
		FieldList("Person") =  CurrentDoc.CBTmpHeldBy(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:1:GetXMLItemValue:1:8
Function GetXMLItemValue(FieldName As String, XMLNodeName List As String) As Variant
	Dim DataString As String
	Dim DataStringLength As Integer
	Dim LeadingNodeNameStart As Integer
	Dim LeadingNodeNameEnd As Integer
	Dim TrailingNodeNameStart As Integer
	Dim TrailingNodeNameEnd As Integer
	Dim NodeValue As Variant
	Dim StrTmp As String
	Dim IntTmp As Integer
	Dim item As notesitem
	Dim XMLStartSegment As String
	Dim XMLEndSegment As String
	Dim v As Variant
	Const ExplodeStr=|@Explode(CBTmpField;"~")|
	
	Set item=CurrentDoc.GetFirstItem(FieldName)
	DataString=item.values(0)
	LeadingNodeNameEnd=1
	Forall NodeNameEntry In XMLNodeName
		NodeValue=""
		StrTmp="<" & NodeNameEntry & ">"
		LeadingNodeNameStart=Instr(LeadingNodeNameEnd,DataString,StrTmp)
		' Child nodes need to be found within the length of thier parent however the first node won't
		' have a parent therefore set the highwater mark so it passes the test
		If TrailingNodeNameStart=0 Then TrailingNodeNameStart=LeadingNodeNameStart
		' Child nodes will be within the length of thier parent
		If LeadingNodeNameStart<>0 And LeadingNodeNameStart<=TrailingNodeNameStart Then
			' Leading Node name was found
			LeadingNodeNameEnd=LeadingNodeNameStart + Len(StrTmp) -1
			StrTmp="</" & NodeNameEntry & ">"
			TrailingNodeNameStart=Instr(LeadingNodeNameEnd,DataString,StrTmp)
			If TrailingNodeNameStart<>0 Then
				' Trailing Node name found
				TrailingNodeNameEnd=TrailingNodeNameStart + Len(StrTmp) -1
				NodeValue=Mid(DataString,(LeadingNodeNameEnd+1),TrailingNodeNameStart-(LeadingNodeNameEnd+1))				
			Else
				' Trailing node name was not found. Indicates a malformed XML string
				Messagebox "Malformed XML String encountered", 0 , "Enterpol Court Brief"
			End If
			
		Else
			' Node was not found 
			GetXMLItemValue=False
			Exit Function
		End If	
	End Forall
	' If it made it this far then it found the node it was looking for and the value will be the last NodeValue
	' Multi-values have a ~ separator. Use the evaluate statement to explode any multi values
	CurrentDoc.CBTmpField=NodeValue
	v=Evaluate(ExplodeStr, CurrentDoc)
	GetXMLItemValue=v
	CurrentDoc.RemoveItem "CBTmpField"
End Function

'++LotusScript Development Environment:2:2:NoticeToParent:1:8
Sub NoticeToParent(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As notesdatetime, ICADate As notesdatetime
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
'		StrTmp=Format(Now,"yyyy-mmm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAdult(0) & ")"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAdult(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Accused: " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		StrTmp = CurrentDoc.CBTmpAdult(0) & NL
		StrTmp= StrTmp & Fulltrim(CurrentDoc.CBTmpStreetNumber(0) & " " & CurrentDoc.CBTmpStreet(0)) & NL &_
		CurrentDoc.CBTmpTownCity(0) & " " & CurrentDoc.CBTmpProv(0) & NL & CurrentDoc.PostalCode(0)
		
		FieldList("AdultNameAddress")=StrTmp
		FieldList("AdultRelation")=CurrentDoc.CBTmpAdultRelation(0)
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)				
		
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		
		FieldList("AccusedSex")=RetrieveItemValue(doc, "Sex")(0)
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
			'Charges=Charges & RetrieveItemValue(doc, "Charge")(0) & ", "
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges")=Charges
		'FieldList("Charges")=Left(Charges,Len(Charges)-2)
		
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpNotificationOf
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("NotificationOf")=StrTmp
		FieldList("PlaceOfDetention")=CurrentDoc.CBTmpDetention(0)
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDay")=StrTmp
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
		FieldList("CourtYear")=Year(CourtDate.lslocaltime)
		FieldList("CourtTime")=Left(Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM"),5)
		StrTmp=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		If Right(StrTmp,2) = "AM" Then
			FieldList("CourtTimeAMPM")="fore"
		Else
			FieldList("CourtTimeAMPM")="after"
		End If
		
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CourtSynopsis:1:8
Sub CourtSynopsis(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		' The Choices need to be refreshed from RMS everytime
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		
		If CBForm.isnewnote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True, False, True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
			
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Court Synopsis"				
					item.appendtotextlist doc.title(0) & "|" & doc.UniversalID		
				End Select
				
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		
	Case "CreateDlg"
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpCourtSynopsisList(0))
		StrTmp=Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " &  CBForm.CBFormName(0) & " " & doc.OccurrenceNumber(0) & " " )
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & doc.title(0)	
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		StrTmp=CurrentDoc.CBTmpCourtSynopsisList(0)
		CBForm.IPUnids=StrTmp
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ShowCauseReport:1:8
Sub ShowCauseReport(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim leftdata As String
	Dim rightdata As String
	Dim count As Integer
	
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Accused: " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("DomesticVioAttached")=CurrentDoc.CBTmpDomesticAttached(0)
		FieldList("BailOpposed")=CurrentDoc.CBTmpBailOpposed(0)
		FieldList("ReleaseWithCond")=CurrentDoc.CBTmpReleaseWithCond(0)
		FieldList("CaseType")=CurrentDoc.CBTmpCaseType(0)
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)				
		
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		FieldList("AccusedLengthAtAddress")=currentdoc.CBTmpCALength(0)
		FieldList("AccusedOwnRent")=CurrentDoc.CBTmpCAOwnRent(0)
		FieldList("AccusedResidesWith")=CurrentDoc.CBTmpResides(0)
		FieldList("AccusedPrevAddress")=CurrentDoc.CBTmpPrevAdd(0)
		FieldList("AccusedPALength")=CurrentDoc.CBTmpPALength(0)
		FieldList("AccusedOtherAssets")=CurrentDoc.CBTmpOtherAssets(0)
		FieldList("AccusedMaritalStatus")=CurrentDoc.CBTmpMaritalStatus(0)
		FieldList("AccusedEmployer")=CurrentDoc.CBTmpEmployer(0)
		FieldList("AccusedEmpLength")=CurrentDoc.CBTmpEmpLength(0)
		FieldList("AccusedSchool")=CurrentDoc.CBTmpSchool(0)
		
		' Current Charges
		' Enterpol doesn't use arrest reports
		' FieldList("ArrestReportAttached")=CurrentDoc.CBTmpArrestAttached(0)
		FieldList("CurrentCharges")=CurrentDoc.CBTmpCurrentCharges(0)
		
		
		' Outstanding Charges
		StrTmp = ""
		count = 1
		If CurrentDoc.CBTmpChargesData(0)<>"" Then
			Forall data In CurrentDoc.CBTmpChargesData
			' Jurisdiction information
				leftdata = Strleft(data,"~")
				rightdata = Strright(data,"~")
				StrTmp = StrTmp + Cstr(count) + ".  Jurisdiction: " + leftdata + NL
			' Offence information
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Offence Date: " + Format(leftdata,"DD MMM YYYY") + NL
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Offence and Section: " + leftdata + NL
			' Court Date
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Court Date: " + Format(leftdata,"DD MMM YYYY") + NL
			' Form of Release
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Form of Release: " + leftdata + NL
			' Conditions
				StrTmp = StrTmp + "     Conditions: " + rightdata + NL + NL 
				count = count + 1
			End Forall
		Else
			StrTmp="None"
		End If
		FieldList("OutstandingCharges")=StrTmp
		FieldList("ChargeFacts")=CurrentDoc.CBTmpChrgFacts(0)
		FieldList("OccurrenceReportAttached")=CurrentDoc.CBTmpOccAttached(0)
		
		' Outstanding Warrants
		StrTmp = ""
		count = 1
		If CurrentDoc.CBTmpWarrantsData(0)<>"" Then
			Forall data In CurrentDoc.CBTmpWarrantsData
			' agency information
				leftdata = Strleft(data,"~")
				rightdata = Strright(data,"~")
				StrTmp = StrTmp + Cstr(count) + ".  Agency: " + leftdata + NL
			' Warrant Type
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Warrant Type: " + leftdata + NL
			' Offence and Section
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Offence and Section (Details): " + leftdata + NL 
			' Return
				StrTmp = StrTmp + "     Return: " + rightdata + NL + NL 
				count = count + 1
			End Forall
		Else
			StrTmp="None"
		End If
		FieldList("OutstandingWarrants")=StrTmp
		FieldList("WarrantHistory")=CurrentDoc.CBTmpWrntHistory(0)
		
		' Probation/Parole/Temporary Absence
		StrTmp = ""
		count = 1
		If CurrentDoc.CBTmpProbationData(0)<>"" Then
			Forall data In CurrentDoc.CBTmpProbationData
			' Jurisdiction
				leftdata = Strleft(data,"~")
				rightdata = Strright(data,"~")
				StrTmp = StrTmp + Cstr(count) + ".  Jurisdiction: " + leftdata + NL
			' Type
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Type: " + leftdata + NL
			' Offence
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Offence: " + leftdata + NL
			' Dates
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     Start Date: " + Format(leftdata,"DD MMM YYYY") + NL
				leftdata = Strleft(rightdata,"~")
				rightdata = Strright(rightdata,"~")
				StrTmp = StrTmp + "     End Date: " + Format(leftdata,"DD MMM YYYY") + NL
			' Conditions
				StrTmp = StrTmp + "     Conditions: " + rightdata + NL + NL 	
				count = count + 1
			End Forall
		Else
			StrTmp="None"
		End If
		FieldList("ProbationParole")=StrTmp
		FieldList("OrderAttached")=CurrentDoc.CBTmpOrderAttached(0)
		
		' Reverse Onus
		Forall data In CurrentDoc.CBTmpReverseOnus
			FieldList("ReverseOnus" + Cstr(data))="Yes"
		End Forall
		
		' Criminal / Provincial History
		FieldList("CPICAttached")=CurrentDoc.CBTmpCPICAttached(0)
		FieldList("RMSDataAttached")=CurrentDoc.CBTmpRMSDataAttached(0)
		FieldList("InvolvedPerson")=CurrentDoc.CBTmpInvolvedPersonAttached(0)
		FieldList("Involvement")="Family Law Act Involvement: " + CurrentDoc.CBTmpFLAInvolvement(0) + NL + NL +_
		"Provincial Offences Involvement: " + CurrentDoc.CBTmpPOInvolvement(0)
		
		' Relevant Statements
		FieldList("RelevantStatements")=CurrentDoc.CBTmpRelevantStatements(0)
		
		' Hazards / Risks
		FieldList("SafetyConcerns")=CurrentDoc.CBTmpHRSafetyConcerns(0)
		FieldList("SafetyConcernsDetails")="Victim's Safety Concerns: " + CurrentDoc.CBTmpHRSafetyConcernsDetails(0)
		FieldList("InvolveViolence")=CurrentDoc.CBTmpHROccViolence(0)
		FieldList("InvolveViolenceDetails")="Occurrences Involving Violence: " + CurrentDoc.CBTmpHROccVioDetails(0)
		FieldList("HistoryViolence")=CurrentDoc.CBTmpHRHistoryViolence(0)
		FieldList("HistoryViolenceDetails")="History of Violence: " + CurrentDoc.CBTmpHRHistoryVioDetails(0)
		FieldList("WeaponsInvolved")=CurrentDoc.CBTmpHRWeaponsInvolved(0)
		FieldList("WeaponsRecovered")=CurrentDoc.CBTmpHRWeaponsRecovered(0)
		FieldList("WeaponsSeized")=CurrentDoc.CBTmpHRWeaponsSeized(0)
		FieldList("PossessWeapons")=CurrentDoc.CBTmpHRPossessWeapons(0)
		FieldList("WeaponsAccess")=CurrentDoc.CBTmpHRWeaponsAccess(0)
		FieldList("WeaponsRefused")=CurrentDoc.CBTmpHRWeaponsRefused(0)
		FieldList("WeaponsInformation")="Provide Information: " + CurrentDoc.CBTmpHRWeaponsInformation(0)
		FieldList("Mental")=CurrentDoc.CBTmpHRMental(0)
		FieldList("MentalDetails")="Psychiatric / Emotional of Mental Problems: " + CurrentDoc.CBTmpHRMentalDetails(0)
		FieldList("Suicide")=CurrentDoc.CBTmpHRSuicide(0)
		FieldList("SuicideDetails")="Suicide Risk: " + CurrentDoc.CBTmpHRSuicideDetails(0)		
		FieldList("Escape")=CurrentDoc.CBTmpHREscape(0)
		FieldList("EscapeDetails")="Escape Risk /Risk of Flight: " + CurrentDoc.CBTmpHREscapeDetails(0)
		FieldList("DrugsInvolved")=CurrentDoc.CBTmpHRDrugsInvolved(0)
		FieldList("DrugHistory")=CurrentDoc.CBTmpHRDrugHistory(0)
		FieldList("SubstanceInformation")="Provide Information: " + CurrentDoc.CBTmpHRSubstanceInformation(0)
		FieldList("Medical")=CurrentDoc.CBTmpHRMedical(0)
		FieldList("MedicalDetails")="Medical: " + CurrentDoc.CBTmpHRMedicalDetails(0)
		FieldList("VehicleAccess")=CurrentDoc.CBTmpHRVehicleAccess(0)
		FieldList("VehicleAccessDetails")="Accused's Access To Vehicle: " + CurrentDoc.CBTmpHRVehicleAccessDetails(0)
		FieldList("Other")=CurrentDoc.CBTmpHROther(0)
		FieldList("OtherDetails")="Other Relevant Information: " + CurrentDoc.CBTmpHROtherDetails(0)
		
		' Community Ties
		FieldList("CommunityTies")=CurrentDoc.CBTmpCommunityTies(0)
		FieldList("JurTies")=CurrentDoc.CBTmpJurTies(0)
		FieldList("JurTiesInfo")="If so, provide information: " + CurrentDoc.CBTmpJurTiesInfo(0)
		FieldList("CriminalAssoc")=CurrentDoc.CBTmpCriminalAssoc(0)
		FieldList("CriminalAssocInfo")="If so, provide information: " + CurrentDoc.CBTmpCriminalAssocInfo(0)
		
		'Police Recommendation
		Forall data In CurrentDoc.CBTmpBailReasons
			FieldList("BailReasons" + Cstr(data))="Yes"
		End Forall
		FieldList("SecureDetails")=CurrentDoc.CBTmpBSecureAttDetails(0)
		FieldList("SafetyDetails")=CurrentDoc.CBTmpBSafetyDetails(0)
		FieldList("InterferenceDetails")=CurrentDoc.CBTmpBInterferenceDetails(0)
		FieldList("ConfidenceDetails")=CurrentDoc.CBTmpBConfidenceDetails(0)
		FieldList("HoldDetails")=CurrentDoc.CBTmpBHoldDetails(0)
		
		' Recommended Conditions if Released
		FieldList("ReportTo")=CurrentDoc.CBTmpRCReportTo(0)
		FieldList("ReportToFreq")=CurrentDoc.CBTmpRCReportToFreq(0)
		FieldList("RemainWithin")=CurrentDoc.CBTmpRCRemainJur(0)
		FieldList("RemainOutsideOf")=CurrentDoc.CBTmpRCRemainOutJur(0)
		FieldList("AttendMeters")=CurrentDoc.CBTmpRCAttendMeters(0)
		FieldList("AttendNames")=CurrentDoc.CBTmpRCAttendNames(0)
		FieldList("ResideAt")=CurrentDoc.CBTmpRCResideAt(0)
		FieldList("AbstainFrom")=CurrentDoc.CBTmpRCAbstainFrom(0)
		FieldList("NotAssociate")=CurrentDoc.CBTmpRCNotAssociate(0)
		FieldList("CurfewStart")=CurrentDoc.CBTmpCurfewBeg(0)
		FieldList("CurfewEnd")=CurrentDoc.CBTmpCurfewEnd(0)
		Forall data In CurrentDoc.CBTmpReleaseCond
			FieldList("ReleaseCond" + Cstr(data))="Yes"
		End Forall
		FieldList("SurrenderTo")=CurrentDoc.CBTmpRCSurrenderTo(0)
		Forall data In CurrentDoc.CBTmpRCProtectChild
			FieldList("ProtectChild" + Cstr(data))="Yes"
		End Forall
		FieldList("Counseling")=CurrentDoc.CBTmpRCNatureofCounseling(0)
		FieldList("OtherCond")=CurrentDoc.CBTmpRCOtherCond(0)
		FieldList("Comments")=CurrentDoc.CBTmpComments(0)
		FieldList("VictimStatementAttached")=CurrentDoc.CBTmpVictStmntAttached(0)
		FieldList("WitnessStatementAttached")=CurrentDoc.CBTmpWitStmntAttached(0)
		FieldList("VictimNotified")=CurrentDoc.CBTmpVictNotified(0)
		FieldList("CrownBriefComplete")=CurrentDoc.CBTmpCrownBriefComplete(0)
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:NoticeIntroduceOffences:1:8
Sub NoticeIntroduceOffences(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.OccurrenceNumber(0)& ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Notice Given To: " & CurrentDoc.CBTmpNoticeTo(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber") = CurrentDoc.OccurrenceNumber(0)
		FieldList("NoticeDate")=Format(CurrentDoc.CBTmpNoticeDate(0),"yyyy/mm/dd")
		FieldList("NoticeTo") =  CurrentDoc.CBTmpNoticeTo(0)
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpOffences
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("Offences") = StrTmp
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpEvidence
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("Evidence") = StrTmp
		
		FieldList("Property") = CurrentDoc.CBTmpProperty(0)
		FieldList("Victim") =  CurrentDoc.CBTmpVictim(0)
	End Select
End Sub

'++LotusScript Development Environment:2:2:SummonsToAppear:1:8
Sub SummonsToAppear(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim ThreatDate As notesdatetime, CourtDate As notesdatetime
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpPersonName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Court Date/Time: " & Format(CurrentDoc.CBTmpCourtDate(0),"yyyy-mmm-dd") & " " & _
		Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM") & "  Court Location: " & CurrentDoc.CBTmpCourtLocation(0) & _
		"  Court Room: " & CurrentDoc.CBTmpCourtRoom(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber") =  CurrentDoc.OccurrenceNumber(0)
		FieldList("SummonsTo") =  CurrentDoc.CBTmpPersonName(0)
		FieldList("SummonsPersonAddress") =  CurrentDoc.CBTmpPersonAddress(0)
		FieldList("Informant") =  CurrentDoc.CBTmpInformant(0)
		FieldList("DamageProperty") =  CurrentDoc.CBTmpDamageProperty(0)
		
		' Break out the pieces for the threat date
		Set item=CurrentDoc.GetFirstItem("CBTmpThreatenedDate")
		If item.Type = 1024 Then
			Set ThreatDate=item.datetimevalue
			Select Case Day(ThreatDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(ThreatDate.lslocaltime) & StrTmp
			FieldList("ThreatDay")=StrTmp
			FieldList("ThreatMonth")=Format(ThreatDate.lslocaltime,"mmmm")
			FieldList("ThreatYear")=Year(ThreatDate.lslocaltime)
		End If
		FieldList("ThreatLocation") =  CurrentDoc.CBTmpThreatenedAt(0)
		
		FieldList("Effect") =  CurrentDoc.CBTmpEffect(0)
		
	     ' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		If item.Type = 1024 Then
			Set CourtDate=item.datetimevalue
			Select Case Day(CourtDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(CourtDate.lslocaltime) & StrTmp
			FieldList("CourtDay")=StrTmp
			
			StrTmp=Format(CourtDate.lslocaltime,"dddd")
			FieldList("CourtDayName")=StrTmp
			
			' Form doesn't require full day name
			StrTmp=Left(StrTmp,Len(StrTmp)-3)
			FieldList("CourtDayNameAbrev")=StrTmp
			
			FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
			FieldList("CourtYear")=Year(CourtDate.lslocaltime)
			FieldList("CourtTime")=Left(Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM"),5)
			StrTmp=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
			If Right(StrTmp,2) = "AM" Then
				FieldList("CourtTimeAMPM")="fore"
			Else
				FieldList("CourtTimeAMPM")="after"
			End If
		End If
		
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:1:RetrieveItemValue:1:8
Function RetrieveItemValue(SourceDoc As NotesDocument, FieldName As String) As Variant
	' This function is passed the source document, for example a charge doc, as well as the name of the field we
	' wish to retrieve data from
	' The function first looks inside the court brief itself for the data. Data is stored in the court brief in cases where the 
	' user does not have the authority (i.e. security) to update the source document or the field does not exist on the source doc
	' Once a field value is stored in the Court Brief it should be pulled from there instead of the source doc
	
	Dim XMLNodeName List As String
	Dim v As Variant
	Const ExplodeStr=|@Explode(CBTmpField;"~")|
	
	XMLNodeName("Level1")="RMSDoc=" & SourceDoc.UniversalID
	XMLNodeName("Level2")=FieldName
	
	v=GetXMLItemValue("LocalRMSDocDataXML", XMLNodeName)
	'If an array is returned then XML node values were discovered so use them
	If Isarray(v) Then
			' an XML item was found so use it
		RetrieveItemValue=v
	Else
		' there was no XML Item so go directly to the sorce doc to retrieve the data
		Set v=SourceDoc.GetFirstItem(FieldName)
		If v Is Nothing Then
			' No such field found on source doc
			' Modified May 10,2006 Brian Henry (Fix error 183 Variant does not contain a container)
			' Return an empty string. The calling routine expects an array back. The follwing code provides it.
			CurrentDoc.CBTmpField=""
			v=Evaluate(ExplodeStr, CurrentDoc)
			RetrieveItemValue=v
		Else
			' field found so use it
			' v is a notesitem data type
			RetrieveItemValue=v.values
		End If
	End If
End Function

'++LotusScript Development Environment:2:2:RequestCopies:1:8
Sub RequestCopies(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As NotesDateTime
	Dim TodayDate As New notesdatetime (Now)
	Dim Charges As String
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Requested by: " & CurrentDoc.CBTmpRequestedPerson(0) & " Agency: " &_
		CurrentDoc.CBTmpRequestedAgency(0) 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("AgencyRequesting") = CurrentDoc.CBTmpRequestedAgency(0) 
		FieldList("PersonRequesting") = CurrentDoc.CBTmpRequestedPerson(0) 
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpRequests
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("Request") = StrTmp
		
		FieldList("OtherRequest") = CurrentDoc.CBTmpOtherRequest(0)
		FieldList("CourtLocation") = CurrentDoc.CBTmpCourtLocation(0)
		FieldList("InformationNo") = CurrentDoc.CBTmpInformationNo(0)
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB")=Format(doc.DOB(0),"yyyy/mm/dd")
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)				
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		'Forall charge In CurrentDoc.CBTmpChargesUNID
		'	Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
		'	Charges=Charges & doc.charge(0) & ", "
		'End Forall
		'FieldList("AccusedCharges")=Left(Charges,Len(Charges)-2)
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("AccusedCharges")=Charges
		
		' Break out the pieces for the articles Court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp = Day(CourtDate.lslocaltime) & StrTmp & " day of " & Format(CourtDate.lslocaltime,"mmmm") &_
		", " & Year(CourtDate.lslocaltime)
		FieldList("CourtDate") = StrTmp
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:InformationObtainTWDwelling:1:8
Sub InformationObtainTWDwelling(Process As String)
	
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim FDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  CurrentDoc.CBTmpDwelling(0) & " at " & CurrentDoc.CBTmpDwellingAddress(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("InformantOf") = CurrentDoc.CBTmpInformantOf(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		FieldList("Informant") = CurrentDoc.CBTmpInformant(0)
		
		' Accussed Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		
		FieldList("AccusedDesc") = CurrentDoc.CBTmpAccusedDesc(0)
		FieldList("AccusedOccupation") = CurrentDoc.CBTmpAccusedOccupation(0)
		StrTmp = CurrentDoc.CBTmpAccusedTown(0)
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("AccusedTown1")= Trim(Strleft(StrTmp,"of"))
			FieldList("AccusedTown2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("AccusedTown1")= "Town"
			FieldList("AccusedTown2")= StrTmp
		End If
		
		FieldList("AccusedProv2")=CurrentDoc.CBTmpAccusedProv(0)
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpGroundsToArrest
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("GroundsToArrest")=StrTmp
		
		FieldList("GroundsToBelieve")=CurrentDoc.CBTmpGrounds(0)
		FieldList("WarrantReason")=CurrentDoc.CBTmpWarrantReason(0)
		
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("DwellingOcc") = CurrentDoc.CBTmpDwellingOcc(0)
		FieldList("DwellingAddress")=CurrentDoc.CBTmpDwellingAddress(0)
		
		FieldList("DwellingGrounds")=CurrentDoc.CBTmpGroundsForDwelling(0)
		FieldList("InformantKnowledge")=CurrentDoc.CBTmpInformantKnowledge(0)
		FieldList("Knowledge")=CurrentDoc.CBTmpKnowledge(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpAppRecital
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("ApplicableRecital")=StrTmp
		
		FieldList("GroundsForEntry")=CurrentDoc.CBTmpEntryGrounds(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CertificateFailedToAppear:1:8
Sub CertificateFailedToAppear(Process As String)
	On Error Goto ErrorHandle
	Dim toggle As String
	Set ws = New NotesUIWorkspace
	Dim Charges As String
	Dim FailedDate As notesdatetime
	Dim FormDate As notesdatetime
	Dim oItem As notesitem	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
		' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		ContinuePrompting = False
		'Save the new form with the pertinent data
		Call CBForm.makeresponse(CurrentDoc)
		' Save the data from the dlg box
		CreateCBDlgData
		' Save the data necessary to render the form in Intelliprint
		CreateCBFormData
		
		CBForm.save True,True
		
		'Force the view to reindex so the doc appears after the refresh
		ThisUI.refresh
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (Accused - " & CurrentDoc.CBTmpAccusedName(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Accused Charged with: " & CurrentDoc.CBTmpOffence(0) & " and in respect thereof  " &_
		CurrentDoc.CBTmpRespect(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		Set oItem = CurrentDoc.GetFirstItem("CBTmpOffence")
		With CurrentDoc
			'Forall v In oItem.Values
			'	Charges = sCharges & ( v ) & NL 
			'End Forall
			If .CBTmpFailedFlag(0) = "1" Then
				toggle = "1"
			Else
				toggle = "2"
			End If	
			Charges = CurrentDoc.CBTmpCharges(0)
			FieldList("Charges")= Charges
			FieldList("Offence")= Charges
			
			FieldList("PeaceOfficer")=.CBTmpPeaceOfficer(0)
			FieldList("AccusedName")=.CBTmpAccusedName(0)
			FieldList("Offence")= Charges
			FieldList("Respect")=.CBTmpRespect(0)		
			FieldList("FailedFlag")= .CBTmpFailedFlag(0)		
			FieldList("FailedAddress" & toggle)=.CBTmpFailedAddress(0)
			If Not .CBTmpFailedDate(0) = "" Then
				FieldList("FailedDay" & toggle) = DaySuffix(Day(.CBTmpFailedDate(0)))
				FieldList("FailedMonth" & toggle) = MonthName(Cint(Month(.CBTmpFailedDate(0))))
				FieldList("FailedYear" & toggle) = Year(.CBTmpFailedDate(0))
				FieldList("FailedTime" & toggle) =  Format(.CBTmpFailedTime(0), "Medium Time")
			End If	
			If toggle = 2 Then
				FieldList("AccusedNamed") =.CBTmpAccusedNamed(0)
			End If
			If Not .CBTmpDated(0) = "" Then				
				FieldList("FormDay") = DaySuffix(Day(.CBtmpDated(0)))
				FieldList("FormMonth") = MonthName(Cint(Month(.CBTmpDated(0))))
				FieldList("FormYear") = Year(.CBTmpDated(0))
			End If
			FieldList("FormMunicipality") = .CBTmpDatedLocation(0)
		End With
		'Date 2 still need the data info for the signed date
		
	End Select
	Exit Sub
ErrorHandle:
	ws.Prompt 1, "Error",Error & "   ErrorLine: " & Erl
End Sub

'++LotusScript Development Environment:2:2:CreateCBRMSDocData:1:8
Sub CreateCBRMSDocData (UNID As String)
	' This routine will attempt to save data back to the original RMS doc.
	' If the user doesn't have the authority to modify the original doc or the field does not exist on the
	' original doc then the data will be stored internally in this CB
	' When retriving data the code will look first internally then go out to the original
	Dim RMSDoc As notesdocument
	Dim FieldName As String
	Dim NewDocField As NotesItem
	Dim OldDocField As notesitem
	Dim OldDocModifiedFlag As Integer
	Dim XMLNodeName List As String
	Dim UpdateList List As String
	Dim XMLNodeValue As Variant
	Const CompareOldandNewValuesString="@If(@IsMember(@Text(CBTmpField1);@Text(CBTmpField2)) & @IsMember(@Text(CBTmpField2);@Text(CBTmpField1));@True;@False)"
	Set RMSDoc=CurrentDatabase.GetDocumentbyUNID(UNID)
	Dim v As Variant
	Dim StrTmp As String
	
	' Save all the CBTmpFields
	Forall item In CurrentDoc.items
		If Ucase(Left(item.name,5))="CBTMP" Then
			FieldName=Right$(item.name,Len(item.name)-5)
			XMLNodeName("Level1")="RMSDoc=" & UNID
			XMLNodeName("Level2")=FieldName
			XMLNodeValue=item.values
			
			' see if the existing person doc has a field of this name
			If RMSDoc.HasItem(FieldName) Then
				Set OldDocField=RMSDoc.GetFirstItem(FieldName)
				Set NewDocField=item
				' Use evaluate to see if the new choices are different then the old choices in the person doc
				' It is done this way to accomodate multi value fields
				Call CurrentDoc.CopyItem(OldDocField,"CBTmpField1")
				Call CurrentDoc.CopyItem(NewDocField,"CBTmpField2")
				v=Evaluate(CompareOldandNewValuesString,CurrentDoc)
				Call CurrentDoc.RemoveItem("CBTmpField1")
				Call CurrentDoc.RemoveItem("CBTmpField2")
				If Not v(0)<> False Then
					' Save the data to the original RMS Doc
					Call RMSDoc.CopyItem(NewDocField,FieldName)
					OldDocModifiedFlag=True
					' Create a list of fields that need updating. If the save later fails we will store this data locally in the Court Brief
					UpdateList(item.name)=FieldName
					
					' Since this data is stored in the RMS Doc remove any local value. If the save later fails it will again be stored locally
					DeleteXMLItemValue "LocalRMSDocDataXML", XMLNodeName
				End If
			Else
				ReplaceXMLItemValue "LocalRMSDocDataXML", XMLNodeName, XMLNodeValue
			End If
			
		End If
	End Forall
	
	If OldDocModifiedFlag=True Then
		On Error Goto UnableToSave
		RMSDoc.save True,True
	End If
	Currentdoc.save True,True
	Exit Sub
	
UnableToSave:
	If Err=4000 Then
		Messagebox "Some RMS data is being stored locally in this Court Brief because you do not " _
		& "have the authority to update the original RMS document" , 48, "Enterpol Court Brief"
		
		XMLNodeName("Level1")="RMSDoc=" & UNID
		Forall UpdateField In UpdateList
			StrTmp=Listtag(UpdateField)
			Set NewDocField=CurrentDoc.getfirstitem(StrTmp)
			
			XMLNodeName("Level2")=UpdateField
			XMLNodeValue=NewDocField.values		
			ReplaceXMLItemValue "LocalRMSDocDataXML", XMLNodeName, XMLNodeValue
		End Forall
		Currentdoc.save True,True
	Else
		Messagebox "Error" & Str(Err) & ": " & Error$
	End If
	
	Exit Sub
	
	
	
End Sub

'++LotusScript Development Environment:2:2:InformationObtainW:1:8
Sub InformationObtainW(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim entryFDate As notesdatetime, entryTDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  CurrentDoc.CBTmpDwelling(0) & " at " & CurrentDoc.CBTmpDwellingAddress(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		
		' Accussed Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Cycle through charges
		'Forall charge In CurrentDoc.CBTmpChargesUNID
		'	Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
		'	Charges=Charges & doc.charge(0) & ", "
		'End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges") = Charges
		
		'FieldList("Charges")=Left(Charges,Len(Charges)-2)
		
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("DwellingOcc") = CurrentDoc.CBTmpDwellingOcc(0)
		FieldList("DwellingAddress")=CurrentDoc.CBTmpDwellingAddress(0)
		'FieldList("DwellingTown")=CurrentDoc.CBTmpDwellingTown(0)
		If Not Strleft(CurrentDoc.CBTmpDwellingTown(0)," of ") = "" Then
			FieldList("DwellingMunicipalityType")= Trim(Strleft(CurrentDoc.CBTmpDwellingTown(0),"of"))
			FieldList("DwellingMunicipalityName")= Trim(Strright(CurrentDoc.CBTmpDwellingTown(0),"of"))
		Else
			FieldList("DwellingMunicipalityType")= CurrentDoc.CBTmpDwellingTown(0)
		End If
		FieldList("DwellingProv")=CurrentDoc.CBTmpDwellingProv(0)
		
		FieldList("GroundsOfBelief")=CurrentDoc.CBTmpGrounds(0)
		
		' Break out the pieces for the entry dates
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryFromDate")
		Set entryFDate=item.datetimevalue
		Select Case Day(entryFDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(entryFDate.lslocaltime) & StrTmp
		FieldList("EntryFDay")=StrTmp
		FieldList("EntryFMonth")=Format(entryFDate.lslocaltime,"mmmm")
		FieldList("EntryFYear")=Year(entryFDate.lslocaltime)
		FieldList("EntryFTime")=Format(CurrentDoc.CBTmpEntryFromTime(0),"h:mm AM/PM")
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryToDate")
		Set entryTDate=item.datetimevalue
		Select Case Day(entryTDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(entryTDate.lslocaltime) & StrTmp
		FieldList("EntryTDay")=StrTmp
		FieldList("EntryTMonth")=Format(entryTDate.lslocaltime,"mmmm")
		FieldList("EntryTYear")=Year(entryTDate.lslocaltime)
		FieldList("EntryTTime")=Format(CurrentDoc.CBTmpEntryToTime(0),"h:mm AM/PM")
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpAppRecital
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("ApplicableRecital")=StrTmp
		
		FieldList("GroundsForEntry")=CurrentDoc.CBTmpEntryGrounds(0)
		FieldList("Conditions")=CurrentDoc.CBTmpConditions(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CertificateOfService:1:8
Sub CertificateOfService(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim wkDate As notesdatetime
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (Defendant - " & CurrentDoc.CBTmpDefendant(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Served by: " & CurrentDoc.CBTmpPeaceOfficer(0) & " on " &_
		Format(CurrentDoc.CBTmpServedDate(0),"yyyy-mmm-dd")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Defendant") = CurrentDoc.CBTmpDefendant(0)
		
		' Serving Officer
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpPeaceOfficer(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpPeaceOfficer(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname & " Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
		End If		
		FieldList("PeaceOfficer")=StrTmp
		
		If Not Strleft(CurrentDoc.CBTmpServedLocation(0)," of ") = "" Then
			FieldList("ServedLocation1")= Trim(Strleft(CurrentDoc.CBTmpServedLocation(0),"of"))
			FieldList("ServedLocation2")= Trim(Strright(CurrentDoc.CBTmpServedLocation(0),"of"))
		Else
			FieldList("ServedLocation2")= CurrentDoc.CBTmpServedLocation(0)
		End If
		
		FieldList("TimeServed")=Format(CurrentDoc.CBTmpServedTime(0),"h:mm AM/PM")
		
		Set item=CurrentDoc.GetFirstItem("CBTmpServedDate")
		Set wkDate=item.datetimevalue
		Select Case Day(wkDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		FieldList("DayServed")=Day(wkDate.lslocaltime) & StrTmp
		FieldList("MonthServed")=Format(wkDate.lslocaltime,"mmmm")
		FieldList("YearServed")=Year(wkDate.lslocaltime)
		
		FieldList("PersonServed") = CurrentDoc.CBTmpPersonServed(0)
		FieldList("Copies") = CurrentDoc.CBTmpCopies(0)
		
		Set item=CurrentDoc.GetFirstItem("CBTmpCopiesCreated")
		Set wkDate=item.datetimevalue
		FieldList("DateCopiesCreated")=Format(wkDate.lslocaltime,"mmmm") & " " & Day(wkDate.lslocaltime) & ", " & Year(wkDate.lslocaltime)
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CPICResponse:1:8
Sub CPICResponse(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim PersonDoc As Notesdocument
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) &  CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber")=CurrentDoc.CurrentOccNum(0)	
		FieldList("CPICResults")=CurrentDoc.CBTmpCopyText(0)
		
		Set PersonDoc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(PersonDoc, "Given1")(0) & " " &_
		RetrieveItemValue(PersonDoc, "Given2")(0) & " " &_
		RetrieveItemValue(PersonDoc, "Given3")(0) & " " &_
		RetrieveItemValue(PersonDoc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("PersonDetails") = StrTmp & "   DOB: " & Format(RetrieveItemValue(PersonDoc, "DOB")(0),"yyyy/mm/dd")
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CourtBriefCover:1:8
Sub CourtBriefCover(Process As String)
	Dim page As Integer
	Dim ns As New NotesSession
	Dim AccInt As Integer, ChrgInt As Integer
	Dim XMLNodeName List As String
	Dim nam As NotesName
	Dim CommittedDate As NotesDateTime
	Dim overflowaccused As Integer
	Dim overflowCharges As Integer
	Dim AdditionalPages() As String
	Dim AddFormats() As String, ad As Integer
	
	Select Case Process
	Case "RetrieveDlg"
		ContinuePrompting = False
		'Save the new form with the pertinent data
		Call CBForm.makeresponse(CurrentDoc)
		' Save the data from the dlg box
		CreateCBDlgData
		' Save the data necessary to render the form in Intelliprint
		CreateCBFormData
		
		CBForm.save True,True
		
		'Force the view to reindex so the doc appears after the refresh
		ThisUI.refresh			
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CourtBriefDescription(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		AccInt = 1
		' Get Accused Information
		Forall data In CurrentDoc.AccusedUNID
			If data<>"" Then
				Set doc=Currentdatabase.getdocumentbyUNID(data)
				If AccInt = 1 Then
					
					If doc.HasItem("ArrestDateTime") Then
						FieldList("ArrestDate") = Format(RetrieveItemValue(doc, "ArrestDateTime")(0),"DD MMM YYYY")		
					End If
				End If			
				
				FieldList("AccusedSurname"&Cstr(AccInt))=RetrieveItemValue(doc, "Surname")(0)
				FieldList("AccusedGiven1"&Cstr(AccInt))=RetrieveItemValue(doc, "Given1")(0)
				FieldList("AccusedGiven2"&Cstr(AccInt))=RetrieveItemValue(doc, "Given2")(0)
				FieldList("AccusedFPSNo"&Cstr(AccInt))=doc.FPS(0)
				FieldList("AccusedSex"&Cstr(AccInt))=doc.Sex(0)
				FieldList("AccusedDOB"&Cstr(AccInt))=Format(doc.DOB(0),"yyyy/mm/dd")
				FieldList("AccusedPoliceNo"&Cstr(AccInt))=doc.OccurrenceNumber(0)
				
				XMLNodeName("Level2")="CriminalRecordAvail"
				v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
				If Not Datatype(v)=11 Then
					StrTmp = ""			
					Forall record In v
						StrTmp = StrTmp & record & ", "
					End Forall
					FieldList("CriminalConvictions"&Cstr(AccInt))=StrTmp
				End If
				
				If AccInt > 4 Then
					OverFlowAccused = 1
					Redim Preserve AdditionalPages(1 To Int((AccInt-1)/4))
					AdditionalPages( Int((AccInt-1)/4)) = ((AccInt-1) Mod 4) + 1
				Else
					OverFlowAccused = 0
				End If
				
				AccInt = AccInt + 1
			End If
		End Forall
		
		StrTmp = ""
		Forall data In CurrentDoc.OccurrenceNumber
			StrTmp = StrTmp & data & ", "
		End Forall
		FieldList("OccurrenceNumbers")=Left(StrTmp,Len(StrTmp)-2)
		
		' Get Charge Information
		ChrgInt = 1
		Forall data In CurrentDoc.ChargeUNID
			If data<>"" Then
				Set doc=Currentdatabase.getdocumentbyUNID(data)
				If doc.HasItem("TimeDateCommitted") Then
					Set item=doc.GetFirstItem("TimeDateCommitted")
					Set CommittedDate=item.datetimevalue
				End If			
				
				FieldList("Charge"&Cstr(ChrgInt))=RetrieveItemValue(doc, "Charge")(0)
				FieldList("OffenceDate"&Cstr(ChrgInt)) = Format(CommittedDate.lslocaltime,"yyyy/mm/dd")			
				
				If ChrgInt > 4 And ChrgInt > AccInt Then
					OverFlowAccused = 1
					Redim Preserve AdditionalPages(1 To Int((ChrgInt-1)/4))
					AdditionalPages( Int((ChrgInt-1)/4)) = ((ChrgInt-1) Mod 4) + 1
				Else
					OverFlowAccused = 0
				End If
				
				ChrgInt =ChrgInt + 1
			End If
		End Forall
		
		FieldList("OfficerIC") = Fulltrim(CurrentDoc.AssignedToRank(0) & " " & ns.CreateName(CurrentDoc.AssignedTo(0)).Common & " #" & CurrentDoc.AssignedToBadge(0))
		FieldList("OfficerICDivision") = Fulltrim(CurrentDoc.AssignedToDistrict(0) & " " & CurrentDoc.AssignedToPlatoon(0))
		
		ad = 0
		If OverFlowAccused = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			AddFormats(ad) = "Canada CLD-0025 Provincial Standard Court Brief Cover 1"
			CBForm.AdditionalCoverPage = AdditionalPages
		Else
			If CBForm.HasItem("AdditionalCoverPage") Then
				CBForm.RemoveItem("AdditionalCoverPage")
			End If
		End If
		
		If ad <> 0 Then
			CBForm.AdditionalIPFormats = AddFormats
		Else
			If CBForm.HasItem("AdditionalIPFormats") Then
				CBForm.RemoveItem("AdditionalIPFormats")
			End If
		End If
		
		CBForm.IPIndex = 1
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CriminalInformation:1:8
Sub CriminalInformation(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim leftdata As String
	Dim rightdata As String
	Dim count As Integer
	Dim Charges As String
	Dim AccusedDoc As NotesDocument
	Dim ChargeDoc As NotesDocument
	Dim numacc() As String, na As Integer, cn As Integer, inac As String
	Dim nameAcc() As String
	Dim AccName() As String, accusedName As String
	Dim accusedUNID() As String, i As Integer
	Dim overflowtext As String, overflowflag As Integer, retval As Integer, PrinterName As String
	Dim FormatOverRideFlag As Integer
	Dim AddFormats() As String, overflowaccused As Integer, ad As Integer, n As Integer, textlen As Integer
	Dim AdditionalCharges() As String
	Dim AdditionalAccused() As String
	Dim YFlag As String
	Dim Testv As Variant
	Dim NameTmp As String
	
	Select Case Process
		
	Case "CreateDlg"
		
		If CurrentDoc.CBTmpYouthForm(0)= "Yes" Then
			StrTmp = "(Juvenile/Youth)"
		Else
			StrTmp = "(Adult)"
		End If
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) + " " + StrTmp
		CBForm.CBFormShortDetails=StrTmp
		
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set ChargeDoc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
			Charges=Charges & RetrieveItemValue(ChargeDoc, "Charge")(0) & NL
		End Forall
		
		StrTmp=StrTmp & NL & "Charges: " & Charges
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		YFlag = CurrentDoc.CBTmpYouthForm(0)
		FormatOverRideFlag = 0
		StrTmp = ""
		na = 0
		cn = 0
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		' Informant Information
		FieldList("Agency") = CurrentDoc.CBTmpInformantAgency(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		
		' Cycle through the charges
		Forall charge In CurrentDoc.CBTmpChargesUNID
			i = 0
			Set ChargeDoc=Currentdatabase.getdocumentbyUNID(Charge)
			If Not ChargeDoc Is Nothing Then
				' Increment the charge count
				cn = cn + 1
				If cn <> 1 Then
					StrTmp =  StrTmp  & NL & "and further that" & NL & NL 
					FormatOverRideFlag = 1 'If more them 1 charge then have to use a multicount information
				End If
				If ChargeDoc.HasItem("AccusedDocID") Then
					Forall accused In ChargeDoc.AccusedDocID
						Redim Preserve accusedUNID(0 To i)
						accusedUNID(i) = accused
						i = i + 1						
					End Forall
				Else
					Redim Preserve accusedUNID(0 To i)
					accusedUNID(i) = ChargeDoc.ParentDocumentUNID
					i = i + 1						
				End If
				
				Forall accdata In accusedUNID
					inac = "off"	
					
					' Get Accused Information
					Set AccusedDoc=Currentdatabase.getdocumentbyUNID(accdata)
					If Not AccusedDoc Is Nothing Then
						'cn = cn + 1					
						'If cn <> 1 Then
						'	StrTmp = StrTmp & NL & "and further that" & NL & NL
						'End If
						NameTmp=Fulltrim(RetrieveItemValue(AccusedDoc, "Given1")(0) & " " &_
						RetrieveItemValue(AccusedDoc, "Given2")(0) & " "&_
						RetrieveItemValue(AccusedDoc, "Given3")(0)) & " " &_
						RetrieveItemValue(AccusedDoc, "Surname")(0)
						
						' In the case of co-accused (multiple accused on a single charge) the names are different length but the
						' DOB's need to line up with each other so pad the end of the name with spaces and stick it in the IP printer object that simulates
						' a single line 3.5 inches wide. RetVal return the number of characters that were able to fit so reduce the string to this length
						' and then append the DOB. This does a pretty good job of lining up the DOBs at the 3.5 inch mark on the page
						
						NameTmp = NameTmp + Space(200)
						RetVal = IPSFitText(PrinterName, NameTmp,350, 25, "Arial", 11, 1)
						Nametmp=Left(NameTmp,RetVal)
						'Print NameTmp, Len(NameTmp),RetVal
						
						StrTmp	= StrTmp & NameTmp & "DOB: " & Format(RetrieveItemValue(AccusedDoc, "DOB")(0),"yyyy/mm/dd") & NL
						'If YFlag = "Yes" Then
						'	StrTmp=StrTmp & "A young person within the meaning of the Youth Criminal Justice Act," & NL
						'End If
						'StrTmp=StrTmp & RetrieveItemValue(ChargeDoc, "ChargePreamble")(0) & " " & RetrieveItemValue(ChargeDoc, "ChargeWording")(0) & NL
						'ChargeDoc.ChargePreamble(0) & ChargeDoc.ChargeWording(0) & NL			
						' TEST
						'Testv=GetItemValue(ChargeDoc, "ChargePreamble")
						accusedName = Fulltrim(RetrieveItemValue(AccusedDoc, "Given1")(0) &_
						" " & RetrieveItemValue(AccusedDoc, "Given2")(0) & " "&_
						RetrieveItemValue(AccusedDoc, "Given3")(0))
						
						'If cn > 1 Then
						'	FormatOverRideFlag = 1
						'End If
					End If
					
					If na = 0 Then
						na = na + 1
						Redim Preserve numacc(1 To na)
						Redim Preserve nameacc(1 To na)
						numacc(na) = accdata
						nameacc(na) = accusedName
					Else
						Forall nam In nameacc
							If accusedName = nam Then
								inac= "on"						
							End If
						End Forall
						If inac = "off" Then
							Forall acc In numacc
								If accdata = acc Then
									inac = "on"
								End If
							End Forall
							If inac = "off" Then
								na = na + 1
								Redim Preserve numacc(1 To na)
								Redim Preserve nameacc(1 To na)
								numacc(na) = accdata
								nameacc(na) = Fulltrim(RetrieveItemValue(AccusedDoc, "Given1")(0) &_
								" " & RetrieveItemValue(AccusedDoc, "Given2")(0) & " "&_
								RetrieveItemValue(AccusedDoc, "Given3")(0))
							End If
						End If
					End If
				End Forall
				
				If YFlag = "Yes" Then
					StrTmp=StrTmp & "A young person within the meaning of the Youth Criminal Justice Act," & NL
				End If
				StrTmp=StrTmp & Cstr(cn) + ") " + RetrieveItemValue(ChargeDoc, "ChargePreamble")(0) & " " & RetrieveItemValue(ChargeDoc, "ChargeWording")(0) & NL
				Charges=Charges & RetrieveItemValue(ChargeDoc, "Charge")(0) & ", "
			End If 'End of Charges
		End Forall
		
		n = 1
		textlen = Len(StrTmp)
		If cn = 1 Then
			If YFlag = "Yes" Then
				RetVal = IPSFitText(PrinterName, StrTmp,750, 175, "Arial", 11, 1)
			Else
				RetVal = IPSFitText(PrinterName, StrTmp,750, 225, "Arial", 11, 1)
			End If
			FieldList("ChargesPage"+Cstr(n)) = StrTmp
			If retval < textlen Then
				FormatOverRideFlag = 1
			End If
		Else
			If YFlag = "Yes" Then
				RetVal = IPSFitText(PrinterName, StrTmp,750, 650, "Arial", 11, 1)
			Else
				RetVal = IPSFitText(PrinterName, StrTmp,750, 850, "Arial", 11, 1)
			End If
			If retval >= textlen Then
				FieldList("ChargesPage"+Cstr(n)) = StrTmp
			Else
				overflowflag = 1
				Do Until RetVal >= textlen
					Overflowtext = Mid$(StrTmp, RetVal + 2)	
					StrTmp = Left$(StrTmp, RetVal + 1)
					
					' Modified Nov. 4, 2005 Brian Henry to page break charges in correct location
					'Overflowtext = Strrightback(StrTmp, Chr(13)) + Overflowtext
					Overflowtext = "and further that" & Strrightback(StrTmp, "and further that") + Overflowtext
					'StrTmp = Strleftback(StrTmp, Chr(13))
					StrTmp = Strleftback(StrTmp, "and further that")
					FieldList("ChargesPage"+Cstr(n)) = StrTmp
					
					StrTmp = Overflowtext
					textlen = Len(StrTmp)
					
					RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
					
					Redim Preserve AdditionalCharges(1 To n)
					AdditionalCharges(n) = Cstr(n)
					n = n + 1
				Loop
				FieldList("ChargesPage"+Cstr(n)) = StrTmp
			End If
		End If
		If OverFlowFlag=1 Then
			' add comment to first page of information
			FieldList("ContinuedWithin") = "(continued within...)"
		End If
		FieldList("CourtRoom") = CurrentDoc.CBTmpCourtRoom(0)
		FieldList("CourtAddress") = CurrentDoc.CBTmpCourtAddress(0)
		
		StrTmp=""
		cn=1
		Forall acc In numacc
			Charges = ""	
			' Get Accused Information
			Set AccusedDoc=Currentdatabase.getdocumentbyUNID(acc)
			If Not AccusedDoc Is Nothing Then
				FieldList("Accused"+Cstr(cn)+"Name") = RetrieveItemValue(AccusedDoc, "Surname")(0) &_
				", " & RetrieveItemValue(AccusedDoc, "Given1")(0) & " "&_
				RetrieveItemValue(AccusedDoc, "Given2")(0) & " " &_
				RetrieveItemValue(AccusedDoc, "Given3")(0)
				FieldList("Accused"+Cstr(cn)+"Address") = RetrieveItemValue(AccusedDoc, "StreetNumber")(0) &_
				" " & RetrieveItemValue(AccusedDoc, "Street")(0) &_
				NL & RetrieveItemValue(AccusedDoc, "TownCity")(0) &_
				", " & RetrieveItemValue(AccusedDoc, "Prov")(0) &_
				" " & RetrieveItemValue(AccusedDoc, "PostalCode")(0)
				Forall charge In CurrentDoc.CBTmpChargesUNID
					Set ChargeDoc=Currentdatabase.getdocumentbyUNID(Charge)
					inac = "off"
					If ChargeDoc.HasItem("AccusedDocID") Then
						Forall accused In ChargeDoc.AccusedDocID
							If AccusedDoc.UniversalID = accused Then
								inac = "on"
							End If
						End Forall
					Else
						If AccusedDoc.UniversalID = ChargeDoc.ParentDocumentUNID Then
							inac = "on"
						End If
					End If
					If inac = "on" Then
						If Len(Strleft(RetrieveItemValue(ChargeDoc, "Charge")(0),":")) > 0 Then
							Charges = Charges + Strleft(RetrieveItemValue(ChargeDoc, "Charge")(0),":") & NL
						Else	
							Charges = Charges + RetrieveItemValue(ChargeDoc, "Charge")(0) & NL
						End If
					End If
				End Forall
				FieldList("Accused"+Cstr(cn)+"Charges") = Charges
				FieldList("Accused"+Cstr(cn)+"ArrestMethod") = AccusedDoc.ArrestMethod(0)
				FieldList("Accused"+Cstr(cn)+"Sex") = RetrieveItemValue(AccusedDoc, "Sex")(0)
				If Isdate(AccusedDoc.DOB(0)) Then
					FieldList("Accused"+Cstr(cn)+"DOBMonth") = Month(RetrieveItemValue(AccusedDoc, "DOB")(0))
					FieldList("Accused"+Cstr(cn)+"DOBDay") = Day(RetrieveItemValue(AccusedDoc, "DOB")(0))
					FieldList("Accused"+Cstr(cn)+"DOBYear") = Year(RetrieveItemValue(AccusedDoc, "DOB")(0))
				End If
				
				FieldList("Accused"+Cstr(cn)+"DLNo") = RetrieveItemValue(AccusedDoc, "DLNumber")(0)
				If Isdate(CurrentDoc.NextCourtDate(0)) Then
					FieldList("Accused"+Cstr(cn)+"ReturnDate") = Cstr(Format(CurrentDoc.NextCourtDate(0),"dd mmmm"))
					FieldList("Accused"+Cstr(cn)+"ReturnDateYear") = Cstr(Year(CurrentDoc.NextCourtDate(0)))
				End If
				FieldList("Accused"+Cstr(cn)+"CourtRoom") = CurrentDoc.CBTmpCourtRoom(0)
				FieldList("Accused"+Cstr(cn)+"CourtAddress") = CurrentDoc.CBTmpCourtAddress(0)
				
				FieldList("Accused"+Cstr(cn)+"Officer") = CurrentDoc.AssignedTo(0)
				FieldList("Accused"+Cstr(cn)+"OfficerBadge") = CurrentDoc.AssignedToBadge(0)
				FieldList("Accused"+Cstr(cn)+"OfficerDistrict") = CurrentDoc.AssignedToDistrict(0)
				
				If YFlag = "Yes" Then
					FieldList("Accused"+Cstr(cn)+"PersonalInj") = CurrentDoc.CBTmpYPersonalInj(0)
					FieldList("Accused"+Cstr(cn)+"PropertyDam") = CurrentDoc.CBTmpYPropertyDam(0)
					FieldList("Accused"+Cstr(cn)+"NoticeTo") = CurrentDoc.CBTmpYNoticeTo(0)
				End If
				
				If cn > 1 Then
					FormatOverRideFlag = 1
				End If
				If cn > 3 Then
					OverFlowAccused = 1
				Else
					OverFlowAccused = 0
				End If
				
				If cn>3 Then
					Redim Preserve AdditionalAccused(1 To Int((cn-1)/3))
					AdditionalAccused( Int((cn-1)/3)) = ((cn-1) Mod 3) + 1
				End If
				
				cn = cn + 1
			End If
		End Forall
		
		If FormatOverRideFlag = 0 Then
			If YFlag = "Yes" Then
				CBForm.IntelliPrintFormatName = "Canada YCJ-CC2 YCJA Single Information 1"
			Else
				CBForm.IntelliPrintFormatName = "Canada CCO-2-000-1 Criminal Information (Adult Single Count) 1"	
			End If
		Else
			If YFlag = "Yes" Then
				CBForm.IntelliPrintFormatName = "Canada YCJ-CC2 YCJA Multi-Count Information 1"
			Else
				CBForm.IntelliPrintFormatName = "Canada CCO-2-000-4 Criminal Information (Adult Multi-Count) 1"
			End If
		End If
		
		ad = 0
		If OverFlowFlag = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			If YFlag = "Yes" Then
				AddFormats(ad) = "Canada YCJ-CC2 YCJA Multi-Count Information 2 Cont."
			Else
				AddFormats(ad) = "Canada CCO-2-000-4 Criminal Information (Adult Multi-Count) 2 Cont."
			End If
			CBForm.AdditionalChargePages = AdditionalCharges
		Else
			If CBForm.HasItem("AdditionalChargePages") Then
				CBForm.RemoveItem("AdditionalChargePages")
			End If
		End If
		If OverFlowAccused = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			If YFlag = "Yes" Then
				AddFormats(ad) = "Canada YCJ-CC2 YCJA Multi-Count Information 4"
			Else
				AddFormats(ad) = "Canada CCO-2-000-4 Criminal Information (Adult Multi-Count) 4"
			End If
			CBForm.AdditionalAccusedPages = AdditionalAccused
		Else
			If CBForm.HasItem("AdditionalAccusedPages") Then
				CBForm.RemoveItem("AdditionalAccusedPages")
			End If
		End If
		
		If ad <> 0 Then
			CBForm.AdditionalIPFormats = AddFormats
		Else
			If CBForm.HasItem("AdditionalIPFormats") Then
				CBForm.RemoveItem("AdditionalIPFormats")
			End If
		End If
		
		CBForm.IPIndex = 1
	End Select
End Sub

'++LotusScript Development Environment:2:2:CreateCBFormData:1:8
Sub CreateCBFormData
	' This routine saves the data that is eventually passed to Intelliprint
	Dim casestring As String
	
	Erase FieldList
	casestring = "CreateForm"
	
	Select Case CBForm.IntelliprintFormatName(0)
	' Process should always be "CreateDlg	"
	' Phase I Forms
		
	Case "Canada CCO-10-493-1 Adult - Promise to Appear", "Adult - Promise To Appear (Canada CCO-10-493-1)"
		PromiseToAppear casestring
		
	Case "Canada CCO-11-493-1 Adult - Recognizance Before OIC 1"
		RecogEnteredBeforeOfficer casestring
		
	Case "Canada CCO-11.1-493-1 Undertaking Given to a Peace Officer or an Officer in Charge"
		UndertakingGivenToOfficer casestring
		
	Case "Canada CCO-16-699-4 Subpeona to a Witness 1"
		SubpeonaToWitness casestring
		
	Case "Canada CCO-2-000-4 Criminal Information (Adult Multi-Count) 1", "Canada YCJ-CC2 YCJA Multi-Count Information 1"
		CriminalInformation casestring
	Case "Canada CCO-2-000-1 Criminal Information (Adult Single Count) 1", "Canada YCJ-CC2 YCJA Single Information 1"
		CriminalInformation casestring
		
	Case "Canada IJ 0507 Affidavit of Service"
		AffidavitOfService casestring
		
	' Single Function Call to handle all Statements	
	Case "Canada IJ P023 Adult Statement Form", "Canada IJ P083 Police Officer's Statement", "Canada IJ P029 Victim-Witness Interview", "Canada IJ P066 YCJA Youth Statement Form"
		Statement casestring
		
	'Case "Canada IJ P029 Victim-Witness Interview"
	'	StatementCivilianWitness casestring
		
	Case "Canada IJ P043 Certificate of a Qualified Technician 1"
		CertificateOfTechnician casestring
		
	Case "Canada IJ P044 Notice of Intention to Produce Certificate(s)"
		NoticeToProduceBreathCertificate casestring
		
	Case "Canada IJ P058 Show Cause Hearing Report"
		ShowCauseReport casestring
		
	Case "Canada IJ P061 NOI Introduce Copies of Documents at Trial"
		NoticeToProduceDocuments casestring
		
	Case "Canada IJ P062 Domestic Violence Supplementary"
		DomesticViolenceReport casestring
		
	Case "Canada IJ P081 Witness List"
		WitnessList casestring
		
	'Case "Canada IJ P083 Police Officer's Statement"
	'	StatementPoliceWitness casestring
		
	Case "Canada IJ P086 C.B. Cover 1"
		CrownBriefCover casestring
		
	Case "Canada IJ P098 C.B. Synopsis"
		CourtSynopsis casestring
		
	Case "Canada OT 054 Occurrence Report"
		OccurrenceReport casestring
		
	Case "Canada OT 056 Supplementary Report"
		SupplementaryReport casestring
		
	Case "Canada OT 063 Criminal Record"
		CPICResponse casestring
		
	Case "Canada OT 064 CNI Criminal Name Index"
		CPICResponse casestring
		
	Case "Canada OT 065 CRFO Canadian Firearms Registry Online"
		CPICResponse casestring
		
	Case "Canada OT 066 CPIC Query"
		CPICResponse casestring
		
	Case "Canada OT 068 Local Criminal Record"
		CPICResponse casestring
		
	Case "Canada YCJ-26 YCJA Notice To Parent, Relative, or Friend 1"
		NoticeToParent casestring
		
	Case "Canada YCJ-CC10 YCJA Promise to Appear"
		PromiseToAppear casestring
		
	Case "Canada YCJ-CC11 YCJA Recog Entered Before an Officer 1"
		RecogEnteredBeforeOfficer casestring
		
	Case "Canada YCJ-CC11.1 YCJA Undertaking Given to an Officer"
		UndertakingGivenToOfficer casestring
		
	Case "Canada YCJ-CC16 YCJA Subpeona to a Witness 1"
		SubpeonaToWitness casestring
		
	Case "Canada YCJ-CC6 YCJA Summons 1"
		Summons casestring
		
	Case "Canada YCJ-CC7 YCJA Warrant For Arrest Endorsement 1"
		WarrantForArrest casestring
		
	' Phase II	
	Case "Canada CCO-1-487-1 Information to Obtain a Search Warrant 1"
		InformationObtainSW casestring
		
	'Case "Canada CCO-1-529-3 Information to Obtain a Warrant-Endorsement - enter Dwelling-Arrest 1"
		' CCO-1-529-3 replaced by CCO-1-529.1
	Case "Canada CCO-1-529.1 Information to Obtain a Warrant-Endorsement - enter Dwelling-Arrest 1"
		InformationObtainWE casestring
		
	Case "Canada CCO-1-529(1) Information to Obtain a Warrant 1"
		InformationObtainW casestring
		
	Case "Canada CCO-5-487-1 Warrant to Search"
		SearchWarrant casestring
		
	Case "Canada CCO-5.2-489-1 Report to a Justice-Order of Disposition of Items Seized 1"
		ReportToJustice casestring
		
	Case "Canada CCO-6-493-1 Summons to Person Charged with Offence 1"
		Summons casestring
		
	Case "Canada CSO-117.04-1 Application Issue Warrant Search, Seizure Firearms, Weapons"
		InformationObtainSWtoSeizeFirearms casestring
		
	Case "Canada CSO-117.04-2 Warrant Search for and Seize Firearms, Weapons"
		SWtoSeizeFirearms casestring
		
	Case "Canada CSO-117.04-3(a) Return - The following articles were seized"
		ReturnWarrant casestring
		
	Case "Canada CSO-810 Summons to Appear 1"
		SummonsToAppear casestring
		
	' Phase III
	Case "Canada CCO-5.01-487 Information to Obtain a Warrant to take Bodily Substances 1"
		InformationObtainBodSub casestring
		
	Case "Canada CCO-5.02-487 Warrant Authorizing the taking of Bodily Substances for Forensic 1"
		WarrantObtainBodSub casestring
		
	Case "Canada CCO-7-475-1 Warrant for Arrest with Authorization to Enter a Dwelling-House Endorsement Forms 1"
		WarrantAuthorizedEntry casestring
		
	Case "Canada CCO-7.1-529-1 Warrant To Enter Dwelling House-Endorsement of Warrant Form 1"
		WarrantEnterDwelling casestring
		
	Case "Canada CFS 038 Certificate of Qualified Medical Practitioner 1"
		CertificateOfPractitioner casestring
		
	Case "Canada CSO-111-1 Application Prohibiting Possessing Firearms, Weapons"
		ApplicationFirearms casestring
		
	Case "Canada CSO-111-2 Notice of Hearing 1"
		NoticeOfHearing casestring
		
	Case "Canada CSO-111-3 Order Prohibiting Possessing Firearms, Weapons 1"
		OrderProhibitFirearms casestring
		
	Case "Canada CSO-117.011-1 Application and Subsequent Order"
		ApplicationSubOrder casestring
		
	Case "Canada CSO-117.04-05 Application - Order for Disposition Articles Seized 1"
		ApplicationOrderDisposition casestring
		
	' Phase IV
		
	Case "Canada CSO-117.04-3(b) Return"
		ReturnFirearms casestring
		
	Case "Canada IJ P015 Notice of Application for Increased Penalty"
		NoticeOfIncreasedPenalty casestring
		
	Case "Canada IJ P016 Notice of Trial"
		NoticeOfTrial casestring
		
	Case "Canada IJ P057 Consent to Search"
		ConsentToSearch casestring
		
	Case "Canada IJ P068 Notice Pursuant to the C.C. & C.E.A. For FTA"
		NoticeToCCCAndCEA casestring
		
	Case "Canada IJ P073 Notice to Introduce as Evidence Property Obtained by Crime"
		NoticeIntroduceOffences casestring
		
	Case "Canada IJ P077 Request for Certified Copies"
		RequestCopies casestring
		
	Case "Canada IJ P079 Affidavit of Property Owner"
		AffidavitPropertyOwner casestring
		
	Case "Canada IJ P101 Certificate of Service"
		CertificateOfService casestring
		
	Case "Canada IJ P201 DNA Insert"
		DNAInformationInsert casestring
		
	' Phase V
	Case "Canada CCO-5.03-487 Order Authorizing the Taking of Bodily Substances for Forensic"
		OrderTakeBodilySubstances casestring
		
	Case "Canada CCO-5.04-487 Order Authorizing the Taking of Bodily Substances for Forensic"
		OrderTakeBodilySubstances casestring
		
	Case "Canada CCO-5.05-487 Application for an Authorization to take Bodily Substances for Forensic DNA Analysis"
		ApplicationBodilySubstances casestring
		
	Case "Canada CCO-5.06-487 Authorization for the Taking of Bodily Substances for Forensic DNA Analysis 1"
		AuthorizeTakeBodilySubstances casestring
		
	Case "Canada CCO-5.07-487 Report to a Provincial Court Judge or the Court"
		ReportToJudge casestring
		
	Case "Canada CLD-0025 Provincial Standard Court Brief Form"
		
	Case "Canada IJ P065 Consent to Obtain DNA Samples 1"
		ConsentToObtainDNA casestring
		
	Case "Canada IJ P075 Certificate of Photographer"
		CertificateOfPhotographer casestring
		
	Case "Canada IJ P076 Affidavit of Person Seizing Property"
		AffidavitSeizingProperty casestring
		
	' Phase VI
	Case "Canada CCO-2-810-1 Information - Where Injury or Damage Feared 1"
		InjuryOrDamageInformation casestring
		
	Case "Canada CCO-5.08-487 Application for an Authorization for taking Additional Samples of Bodily Substances for Forensic DNA"
		ApplicationBodilySubstances casestring		
		
	Case "Canada CCO-5.09-487 Authorization for the taking of Additional Samples of Bodily Substances for Forensic DNA"
		AuthorizeTakeBodilySubstances casestring		
		
	Case "Canada CCO-5.1-487-7 Telewarrant Obtain Bodily Parts or Impressions 1"
		TelewarrantToObtain casestring
		
	Case "Canada CCO-7.1-529-2 Telewarrant to Enter Dwelling-House 1"
		TelewarrantToEnterDwelling casestring
		
	Case "Canada CFS 069 Case Submission 1"
		CaseSubmission casestring
		
	Case "Canada CLD-0025 Provincial Standard Court Brief Cover 1"
		CourtBriefCover casestring
		
	'Case "Canada IJ P066 YCJA Youth Statement Form"
	'	CautionedStatement casestring
		
	Case "Canada IJ P067 Audio Video Synopsis"
		AudioVideoSynopsis casestring
		
	'Phase VII
	Case "Canada CCO-19-516-1 Warrant Remanding Prisoner (Adult) 1", "Canada YCJ-CC19 Warrant Remanding Prisoner (Youth) 1"
		WarrantRemandingPrisoner casestring
		
	Case "Canada Medical Release Form"
		AuthorizationMedicalRelease casestring	
		
	Case "Canada CSO-145(9)-2 Certificate by person in Charged accused failed to appear"
		CertificateFailedToAppear casestring
		
	Case "Canada CCO-1-529-4 Page 1 Information to obtain a telewarrant"
		InformationObtainTWDwelling casestring
		
	Case "Canada CCO-32-493-1 Recognizance to Keep the Peace Page 1"
		RecognizanceOfKeepThePeace casestring
		
	Case "Miscellaneous Court Document"
		MiscellaneousCourtDocument casestring
		
	Case "Canada IJ P090 Court Brief Index"
		CourtBriefIndex casestring
		
	End Select
	
	'FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
	FieldList("PoliceService")= CurrentDoc.Agency(0)
	FieldList("PoliceCaseID")= CurrentDoc.DefaultPoliceCaseID(0)
	
	 'Convert the list of fields into an XML string
	StrTmp=""
	Forall Field In FieldList
		StrTmp=StrTmp & "<" &  Listtag(Field) & ">"  & Field & "</" & Listtag(Field) & ">"
	End Forall
	CBForm.CBFormData=StrTmp
	
End Sub

'++LotusScript Development Environment:2:2:WarrantObtainBodSub:1:8
Sub WarrantObtainBodSub(Process As String)	
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPerson(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Offence: " & CurrentDoc.CBTmpOffence(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)		
		FieldList("PeaceOfficerRegion")=CurrentDoc.CBTmpRegion(0)		
		FieldList("PeaceOfficer") = CurrentDoc.CBTmpPeaceOfficer(0)		
		FieldList("PeaceOfficerAgency") = CurrentDoc.CBTmpPeaceOfficerAgency(0)
		FieldList("Offence") = CurrentDoc.CBTmpOffence(0)
		FieldList("Person")=CurrentDoc.CBTmpPerson(0)	
		FieldList("Circumstances")=CurrentDoc.CBTmpCircumstances(0)
		
		FormDatedInformation
		
	End Select
	
End Sub

'++LotusScript Development Environment:2:2:StatementPoliceWitness:1:8
Sub StatementPoliceWitness(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Set lookupdb = GetLookupDatabase
	Const PoliceStatementEntryConstant = |@Implode(@Trim(Type:@Text(StatementDateTime):StatementLocation);" ")|
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
		' The Choices need to be refreshed from RMS everytime
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		If CBForm.IsNewNote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
	' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Statement"
					' Since this is a Police Statement check to see if the parent Person doc has a type of Police Witness
					Set ParentDoc=Currentdatabase.GetdocumentbyUNID(doc.parentDocumentUNID)
					Forall InvolvementType In ParentDoc.Type
						If InvolvementType="Police Witness" Then
							v=Evaluate(PoliceStatementEntryConstant,doc)
							v=v(0)  & "|" & doc.UniversalID
							item.appendtotextlist v
							Exit Forall
						End If
					End Forall
					
				End Select
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		If CBForm.IsNewNote Then
			flag= ws.dialogbox("CB_PromptStatementDlg" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
			' if the user hit cancel or didn't make any selection we don't want the final prompt to be displayed
			If Flag=False Or CurrentDoc.CBTmpStatementList(0)="" Then
				ContinuePrompting=False
				Exit Sub
			Else
				'Populate the default values
				RetrieveCBRMSDocData ParentDoc.UniversalID,"CB_PoliceStatementDlg"
			End If
		End If
		
	Case "CreateDlg"
		
		StrTmp=Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpStatementOf(0) &_
		" (" & CurrentDoc.CBTmpCurrentOccNum(0) & ") ")
		CBForm.CBFormShortDetails=StrTmp
		
		StrTmp=""
		If CurrentDoc.CBTmpStatementList(0)<>"" Then
			Set doc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpStatementList(0))
			v=Evaluate(PoliceStatementEntryConstant,doc)
			StrTmp=StrTmp & v(0)
		End If
		
		CBForm.CBFormLongDetails=CBForm.CBFormShortDetails(0) & NL & StrTmp
		
	Case "CreateForm"
		
		StrTmp=CurrentDoc.CBTmpStatementList(0)
		CBForm.IPUnids=StrTmp
		FieldList("OccurrenceNumber")=CurrentDoc.CBTmpCurrentOccNum(0)
		FieldList("StatementOf")=CurrentDoc.CBTmpStatementOf(0)
		FieldList("MemberAgency")=CurrentDoc.CBTmpMemberAgency(0)
		FieldList("YearsOfService")=CurrentDoc.CBTmpYearsOfService(0)
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ReturnWarrant:1:8
Sub ReturnWarrant(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim WarrantDate As notesdatetime, ExecutionDate As notesdatetime
	Dim overflowtext As String, overflowflag As Integer, retval As Integer, PrinterName As String
	Dim AddFormats() As String, ad As Integer, n As Integer, textlen As Integer
	Dim AdditionalPages() As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Warrant Issued By " & CurrentDoc.CBTmpWIssuedBy(0) & " on " &_
		Format(CurrentDoc.CBTmpWarrantDate(0),"yyyy-mmm-dd")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber") =  CurrentDoc.OccurrenceNumber(0)
		FieldList("HeldBy") =  CurrentDoc.CBTmpHeldBy(0)
		FieldList("Building") =  CurrentDoc.CBTmpBuilding(0)
		FieldList("WarrantIssuedBy") =  CurrentDoc.CBTmpWIssuedBy(0)
		
		' Break out the pieces for the warrant date
		Set item=CurrentDoc.GetFirstItem("CBTmpWarrantDate")
		Set WarrantDate=item.datetimevalue
		Select Case Day(WarrantDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(WarrantDate.lslocaltime) & StrTmp
		FieldList("WarrantDay")=StrTmp
		FieldList("WarrantMonth")=Format(WarrantDate.lslocaltime,"mmmm")
		FieldList("WarrantYear")=Year(WarrantDate.lslocaltime)
		
		' Break out the pieces for the warrant execution date
		Set item=CurrentDoc.GetFirstItem("CBTmpWarrantExDate")
		Set ExecutionDate=item.datetimevalue
		Select Case Day(ExecutionDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(ExecutionDate.lslocaltime) & StrTmp
		FieldList("ExecutionDay")=StrTmp
		FieldList("ExecutionDayName")=Format(ExecutionDate.lslocaltime,"dddd")
		FieldList("ExecutionMonth")=Format(ExecutionDate.lslocaltime,"mmmm")
		FieldList("ExecutionYear")=Year(ExecutionDate.lslocaltime)
		
		StrTmp = CurrentDoc.CBTmpArticlesSeized(0)
		textlen = Len(StrTmp)
		n = 1
		' In Inches, multiply by 100 to get width and height.
		RetVal = IPSFitText(PrinterName, StrTmp,750, 315, "Times New Roman", 10, 1)
		If retval >= textlen Then
			FieldList("TextPage"+Cstr(n)) = StrTmp
		Else
			overflowflag = 1
			Do Until RetVal >= textlen
				Overflowtext = Mid$(StrTmp, RetVal + 2)	
				StrTmp = Left$(StrTmp, RetVal + 1)
				Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
				StrTmp = Strleftback(StrTmp, " ")
				
				FieldList("TextPage"+Cstr(n)) = StrTmp
				
				StrTmp = Overflowtext
				textlen = Len(StrTmp)
				
				RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
				
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Loop
			FieldList("TextPage"+Cstr(n)) = StrTmp
		End If
		' FieldList("ArticlesSeized") =  CurrentDoc.CBTmpArticlesSeized(0)
		
		FormDatedInformation
		
		ad = 0
		If OverFlowFlag = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			AddFormats(ad) = "Canada Appendix A"
			CBForm.AdditionalPages = AdditionalPages
		Else
			If CBForm.HasItem("AdditionalPages") Then
				CBForm.RemoveItem("AdditionalPages")
			End If
		End If
		
		If ad <> 0 Then
			CBForm.AdditionalIPFormats = AddFormats
		Else
			If CBForm.HasItem("AdditionalIPFormats") Then
				CBForm.RemoveItem("AdditionalIPFormats")
			End If
		End If
		
		CBForm.IPIndex = 1
	End Select
End Sub

'++LotusScript Development Environment:2:2:PrepareFormForRendering:1:8
Sub PrepareFormForRendering()
	Dim StrTmp As String
	Dim session As New notessession
	Dim Doc As notesdocument
	Dim tempdoc As NotesDocument
	Dim view As notesview
	Dim index As Integer
	Dim ind As Integer
	
	NoteIDs=""
	ind = 0
	' If the CB has not yet been saved then do it now so that it gets a UNID assigned
	If CurrentDoc.isnewnote=True Then
		CurrentDoc.save True,True
	End If
	
	' Set the environment variable to allow for data to be retrieved from formula fields in reports
	' This allows us to pass a string of NoteIDs to print out persons, property etc but still gives access
	' back to the CBForm and CB docs for other data to appear on headers and footers etc.
	StrTmp=CBForm.UniversalID
	Call Session.SetEnvironmentVar( "CBFormUNID", StrTmp )
	StrTmp=CurrentDoc.UniversalID
	Call Session.SetEnvironmentVar( "CourtBriefUNID", StrTmp )
	' If the CB Form has a field containing NoteIDs then use it else use the Note ID of the form itself
	' This allows a list of docs to be passed for Report type formats
	
	Select Case CBForm.IntelliprintFormatName(0)		
	Case "Canada OT 054 Occurrence Report"
		' When printing an Occurrence Report we want to include all persons, propery and charges
		' along with any supps the user previously indicated. The supp IDs are stored in the NoteID field
		' We need to compute all the others.
		Set view=CurrentDatabase.getview("By Occurrence")
		StrTmp=CBForm.CurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
	' The first doc will always be the Occurrence Report
		Do While Not (Doc Is Nothing)
			If CBForm.OccurrenceNumber(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Custom Form","Supplementary"
					' Docs of this type are not printed automatically. They would have been selected by the user and already included in the IPUnids
					' field of the CBForm doc. They are appended below.
				Case "OccurrenceReport","Person/Property"
					NoteIDs=NoteIDs &  doc.noteid & ";"
				End Select
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		
	Case "Canada CCO-2-000-4 Criminal Information (Adult Multi-Count) 1", "Canada YCJ-CC2 YCJA Multi-Count Information 1"
		Erase addnoteids
		index = 1
		If CBForm.HasItem("AdditionalChargePages") Then
			ind = ind + 1
			Forall value In CBForm.AdditionalChargePages
				index = index + 1
				Set tempdoc = CurrentDatabase.CreateDocument
				tempdoc.Form = "IPTemp"
				tempdoc.IPIndex = index
				tempdoc.CBFormData = CBForm.CBFormData(0)
				Call tempdoc.save(True,False)
				Redim Preserve addnoteids(1 To ind)
				addnoteids(ind) = addnoteids(ind) + tempdoc.noteid + ";"
			End Forall
		End If
		
		index = 1
		If CBForm.HasItem("AdditionalAccusedPages") Then
			ind = ind + 1
			Forall value In CBForm.AdditionalAccusedPages
				index = index + 1
				Set tempdoc = CurrentDatabase.CreateDocument
				tempdoc.Form = "IPTemp"
				tempdoc.IPIndex = index
				tempdoc.CBFormData = CBForm.CBFormData(0)
				Call tempdoc.save(True,False)
				Redim Preserve addnoteids(1 To ind)
				addnoteids(ind) = addnoteids(ind) + tempdoc.noteid + ";"
			End Forall
		End If
		
	Case "Canada CLD-0025 Provincial Standard Court Brief Cover 1"
		Erase addnoteids
		index = 1
		If CBForm.HasItem("AdditionalCoverPage") Then
			ind = ind + 1			
			Forall value In CBForm.AdditionalCoverPage
				index = index + 1
				Set tempdoc = CurrentDatabase.CreateDocument
				tempdoc.Form = "IPTemp"
				tempdoc.IPIndex = index
				tempdoc.CBFormData = CBForm.CBFormData(0)
				Call tempdoc.save(True,False)
				Redim Preserve addnoteids(1 To ind)
				addnoteids(ind) = addnoteids(ind) + tempdoc.noteid + ";"
			End Forall
		End If
		
	Case "Miscellaneous Court Document"
		Messagebox "The Miscellaneous Court Document acts as a placeholder for forms created outside of court brief. They do not print", 0 , "Enterpol Court Brief"
		
	Case Else
		Erase addnoteids
		index = 1
		If CBForm.HasItem("AdditionalPages") Then
			ind = ind + 1
			Forall value In CBForm.AdditionalPages
				index = index + 1
				Set tempdoc = CurrentDatabase.CreateDocument
				tempdoc.Form = "IPTemp"
				tempdoc.IPIndex = index
				tempdoc.CBFormData = CBForm.CBFormData(0)
				Call tempdoc.save(True,False)
				Redim Preserve addnoteids(1 To ind)
				addnoteids(ind) = addnoteids(ind) + tempdoc.noteid + ";"
			End Forall
		End If
	End Select
	
	If CBForm.HasItem("IPUnids") Then
		' If a list of UNIDs exist then convert them to DocIDs so they can be passed to IP
		StrTmp=ConvertUNIDtoDocID(CBForm.IPUNids(0))
		noteids=noteids & StrTmp
	Else
		' else just use the DocID of the CBForm. All the data should be stored within this form
		noteids=noteids & CBForm.NoteID
	End If
End Sub

'++LotusScript Development Environment:2:2:CreateCBDlgData:1:8
Sub CreateCBDlgData
	' This routine saves the data necessary to re-populate the dialog box used to create it
	' This is necessary to allow editing of existing court forms
	Dim casestring As String
	Dim CBDlgDataXML As String
	NL=Chr$(13) & Chr$(10)
	
	casestring = "CreateDlg"
	
	Select Case CBForm.IntelliprintFormatName(0)
	' Process should always be "CreateDlg	"
	' Phase I Forms
		
	Case "Canada CCO-10-493-1 Adult - Promise to Appear", "Adult - Promise To Appear (Canada CCO-10-493-1)"
		PromiseToAppear casestring
		
	Case "Canada CCO-11-493-1 Adult - Recognizance Before OIC 1"
		RecogEnteredBeforeOfficer casestring
		
	Case "Canada CCO-11.1-493-1 Undertaking Given to a Peace Officer or an Officer in Charge"
		UndertakingGivenToOfficer casestring
		
	Case "Canada CCO-16-699-4 Subpeona to a Witness 1"
		SubpeonaToWitness casestring
		
	Case "Canada CCO-2-000-4 Criminal Information (Adult Multi-Count) 1", "Canada YCJ-CC2 YCJA Multi-Count Information 1"
		CriminalInformation casestring
	Case "Canada CCO-2-000-1 Criminal Information (Adult Single Count) 1", "Canada YCJ-CC2 YCJA Single Information 1"
		CriminalInformation casestring
		
	Case "Canada IJ 0507 Affidavit of Service"
		AffidavitOfService casestring
		
	' Single Function Call to handle all Statements	
	Case "Canada IJ P023 Adult Statement Form", "Canada IJ P083 Police Officer's Statement", "Canada IJ P029 Victim-Witness Interview", "Canada IJ P066 YCJA Youth Statement Form"
		Statement casestring
		
	'Case "Canada IJ P029 Victim-Witness Interview"
	'	StatementCivilianWitness casestring
		
	Case "Canada IJ P043 Certificate of a Qualified Technician 1"
		CertificateOfTechnician casestring
		
	Case "Canada IJ P044 Notice of Intention to Produce Certificate(s)"
		NoticeToProduceBreathCertificate casestring
		
	Case "Canada IJ P058 Show Cause Hearing Report"
		ShowCauseReport casestring
		
	Case "Canada IJ P061 NOI Introduce Copies of Documents at Trial"
		NoticeToProduceDocuments casestring
		
	Case "Canada IJ P062 Domestic Violence Supplementary"
		DomesticViolenceReport casestring
		
	Case "Canada IJ P081 Witness List"
		WitnessList casestring
		
	'Case "Canada IJ P083 Police Officer's Statement"
	'	StatementPoliceWitness casestring
		
	Case "Canada IJ P086 C.B. Cover 1"
		CrownBriefCover casestring
		
	Case "Canada IJ P098 C.B. Synopsis"
		CourtSynopsis casestring
		
	Case "Canada OT 054 Occurrence Report"
		OccurrenceReport casestring
		
	Case "Canada OT 056 Supplementary Report"
		SupplementaryReport casestring
		
	Case "Canada OT 063 Criminal Record"
		CPICResponse casestring
		
	Case "Canada OT 064 CNI Criminal Name Index"
		CPICResponse casestring
		
	Case "Canada OT 065 CRFO Canadian Firearms Registry Online"
		CPICResponse casestring
		
	Case "Canada OT 066 CPIC Query"
		CPICResponse casestring
		
	Case "Canada OT 068 Local Criminal Record"
		CPICResponse casestring
		
	Case "Canada YCJ-26 YCJA Notice To Parent, Relative, or Friend 1"
		NoticeToParent casestring
		
	Case "Canada YCJ-CC10 YCJA Promise to Appear"
		PromiseToAppear casestring
		
	Case "Canada YCJ-CC11 YCJA Recog Entered Before an Officer 1"
		RecogEnteredBeforeOfficer casestring
		
	Case "Canada YCJ-CC11.1 YCJA Undertaking Given to an Officer"
		UndertakingGivenToOfficer casestring
		
	Case "Canada YCJ-CC16 YCJA Subpeona to a Witness 1"
		SubpeonaToWitness casestring
		
	Case "Canada YCJ-CC6 YCJA Summons 1"
		Summons casestring
		
	Case "Canada YCJ-CC7 YCJA Warrant For Arrest Endorsement 1"
		WarrantForArrest casestring
		
	' Phase II	
	Case "Canada CCO-1-487-1 Information to Obtain a Search Warrant 1"
		InformationObtainSW casestring
		
	'Case "Canada CCO-1-529-3 Information to Obtain a Warrant-Endorsement - enter Dwelling-Arrest 1"
		'CCO-1-529-3 replaced by CCO-1-529.1
	Case "Canada CCO-1-529.1 Information to Obtain a Warrant-Endorsement - enter Dwelling-Arrest 1"
		InformationObtainWE casestring
		
	Case "Canada CCO-1-529(1) Information to Obtain a Warrant 1"
		InformationObtainW casestring
		
	Case "Canada CCO-5-487-1 Warrant to Search"
		SearchWarrant casestring
		
	Case "Canada CCO-5.2-489-1 Report to a Justice-Order of Disposition of Items Seized 1"
		ReportToJustice casestring
		
	Case "Canada CCO-6-493-1 Summons to Person Charged with Offence 1"
		Summons casestring
		
	Case "Canada CSO-117.04-1 Application Issue Warrant Search, Seizure Firearms, Weapons"
		InformationObtainSWtoSeizeFirearms casestring
		
	Case "Canada CSO-117.04-2 Warrant Search for and Seize Firearms, Weapons"
		SWtoSeizeFirearms casestring
		
	Case "Canada CSO-117.04-3(a) Return - The following articles were seized"
		ReturnWarrant casestring
		
	Case "Canada CSO-810 Summons to Appear 1"
		SummonsToAppear casestring
		
	' Phase III
	Case "Canada CCO-5.01-487 Information to Obtain a Warrant to take Bodily Substances 1"
		InformationObtainBodSub casestring
		
	Case "Canada CCO-5.02-487 Warrant Authorizing the taking of Bodily Substances for Forensic 1"
		WarrantObtainBodSub casestring
		
	Case "Canada CCO-7-475-1 Warrant for Arrest with Authorization to Enter a Dwelling-House Endorsement Forms 1"
		WarrantAuthorizedEntry casestring
		
	Case "Canada CCO-7.1-529-1 Warrant To Enter Dwelling House-Endorsement of Warrant Form 1"
		WarrantEnterDwelling casestring
		
	Case "Canada CFS 038 Certificate of Qualified Medical Practitioner 1"
		CertificateOfPractitioner casestring
		
	Case "Canada CSO-111-1 Application Prohibiting Possessing Firearms, Weapons"
		ApplicationFirearms casestring
		
	Case "Canada CSO-111-2 Notice of Hearing 1"
		NoticeOfHearing casestring
		
	Case "Canada CSO-111-3 Order Prohibiting Possessing Firearms, Weapons 1"
		OrderProhibitFirearms casestring
		
	Case "Canada CSO-117.011-1 Application and Subsequent Order"
		ApplicationSubOrder casestring
		
	Case "Canada CSO-117.04-05 Application - Order for Disposition Articles Seized 1"
		ApplicationOrderDisposition casestring
		
	' Phase IV
		
	Case "Canada CSO-117.04-3(b) Return"
		ReturnFirearms casestring
		
	Case "Canada IJ P015 Notice of Application for Increased Penalty"
		NoticeOfIncreasedPenalty casestring
		
	Case "Canada IJ P016 Notice of Trial"
		NoticeOfTrial casestring
		
	Case "Canada IJ P057 Consent to Search"
		ConsentToSearch casestring
		
	Case "Canada IJ P068 Notice Pursuant to the C.C. & C.E.A. For FTA"
		NoticeToCCCAndCEA casestring
		
	Case "Canada IJ P073 Notice to Introduce as Evidence Property Obtained by Crime"
		NoticeIntroduceOffences casestring
		
	Case "Canada IJ P077 Request for Certified Copies"
		RequestCopies casestring
		
	Case "Canada IJ P079 Affidavit of Property Owner"
		AffidavitPropertyOwner casestring
		
	Case "Canada IJ P101 Certificate of Service"
		CertificateOfService casestring
		
	Case "Canada IJ P201 DNA Insert"
		DNAInformationInsert casestring
		
	' Phase V
	Case "Canada CCO-2-810-1 Information - Where Injury or Damage Feared"
		
	Case "Canada CCO-5.03-487 Order Authorizing the Taking of Bodily Substances for Forensic"
		OrderTakeBodilySubstances casestring
		
	Case "Canada CCO-5.04-487 Order Authorizing the Taking of Bodily Substances for Forensic"
		OrderTakeBodilySubstances casestring
		
	Case "Canada CCO-5.05-487 Application for an Authorization to take Bodily Substances for Forensic DNA Analysis"
		ApplicationBodilySubstances casestring
		
	Case "Canada CCO-5.06-487 Authorization for the Taking of Bodily Substances for Forensic DNA Analysis 1"
		AuthorizeTakeBodilySubstances casestring
		
	Case "Canada CCO-5.07-487 Report to a Provincial Court Judge or the Court"
		ReportToJudge casestring
		
	Case "Canada CLD-0025 Provincial Standard Court Brief Form"
		
	Case "Canada IJ P065 Consent to Obtain DNA Samples 1"
		ConsentToObtainDNA casestring
		
	Case "Canada IJ P075 Certificate of Photographer"
		CertificateOfPhotographer casestring
		
	Case "Canada IJ P076 Affidavit of Person Seizing Property"
		AffidavitSeizingProperty casestring
		
	' Phase VI
	Case "Canada CCO-2-810-1 Information - Where Injury or Damage Feared 1"
		InjuryOrDamageInformation casestring
		
	Case "Canada CCO-5.08-487 Application for an Authorization for taking Additional Samples of Bodily Substances for Forensic DNA"
		ApplicationBodilySubstances casestring
		
	Case "Canada CCO-5.09-487 Authorization for the taking of Additional Samples of Bodily Substances for Forensic DNA"
		AuthorizeTakeBodilySubstances casestring
		
	Case "Canada CCO-5.1-487-7 Telewarrant Obtain Bodily Parts or Impressions 1"
		TelewarrantToObtain casestring
		
	Case "Canada CCO-7.1-529-2 Telewarrant to Enter Dwelling-House 1"
		TelewarrantToEnterDwelling casestring
		
	Case "Canada CFS 069 Case Submission 1"
		CaseSubmission casestring
		
	Case "Canada CLD-0025 Provincial Standard Court Brief Cover 1"
		CourtBriefCover casestring
		
	'Case "Canada IJ P066 YCJA Youth Statement Form"
	'	CautionedStatement casestring
		
	Case "Canada IJ P067 Audio Video Synopsis"
		AudioVideoSynopsis casestring
		
	'Phase VII
	Case "Canada CCO-19-516-1 Warrant Remanding Prisoner (Adult) 1", "Canada YCJ-CC19 Warrant Remanding Prisoner (Youth) 1"
		WarrantRemandingPrisoner casestring
		
	Case "Canada Medical Release Form"
		AuthorizationMedicalRelease casestring	
		
	Case "Canada CSO-145(9)-2 Certificate by person in Charged accused failed to appear"
		CertificateFailedToAppear casestring
		
	Case "Canada CCO-1-529-4 Page 1 Information to obtain a telewarrant"
		InformationObtainTWDwelling casestring
		
	Case "Canada CCO-32-493-1 Recognizance to Keep the Peace Page 1"
		RecognizanceOfKeepThePeace casestring
		
	Case "Miscellaneous Court Document"
		MiscellaneousCourtDocument casestring
		
	Case "Canada IJ P090 Court Brief Index"
		CourtBriefIndex casestring
		
	End Select
	
	' Save all the CBTmpFields
	Forall item In CurrentDoc.items
		If Ucase(Left(item.name,5))="CBTMP" Then
			Forall value In item.values
				CBDlgDataXML=CBDlgDataXML & "<" & item.name & ">" & value & "</" & item.name & ">"
			End Forall
		End If
	End Forall
	CBForm.CBDlgData=CBDlgDataXML
End Sub

'++LotusScript Development Environment:2:1:OfficerLookup:1:8
Function OfficerLookup(officer As String)
	NL=Chr$(13) & Chr$(10)
	
	Set employeeview = lookupdb.GetView("Employee by Name")
	Set doc=employeeview.GetDocumentByKey(officer,True)
	If Not doc Is Nothing Then
		If Strleft(officer,"/") <> "" Then
			fullname = Strleft(officer,"/")
			lname = Strright(fullname," ")
			fname = Strleft(fullname," ")
		Else
			fullname = officer
			lname = Strright(fullname," ")
			fname = Strleft(fullname," ")
		End If
		OfficerLookup = Fulltrim(doc.Field2(0) & " " & fullname & " Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
	Else
		OfficerLookup = officer
	End If
	
End Function

'++LotusScript Development Environment:2:2:ReportToJustice:1:8
Sub ReportToJustice(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim WarrantDate As notesdatetime
	Dim overflowtext As String, retval As Integer, PrinterName As String
	Dim AddFormats() As String, ad As Integer, n As Integer, textlen As Integer, sp As Integer
	Dim AdditionalPages() As String, OverFlowFlag As Integer
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPeaceOfficer(0) & ")" 
		CBForm.CBFormShortDetails=StrTmp
		If CurrentDoc.CBTmpWIssuedBy(0) <> "" Then
			StrTmp=StrTmp & NL & "Warrant Issued By " & CurrentDoc.CBTmpWIssuedBy(0) & " on " &_
			Format(CurrentDoc.CBTmpWarrantDate(0),"yyyy-mmm-dd")
		Else
			StrTmp=StrTmp & NL & "Statutory Authority -" & CurrentDoc.CBTMPStatutoryAuthority(0)		
		End If
		
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("PeaceOfficer") =  CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("ActedUnder") =  CurrentDoc.CBTmpActedUnder(0)
		FieldList("Section"+CurrentDoc.CBTmpActedUnder(0)) =  CurrentDoc.CBTmpSection(0)
		FieldList("WarrantIssuedBy"+CurrentDoc.CBTmpActedUnder(0)) =  CurrentDoc.CBTmpWIssuedBy(0)
		
		' Break out the pieces for the warrant date
		Set item=CurrentDoc.GetFirstItem("CBTmpWarrantDate")
		Set WarrantDate=item.datetimevalue
		Select Case Day(WarrantDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp = Day(WarrantDate.lslocaltime) & StrTmp
		StrTmp = Format(WarrantDate.lslocaltime,"mmmm") & " " & StrTmp
		FieldList("WarrantDate"+CurrentDoc.CBTmpActedUnder(0)) =  StrTmp
		FieldList("WarrantYear"+CurrentDoc.CBTmpActedUnder(0))=Year(WarrantDate.lslocaltime)
		FieldList("WarrantIssuedLocation"+CurrentDoc.CBTmpActedUnder(0)) =  CurrentDoc.CBTmpWIssuedLocation(0)
		FieldList("StatutoryAuthority"+CurrentDoc.CBTmpActedUnder(0)) =  CurrentDoc.CBTmpStatutoryAuthority(0)
		
		FieldList("SearchInfo") =  CurrentDoc.CBTmpNatureOfSearch(0)
		
		n = 1
		sp = 0
		
		StrTmp = CurrentDoc.CBTmpItemsReturned(0)
		textlen = Len(StrTmp)
		' In Inches, multiply by 100 to get width and height.
		RetVal = IPSFitText(PrinterName, StrTmp,750, 25, "Arial", 8, 1)
		If retval >= textlen Then
			FieldList("ReturnedItems") = StrTmp
		Else
			OverFlowFlag = 1
			sp = sp + 1
			FieldList("ReturnedItems") = "See Exhibit " + Cstr(n)
			
			RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
			If retval >= textlen Then
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Else
				Do Until RetVal >= textlen
					Overflowtext = Mid$(StrTmp, RetVal + 2)	
					StrTmp = Left$(StrTmp, RetVal + 1)
					Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
					StrTmp = Strleftback(StrTmp, " ")
					
					FieldList("TextPage"+Cstr(n)) = StrTmp
					
					StrTmp = Overflowtext
					textlen = Len(StrTmp)
					
					RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
					
					Redim Preserve AdditionalPages(1 To n)
					AdditionalPages(n) = Cstr(n)
					n = n + 1
				Loop
				FieldList("TextPage"+Cstr(n)) = StrTmp
				FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
			End If
			FieldList("TextPage"+Cstr(n)) = StrTmp
			FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
		End If
		
		StrTmp = CurrentDoc.CBTmpItemsDetained(0)
		textlen = Len(StrTmp)
		' In Inches, multiply by 100 to get width and height.
		RetVal = IPSFitText(PrinterName, StrTmp,750, 40, "Arial", 8, 1)
		If retval >= textlen Then
			FieldList("DetainedItems") = StrTmp
		Else
			OverFlowFlag = 1
			sp = sp + 1
			FieldList("DetainedItems") = "See Exhibit " + Cstr(n)
			
			RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
			If retval >= textlen Then
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Else
				Do Until RetVal >= textlen
					Overflowtext = Mid$(StrTmp, RetVal + 2)	
					StrTmp = Left$(StrTmp, RetVal + 1)
					Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
					StrTmp = Strleftback(StrTmp, " ")
					
					FieldList("TextPage"+Cstr(n)) = StrTmp
					
					StrTmp = Overflowtext
					textlen = Len(StrTmp)
					
					RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
					
					Redim Preserve AdditionalPages(1 To n)
					AdditionalPages(n) = Cstr(n)
					n = n + 1
				Loop
				FieldList("TextPage"+Cstr(n)) = StrTmp
				FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
			End If
			FieldList("TextPage"+Cstr(n)) = StrTmp
			FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
		End If
		
		FieldList("DetainedItemsLocation") =  CurrentDoc.CBTmpDetainedAt(0)
		
		StrTmp = CurrentDoc.CBTmpAdditionalItems(0)
		textlen = Len(StrTmp)
		' In Inches, multiply by 100 to get width and height.
		RetVal = IPSFitText(PrinterName, StrTmp,730, 25, "Arial", 8, 1)
		If retval >= textlen Then
			FieldList("AdditionalItems") = StrTmp
		Else
			OverFlowFlag = 1
			sp = sp + 1
			FieldList("AdditionalItems") = "See Exhibit " + Cstr(n)
			
			RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
			If retval >= textlen Then
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Else
				Do Until RetVal >= textlen
					Overflowtext = Mid$(StrTmp, RetVal + 2)	
					StrTmp = Left$(StrTmp, RetVal + 1)
					Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
					StrTmp = Strleftback(StrTmp, " ")
					
					FieldList("TextPage"+Cstr(n)) = StrTmp
					
					StrTmp = Overflowtext
					textlen = Len(StrTmp)
					
					RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
					
					Redim Preserve AdditionalPages(1 To n)
					AdditionalPages(n) = Cstr(n)
					n = n + 1
				Loop
				FieldList("TextPage"+Cstr(n)) = StrTmp
				FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
			End If
			FieldList("TextPage"+Cstr(n)) = StrTmp
			FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
		End If
		
		FieldList("AdditionalItemsLocation") =  CurrentDoc.CBTmpHeldAt(0)
		
		StrTmp = CurrentDoc.CBTmpGrounds(0)
		textlen = Len(StrTmp)
		' In Inches, multiply by 100 to get width and height.
		RetVal = IPSFitText(PrinterName, StrTmp,690, 25, "Arial", 8, 1)
		If retval >= textlen Then
			FieldList("Grounds") = StrTmp
		Else
			OverFlowFlag = 1
			sp = sp + 1
			FieldList("Grounds") = "See Exhibit " + Cstr(n)
			
			RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
			If retval >= textlen Then
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Else
				Do Until RetVal >= textlen
					Overflowtext = Mid$(StrTmp, RetVal + 2)	
					StrTmp = Left$(StrTmp, RetVal + 1)
					Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
					StrTmp = Strleftback(StrTmp, " ")
					
					FieldList("TextPage"+Cstr(n)) = StrTmp
					
					StrTmp = Overflowtext
					textlen = Len(StrTmp)
					
					RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
					
					Redim Preserve AdditionalPages(1 To n)
					AdditionalPages(n) = Cstr(n)
					n = n + 1
				Loop
				FieldList("TextPage"+Cstr(n)) = StrTmp
				FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
			End If
			FieldList("TextPage"+Cstr(n)) = StrTmp
			FieldList("ExhibitNumber"+Cstr(n)) = Cstr(sp)
		End If
		
		FieldList("WarrantNotExecuted") =  CurrentDoc.CBTmpWNonExecutionReasons(0)
		
		FormDatedInformation
		
		ad = 0
		If OverFlowFlag = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			AddFormats(ad) = "IJ Form Exhibit"
			CBForm.AdditionalPages = AdditionalPages
		Else
			If CBForm.HasItem("AdditionalPages") Then
				CBForm.RemoveItem("AdditionalPages")
			End If
		End If
		
		If ad <> 0 Then
			CBForm.AdditionalIPFormats = AddFormats
		Else
			If CBForm.HasItem("AdditionalIPFormats") Then
				CBForm.RemoveItem("AdditionalIPFormats")
			End If
		End If
		
		CBForm.IPIndex = 1
	End Select
End Sub

'++LotusScript Development Environment:2:1:ConvertUNIDtoDocID:1:8
Function ConvertUNIDtoDocID(UNIDStr As String) As String
	' This function takes a string of UNIDS that are separated by ; and converts them to DocIDs which Intelliprint requires
	' UNIDs are stored in the first place so that a CB can be created in any replica copy and then printed from any other.
	' DocIDs are specific to each database.
	
	Dim doc As NotesDocument
	Dim StrTmp As String
	Dim v As Variant
	Dim Item As NotesItem
	Const ExplodeConstant=|@Trim(@Explode(CBTmpEval;";"))|
	If Trim(UNIDStr)="" Then Exit Function
	Set item=CurrentDoc.ReplaceItemValue("CBTmpEval",UNIDStr)
	v=Evaluate(ExplodeConstant,CurrentDoc)
	Set Item=CurrentDoc.ReplaceItemValue("CBTmpEval",v)
	
	Forall UNID In CurrentDoc.CBTmpEval
		Set doc=CurrentDatabase.getdocumentbyUNID(UNID)
		If Not Doc Is Nothing Then
			StrTmp=StrTmp & doc.NoteID & ";"
		End If
	End Forall
	CurrentDoc.RemoveItem("CBTmpEval")
	ConvertUNIDtoDocID=StrTmp
	
End Function

'++LotusScript Development Environment:2:2:WarrantForArrest:1:8
Sub WarrantForArrest(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CommittedDate As NotesDateTime
	Dim OffenceDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim OffenceLocation As String
	Dim AdditionalLocation As String
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " &  CurrentDoc.CBTmpAccused(0) 
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		FieldList("Region")=CurrentDoc.JudicialRegion(0)		
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)				
		
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		
		FieldList("AccusedDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		
		' This form is not looking for the accused address but instead the jurisdiction
		' Changed September 29th, 2005 Brian Henry
		If Not Strleft(CurrentDoc.CBTmpAccusedResides1(0)," of ") = "" Then
			FieldList("AccusedResidesType")= Trim(Strleft(CurrentDoc.CBTmpAccusedResides1(0),"of"))
			FieldList("AccusedResidesName")= Trim(Strright(CurrentDoc.CBTmpAccusedResides1(0),"of"))
		Else
			FieldList("AccusedResidesType")= CurrentDoc.CBTmpAccusedResides1(0)
		End If
		
		If Not Strleft(CurrentDoc.CBTmpAccusedResides2(0)," of ") = "" Then
			FieldList("AccusedJurisdictionType")= Trim(Strleft(CurrentDoc.CBTmpAccusedResides2(0),"of"))
			FieldList("AccusedJurisdictionName")= Trim(Strright(CurrentDoc.CBTmpAccusedResides2(0),"of"))
		Else
			FieldList("AccusedJurisdictionType")= CurrentDoc.CBTmpAccusedResides2(0)
		End If
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			If OffenceLocation="" Then
				OffenceLocation=doc.CommitedTown(0)
			Else
				If OffenceLocation<>doc.CommitedTown(0) Then
					AdditionalLocation=doc.CommitedTown(0)
				End If
			End If
			
			' Build a string of charges
			'Charges=Charges & "Contrary to section " & doc.Charge(0)& NL
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges")=Charges
		
		FieldList("OffenceDate")=EarliestDate
		Set OffenceDate = New NotesDateTime(Format(EarliestDate,"Short Date"))
		Select Case Day(OffenceDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(OffenceDate.lslocaltime) & StrTmp
		FieldList("OffenceDay")=StrTmp
		FieldList("OffenceMonth")=Format(OffenceDate.lslocaltime,"MMMM")
		FieldList("OffenceYear")=Format(OffenceDate.lslocaltime,"YYYY")
		
		If Not Strleft(OffenceLocation," of ") = "" Then
			FieldList("OffenceLocationType")= Trim(Strleft(OffenceLocation,"of"))
			FieldList("OffenceLocationName")= Trim(Strright(OffenceLocation,"of"))
		Else
			FieldList("OffenseLocation")= OffenceLocation
		End If
		
		If AdditionalLocation<>"" Then
			FieldList("OffenceLocationName")=FieldList("OffenceLocationName") & " and elswhere in the Province of Ontario"
		End If
		
		StrTmp=""
		' Cycle through Whereas
		Forall data In CurrentDoc.CBTmpWhereas
			StrTmp=StrTmp & data & ", "
			If data = "j" Then
				FieldList("WhereasWording")=CurrentDoc.CBTmpWording(0)
			End If
		End Forall
		
		FieldList("Whereas")=Left(StrTmp,Len(StrTmp)-2)
		FieldList("Judge")="Judge"
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:DeleteXMLItemValue:1:8
Sub DeleteXMLItemValue (FieldName As String, XMLNodeName List As String)
	Dim DataString As String
	Dim DataStringLength As Integer
	Dim LeadingNodeNameStart As Integer
	Dim LeadingNodeNameEnd As Integer
	Dim TrailingNodeNameStart As Integer
	Dim TrailingNodeNameEnd As Integer
	'Dim NodeName As String
	Dim NodeValue As String
	Dim StrTmp As String
	Dim IntTmp As Integer
	Dim item As notesitem
	Dim XMLStartSegment As String
	Dim XMLEndSegment As String
	Dim NL As String
	
	NL=Chr$(13) & Chr$(10)
	
	Set item=CurrentDoc.GetFirstItem(FieldName)
	DataString=item.values(0)
	XMLStartSegment=DataString
	LeadingNodeNameEnd=1	
	Forall NodeNameEntry In XMLNodeName
		StrTmp="<" & NodeNameEntry & ">"
		LeadingNodeNameStart=Instr(LeadingNodeNameEnd,DataString,StrTmp)
		' Child nodes need to be found within the length of thier parent however the first node won't
		' have a parent therefore set the highwater mark so it passes the test
		If TrailingNodeNameStart=0 Then TrailingNodeNameStart=LeadingNodeNameStart
		' Child nodes will be within the length of thier parent
		If LeadingNodeNameStart<>0 And LeadingNodeNameStart<=TrailingNodeNameStart Then
			' Leading Node name was found
			LeadingNodeNameEnd=LeadingNodeNameStart + Len(StrTmp) -1
			StrTmp="</" & NodeNameEntry & ">"
			TrailingNodeNameStart=Instr(LeadingNodeNameEnd,DataString,StrTmp)
			If TrailingNodeNameStart<>0 Then
				' Trailing Node name found
				TrailingNodeNameEnd=TrailingNodeNameStart + Len(StrTmp) -1
				NodeValue=Mid(DataString,(LeadingNodeNameEnd+1),TrailingNodeNameStart-(LeadingNodeNameEnd+1))
				
				XMLStartSegment=Left(DataString,LeadingNodeNameEnd)
				IntTmp=(Len(DataString)-TrailingNodeNameStart)+1
				XMLEndSegment=Right(DataString,IntTmp)
			Else
				' Trailing node name was not found. Indicates a malformed XML string
				Messagebox "Malformed XML String encountered", 0 , "Enterpol Court Brief"
			End If
			
		Else
			' Node was not found so there is nothing to delete
			Exit Sub
		End If
		
	End Forall
	' If the routine made it this far then we can create the new datastring
	StrTmp=Left$(DataString,LeadingNodeNameStart-1)
	If Right$(StrTmp,2)=NL Then StrTmp=Left$(StrTmp,Len(StrTmp)-2)
	DataString=StrTmp &  Right$(DataString,Len(DataString)-TrailingNodeNameEnd)
	
	item.values=DataString
End Sub

'++LotusScript Development Environment:2:2:CertificateOfTechnician:1:8
Sub CertificateOfTechnician(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim SampleDate As notesdatetime
	Dim tech As String
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		
		StrTmp = ""
		If lookupdb.IsOpen Then
			StrTmp = OfficerLookup(CurrentDoc.CBTmpTechnician(0))
		Else
			StrTmp = CurrentDoc.CBTmpTechnician(0)
		End If		
		
		CBForm.CBFormLongDetails=CBForm.CBFormShortDetails(0) & NL & "Technician: " & StrTmp 
		
	Case "CreateForm"
		
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpTechnician(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpTechnician(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpTechnician(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpTechnician(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & fullname & " Badge# " & doc.Field3(0) & NL & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpTechnician(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpTechnician(0)
		End If		
		FieldList("Technician")=StrTmp
		
		FieldList("TechMunicipalityType")= Trim(Strleft(CurrentDoc.CBTmpMunicipality(0),"of"))
		FieldList("TechMunicipalityName")= Trim(Strright(CurrentDoc.CBTmpMunicipality(0),"of"))
		FieldList("ApprovedInstrument")= CurrentDoc.CBTmpApprovedInstrument(0)
		FieldList("LocTakenMunicipalityType")= Trim(Strleft(CurrentDoc.CBTmpLocationTaken(0),"of"))
		FieldList("LocTakenMunicipalityName")= Trim(Strright(CurrentDoc.CBTmpLocationTaken(0),"of"))
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Break out the pieces for the first sample date
		
		' Check if date was entered (Changed Sept. 26th, 2005 Brian Henry)
		If CurrentDoc.CBTmpFirstDate(0)<>"" Then
			Set item=CurrentDoc.GetFirstItem("CBTmpFirstDate")
			Set SampleDate=item.datetimevalue
			Select Case Day(SampleDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(SampleDate.lslocaltime) & StrTmp
			FieldList("FirstSampleDay")=StrTmp
			FieldList("FirstSampleMonth")=Format(SampleDate.lslocaltime,"mmmm")
			FieldList("FirstSampleYear")=Year(SampleDate.lslocaltime)
		End If
		If CurrentDoc.CBTmpFirstTime(0)<>"" Then
			FieldList("FirstSampleTime")=Format(CurrentDoc.CBTmpFirstTime(0),"hh:mm")
		End If
		
		' Break out the pieces for the second sample date
		' Check if date was entered (Changed Sept. 26th, 2005 Brian Henry)
		If CurrentDoc.CBTmpSecondDate(0)<>"" Then
			Set item=CurrentDoc.GetFirstItem("CBTmpSecondDate")
			Set SampleDate=item.datetimevalue
			Select Case Day(SampleDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(SampleDate.lslocaltime) & StrTmp
			FieldList("SecondSampleDay")=StrTmp
			FieldList("SecondSampleMonth")=Format(SampleDate.lslocaltime,"mmmm")
			FieldList("SecondSampleYear")=Year(SampleDate.lslocaltime)
		End If
		If CurrentDoc.CBTmpSecondTime(0)<>"" Then
			FieldList("SecondSampleTime")=Format(CurrentDoc.CBTmpSecondTime(0),"hh:mm")
		End If
		FieldList("InstrumentUsed")= CurrentDoc.CBTmpInstrumentUsed(0)
		FieldList("Manufacturer")= CurrentDoc.CBTmpManufacturer(0)
		FieldList("AlcoholLotNumber")= CurrentDoc.CBTmpAlcoholLotNumber(0)
		FieldList("FirstSampleResult")= CurrentDoc.CBTmpFirstResult(0)
		FieldList("SecondSampleResult")= CurrentDoc.CBTmpSecondResult(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:TelewarrantToObtain:1:8
Sub TelewarrantToObtain(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim IssuedDate As notesdatetime
	Dim charges As String
	
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Nature of Print or Impression: " & CurrentDoc.CBTmpNature(0) 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB")=Format(doc.DOB(0),"yyyy/mm/dd")
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Cycle through charges 
		'Forall charge In CurrentDoc.CBTmpChargesUNID
		'	Set doc=Currentdatabase.getdocumentbyUNID(Charge)
		'	If Not doc Is Nothing Then
		'		Charges=Charges & doc.charge(0) & NL
		'	End If
		'End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Offences")=Charges
		
		FieldList("PeaceOfficer")=CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("Agency")=CurrentDoc.CBTmpAgency(0)
		FieldList("Division")=CurrentDoc.CBTmpDivision(0)
		FieldList("Nature")=CurrentDoc.CBTmpNature(0)
		FieldList("PeaceOfficer")=CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("WarrantTimeFrame")=CurrentDoc.CBTmpWarrantDateTimeFrame(0)
		
		Set item=CurrentDoc.GetFirstItem("CBTmpIssuedDate")
		If item.Type = 1024 Then
			Set IssuedDate=item.datetimevalue
			Select Case Day(IssuedDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(IssuedDate.lslocaltime) & StrTmp
			FieldList("IssuedDay")=StrTmp
			FieldList("IssuedMonth")=Format(IssuedDate.lslocaltime,"mmmm")
			FieldList("IssuedYear")=Year(IssuedDate.lslocaltime)
			FieldList("IssuedTime")=Left(Format(CurrentDoc.CBTmpIssuedTime(0),"h:mm AM/PM"),5)
		End If
		
		FieldList("IssuedPlace")=CurrentDoc.CBTmpIssuedPlace(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:SearchWarrant:1:8
Sub SearchWarrant(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Search " & CurrentDoc.CBTmpPremises(0) & " at " & CurrentDoc.CBTmpPremisesAt(0) &_
		" for " & CurrentDoc.CBTmpEvidence(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		
		StrTmp = ""
		'Forall data In CurrentDoc.CBTmpPeaceOfficer
		'	StrTmp = StrTmp + data + ", "
		'End Forall
		FieldList("PeaceOfficers")=CurrentDoc.CBTmpPeaceOfficer(0)
		
		FieldList("Informant") = CurrentDoc.CBTmpInformant(0)
		FieldList("Premises") = CurrentDoc.CBTmpPremises(0)
		FieldList("PremisesAt") = CurrentDoc.CBTmpPremisesAt(0)
		FieldList("Evidence") = CurrentDoc.CBTmpEvidence(0)
		FieldList("CriminalCodeSection")=CurrentDoc.CBTmpCriminalCodeSection(0)
		FieldList("EntryHours") = CurrentDoc.CBTmpEntryHours(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:InformationObtainBodSub:1:8
Sub InformationObtainBodSub(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPerson(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Offence: " & CurrentDoc.CBTmpOffence(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("PeaceOfficer") = CurrentDoc.CBTmpPeaceOfficer(0)		
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		FieldList("InformantOf") = CurrentDoc.CBTmpInformantOf(0)
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)		
		FieldList("InformantRegion")=CurrentDoc.CBTmpRegion(0)
		FieldList("Offence") = CurrentDoc.CBTmpOffence(0)
		FieldList("Person")=CurrentDoc.CBTmpPerson(0)	
		FieldList("Grounds")=CurrentDoc.CBTmpGrounds(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CaseSubmission:1:8
Sub CaseSubmission(Process As String)
	Set ws = New NotesUIWorkspace	
	NL=Chr$(13) & Chr$(10)
	Dim iofficer As String
	Dim n As Integer
	
	Set lookupdb = GetLookupDatabase
	Const CaseHistoryEntryConstant = |@Trim(Subject)|
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		' The Choices need to be refreshed from RMS everytime
		
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		
		If CBForm.isnewnote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
			
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				Select Case doc.form(0)
				Case "Supplementary"
					v=Evaluate(CaseHistoryEntryConstant,doc)
					v=v(0)  & "|" & doc.UniversalID
					item.appendtotextlist v
				End Select
				
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		If CBForm.IsNewNote Then
			flag= ws.dialogbox("CB_PromptSuppDlg" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
			' if the user hit cancel or didn't make any selection we don't want the final prompt to be displayed
			If Flag=False Or CurrentDoc.CBTmpSuppList(0)="" Then
				ContinuePrompting=True
				Exit Sub
			Else
				'Populate the default values 
				Set doc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpSuppList(0))
				Set ParentDoc=CurrentDatabase.getdocumentbyUNID(doc.ParentDocumentUNID)
				RetrieveCBRMSDocData ParentDoc.UniversalID,"CB_CaseSubmissionDlg"
			End If
		End If
		
	Case "CreateDlg"
		
		StrTmp=Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) &	" (" & CurrentDoc.CBTmpCurrentOccNum(0) & ") ")
		CBForm.CBFormShortDetails=StrTmp
		
		StrTmp=""
		If CurrentDoc.CBTmpSuppList(0)<>"" Then
			Set doc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpSuppList(0))
			v=Evaluate(CaseHistoryEntryConstant,doc)
			StrTmp=StrTmp & v(0)
		End If
		
		CBForm.CBFormLongDetails=CBForm.CBFormShortDetails(0) & NL & StrTmp
		
	Case "CreateForm"
		
		'CBForm.IPUnids=CurrentDoc.CBTmpSuppList(0)
		FieldList("OccurrenceNumber")=CurrentDoc.CBTmpCurrentOccNum(0)
		
		n = 1
		' Get Accused Information
		Forall data In CurrentDoc.CBTmpAccusedUNID
			Set doc=Currentdatabase.getdocumentbyUNID(data)
			StrTmp = doc.Given1(0) & " " & doc.Given2(0) & " " & 	doc.Surname(0)
			
			'StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
			'RetrieveItemValue(doc, "Given2")(0) & " " &_
			'RetrieveItemValue(doc, "Surname")(0)
			StrTmp=Fulltrim(StrTmp)
			FieldList("Accused"&Cstr(n))=StrTmp
			
			FieldList("AccusedDOB"&Cstr(n))=Format(doc.DOB(0),"yyyy/mm/dd")
			FieldList("AccusedSex"&Cstr(n))=doc.Sex(0)
			
			n = n + 1
		End Forall
		
		n = 1
		' Get Complaintant Information
		Forall data In CurrentDoc.CBTmpComplaintantUNID
			Set doc=Currentdatabase.getdocumentbyUNID(data)
			StrTmp = doc.Given1(0) & " " & doc.Given2(0) & " " & doc.Surname(0)
			'StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
			'RetrieveItemValue(doc, "Given2")(0) & " " &_
			'RetrieveItemValue(doc, "Surname")(0)
			StrTmp=Fulltrim(StrTmp)
			FieldList("Complaintant"&Cstr(n))=StrTmp
			
			FieldList("ComplaintantDOB"&Cstr(n))=Format(doc.DOB(0),"yyyy/mm/dd")
			FieldList("ComplaintantSex"&Cstr(n))=doc.Sex(0)
			
			n = n + 1
		End Forall
		
		FieldList("PoliceCaseID")= CurrentDoc.DefaultPoliceCaseID(0)
		FieldList("CaseType")=CurrentDoc.CBTmpCaseType(0)
		FieldList("DateTime") = Now()
		FieldList("SubmissionDate") = Format(CurrentDoc.CBTmpDateSubmitted(0),"mm/dd/yyyy")
		FieldList("Location") = CurrentDoc.CBTmpLocation(0)
		FieldList("OriginatorNum") = CurrentDoc.CBTmpOriginatorNum(0)
		FieldList("CentreNum") = CurrentDoc.CBTmpCentreNum(0)
		FieldList("DateSubmitted")=Format(CurrentDoc.CBTmpStatementCompletedDate(0),"mm/dd/yyyy")
		FieldList("Coroner")=CurrentDoc.CBTmpCoroner(0)
		FieldList("Pathologist")=CurrentDoc.CBTmpPathologist(0)
		FieldList("CrownAtt")=CurrentDoc.CBTmpCrownAtt(0)
		FieldList("SubmittedBy")=CurrentDoc.CBTmpSubmittedBy(0)
		FieldList("SubmittedByPhone")=CurrentDoc.CBTmpSubPhone(0)
		FieldList("SubmittedByDept")=CurrentDoc.CBTmpSubDept(0)
		FieldList("SubmittedByDeptAddress")=CurrentDoc.CBTmpSubAddress(0)
		FieldList("SubmittedByDeptPostalCode")=CurrentDoc.CBTmpSubPostalCode(0)
		FieldList("Chief")=CurrentDoc.CBTmpChiefInvestigator(0)
		FieldList("ChiefPhone")=CurrentDoc.CBTmpChiefPhone(0)
		FieldList("ChiefDept")=CurrentDoc.CBTmpChiefDept(0)
		FieldList("ChiefDeptAddress")=CurrentDoc.CBTmpChiefAddress(0)
		FieldList("ChiefDeptPostalCode")=CurrentDoc.CBTmpChiefPostalCode(0)
		FieldList("DeliveredBy")=CurrentDoc.CBTmpDeliveredBy(0)
		FieldList("Locker")=CurrentDoc.CBTmpLockers(0)
		FieldList("DateReceived")=Format(CurrentDoc.CBTmpDateReceived(0),"mm/dd/yyyy")
		FieldList("TimeReceived")=Format(CurrentDoc.CBTmpTimeReceived(0),"hh:mm AM/PM")
		
		n = 1
		' Get Property Information
		Forall data In CurrentDoc.CBTmpPropertyUNID
			Set doc=Currentdatabase.getdocumentbyUNID(data)
			
			FieldList("PropExhibit"&Cstr(n))=Cstr(n)
			FieldList("PropSealNum"&Cstr(n))=doc.SealNum(0)
			
			StrTmp = Cstr(doc.Quantity(0)) & " - " & doc.Item(0) & " (" & doc.Description(0) & ")"
			FieldList("PropDescription"&Cstr(n))=StrTmp
			
			FieldList("PropExamRequested"&Cstr(n))=""
			
			n = n + 1
		End Forall
	End Select
End Sub

'++LotusScript Development Environment:2:2:ReturnFirearms:1:8
Sub ReturnFirearms(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim searchDate As NotesDateTime
	Dim overflowtext As String, overflowflag As Integer, retval As Integer, PrinterName As String
	Dim AddFormats() As String, ad As Integer, n As Integer, textlen As Integer
	Dim AdditionalPages() As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpSearchedSubject(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Searched Date: " & Format(CurrentDoc.CBTmpSearchedDate(0),"yyyy-mmm-dd")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		
		' Break out the pieces for the Searched Date
		Set item=CurrentDoc.GetFirstItem("CBTmpSearchedDate")
		Set searchDate=item.datetimevalue
		Select Case Day(searchDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select		
		StrTmp=Day(searchDate.lslocaltime) & StrTmp
		FieldList("SearchDay")=StrTmp
		FieldList("SearchDayName") = Format(searchDate.lslocaltime,"dddd")
		FieldList("SearchMonth")=Format(searchDate.lslocaltime,"mmmm")
		FieldList("SearchYear")=Year(searchDate.lslocaltime)
		
		FieldList("PeaceOfficer") = CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("PeaceOfficerAgency")=CurrentDoc.CBTmpPeaceOfficerAgency(0)
		FieldList("SubjectName") = CurrentDoc.CBTmpSearchedSubject(0)
		FieldList("Grounds")=CurrentDoc.CBTmpGrounds(0)
		
		StrTmp = CurrentDoc.CBTmpArticles(0)
		textlen = Len(StrTmp)
		n = 1
		' In Inches, multiply by 100 to get width and height.
		If StrTmp <> "" Then
			RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
			overflowflag = 1
			FieldList("HideContinue") = "Yes"
			Do Until RetVal >= textlen
				Overflowtext = Mid$(StrTmp, RetVal + 2)	
				StrTmp = Left$(StrTmp, RetVal + 1)
				Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
				StrTmp = Strleftback(StrTmp, " ")
				
				FieldList("TextPage"+Cstr(n)) = StrTmp
				
				StrTmp = Overflowtext
				textlen = Len(StrTmp)
				
				RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
				
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Loop
			Redim Preserve AdditionalPages(1 To n)
			AdditionalPages(n) = Cstr(n)
			FieldList("TextPage"+Cstr(n + 1)) = StrTmp
		End If
		
		FormDatedInformation
		
		ad = 0
		If OverFlowFlag = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			AddFormats(ad) = "Canada Appendix A"
			CBForm.AdditionalPages = AdditionalPages
		Else
			If CBForm.HasItem("AdditionalPages") Then
				CBForm.RemoveItem("AdditionalPages")
			End If
		End If
		
		If ad <> 0 Then
			CBForm.AdditionalIPFormats = AddFormats
		Else
			If CBForm.HasItem("AdditionalIPFormats") Then
				CBForm.RemoveItem("AdditionalIPFormats")
			End If
		End If
		
		CBForm.IPIndex = 1
	End Select
End Sub

'++LotusScript Development Environment:2:2:ApplicationSubOrder:1:8
Sub ApplicationSubOrder(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As notesdatetime
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPeaceOfficer(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Serve copy upon: " & CurrentDoc.CBTmpOrderTo(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("PeaceOfficer") =  CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("Agency") =  CurrentDoc.CBTmpAgency(0)
		FieldList("OrderPursuant") =  CurrentDoc.CBTmpOrder(0)
		FieldList("Person") =  CurrentDoc.CBTmpOrderTo(0)
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDay")=StrTmp
		StrTmp=Format(CourtDate.lslocaltime,"dddd")
		FieldList("CourtDayName")=StrTmp
		StrTmp=Left(StrTmp,Len(StrTmp)-3)
		FieldList("CourtDayNameAbrev")=StrTmp
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
		FieldList("CourtYear")=Year(CourtDate.lslocaltime)
		FieldList("CourtTime")=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)	
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CourtBriefIndex:1:8
Sub CourtBriefIndex (Process As String)
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		ContinuePrompting = False		
		CBForm.makeresponse CurrentDoc		
		CreateCBDlgData		
		CreateCBFormData		
		CBForm.save True,True			
		ThisUI.refresh	
	Case "CreateDlg"		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) 
		CBForm.CBFormShortDetails=StrTmp		
		CBForm.CBFormLongDetails=StrTmp & NL 
	Case "CreateForm"		
		StrTmp = ""
		Forall FormUNID In CurrentDoc.CBTmpCBIndexList
			StrTmp=StrTmp & FormUNID & ";"
		End Forall
		CBForm.IPUnids=StrTmp
	End Select		
End Sub

'++LotusScript Development Environment:2:2:NoticeSuspendDriverLicence:1:8
Sub NoticeSuspendDriverLicence(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)				
		
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedNameSignature")= """" & StrTmp & """"
		
		' Serving Officer
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpPeaceOfficer(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpPeaceOfficer(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname & " Badge# " & doc.Field3(0) & NL & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
		End If		
		FieldList("PeaceOfficer")=StrTmp
		FieldList("PeaceOfficerSignature")= """" & fullname & """"
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:NoticeToProduceBreathCertificate:1:8
Sub NoticeToProduceBreathCertificate(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim CommittedDate As NotesDateTime
	Dim NoticeDate As NotesDateTime
	Dim OffenceLocation As String, OffenceDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Notice Date: " & Format(CurrentDoc.CBTmpNoticeDate(0),"yyyy-mmm-dd")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		' Break out the pieces for the notice date
		' Check first to see if the date is filled in
		If CurrentDoc.CBTmpNoticeDate(0)<>"" Then
			Set item=CurrentDoc.GetFirstItem("CBTmpNoticeDate")
			Set NoticeDate=item.datetimevalue
			Select Case Day(NoticeDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(NoticeDate.lslocaltime) & StrTmp
			FieldList("NoticeDay")=StrTmp
			FieldList("NoticeMonth")=Format(NoticeDate.lslocaltime,"mmmm")
			FieldList("NoticeYear")=Year(NoticeDate.lslocaltime)
		End If
		StrTmp=""
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		FieldList("ServedName")=StrTmp 'added Apr 25, 2014 Brian Henry for Affidavit of service linked to this IP format
		FieldList("Means")=CurrentDoc.CBTmpMeans(0)
		FieldList("CertificateType")=CurrentDoc.CBTmpCertificateType(0)
		
		' Cycle through charges and determine the earliest latest dates involved
		' and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			
			If OffenceLocation="" Then
				OffenceLocation=RetrieveItemValue(doc, "CommittedTown")(0)
			End If
			
			' Build a string of charges
			Charges=Charges & "Contrary to section " & RetrieveItemValue(doc, "Charge")(0) & NL
		End Forall
		
		Set OffenceDate = New NotesDateTime(Format(EarliestDate,"Short Date"))
		Select Case Day(OffenceDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(OffenceDate.lslocaltime) & StrTmp
		FieldList("OffenceDay")=StrTmp
		FieldList("OffenceMonth")=Format(OffenceDate.lslocaltime,"mmmm")
		FieldList("OffenceYear")=Year(OffenceDate.lslocaltime)
		FieldList("OffenceDate")=StrTmp
		If Not Strleft(OffenceLocation," of ") = "" Then
			FieldList("OffenceLocationMunicipalityType")= Trim(Strleft(OffenceLocation,"of"))
			FieldList("OffenceLocationMunicipalityName")= Trim(Strright(OffenceLocation,"of"))
		Else
			FieldList("OffenceLocationMunicipalityType")= OffenceLocation
		End If
		FieldList("OffenceLocation")=OffenceLocation
		FieldList("Charges")=Charges
		
		' added Apr 25, 2014 Brian henry
		' The affidavit of service (IJ0507) is now linked to this report.
		' Pass form name so it enters the value for the affidavit
		FieldList("CopyOf") = "Notice of Intention to Produce Certificate"
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:DNAInformationInsert:1:8
Sub DNAInformationInsert(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "CPIC Date: " & Format(CurrentDoc.CBTmpCPICDate(0),"yyyy-mmm-dd")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)		
		FieldList("CPICConfirm") = CurrentDoc.CBTmpCPICCheck(0)
		FieldList("CPICDate") = Format(CurrentDoc.CBTmpCPICDate(0),"yyyy-mmm-dd")
		FieldList("OffenceCommitted")=CurrentDoc.CBTmpOffenceCommitted(0)
		
		Forall data In CurrentDoc.CBTmpFactors
			FieldList("Factor" & data)=data
		End Forall
		
		Forall data In CurrentDoc.CBTmpDNAFactors
			FieldList("DNAFactor" & data)=data
		End Forall
		
		FieldList("Nature")= CurrentDoc.CBTmpNature(0)
		FieldList("InvestigatingOfficer")=CurrentDoc.CBTmpInvestigatingOfficer(0)
		FieldList("Supervisor")=CurrentDoc.CBTmpSupervisor(0)
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
	End Select
End Sub

'++LotusScript Development Environment:2:2:Statement:1:8
Sub Statement(Process As String)
	Set ws = New NotesUIWorkspace	
	Dim Charges As String
	NL=Chr$(13) & Chr$(10)
	
	Set lookupdb = GetLookupDatabase
	Const StatementEntryConstant = |@Implode(@Trim(Type:@Text(StatementDateTime):StatementLocation);" ")|
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		ContinuePrompting = False
		
		' The Choices need to be refreshed from RMS everytime
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		
		If CBForm.isnewnote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
			
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				Select Case doc.form(0)
				Case "Statement"
					Set ParentDoc=Currentdatabase.GetdocumentbyUNID(doc.parentDocumentUNID)
					flag = True
					Forall InvolvementType In ParentDoc.Type
						If InvolvementType="Accused" Or InvolvementType="Suspect" Then
							v=Evaluate(StatementEntryConstant,doc)
							v=v(0)  & "|" & doc.UniversalID
							item.appendtotextlist v
							Exit Forall
						End If
					End Forall
				End Select
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		
		If CBForm.IsNewNote Then
			flag= ws.dialogbox("CB_PromptStatementDlg" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
			' if the user hit cancel or didn't make any selection we don't want the final prompt to be displayed
			If Flag=False Or CurrentDoc.CBTmpStatementList(0)="" Then
				ContinuePrompting=False
				Exit Sub
			Else
				'Populate the default values
				Set doc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpStatementList(0))
			End If
		End If
		
		'Save the new form with the pertinent data
		Call CBForm.makeresponse(CurrentDoc)
		' Save the data from the dlg box
		CreateCBDlgData
		' Save the data necessary to render the form in Intelliprint
		CreateCBFormData
		
		CBForm.save True,True
		
		'Force the view to reindex so the doc appears after the refresh
		ThisUI.refresh			
		
	Case "CreateDlg"
		
		StrTmp = Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0))
		CBForm.CBFormShortDetails=StrTmp
		
		StrTmp=""
		If CurrentDoc.CBTmpStatementList(0)<>"" Then
			Forall Statements In CurrentDoc.CBTmpStatementList
				Set doc=CurrentDatabase.getdocumentbyUNID(Statements)
				v=Evaluate(StatementEntryConstant,doc)
				StrTmp=StrTmp & NL & v(0)
			End Forall
		End If
		
		CBForm.CBFormLongDetails=CBForm.CBFormShortDetails(0) & NL & StrTmp
	Case "CreateForm"
		
		StrTmp=CurrentDoc.CBTmpStatementList(0)
		CBForm.IPUnids=StrTmp
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ApplicationBodilySubstances:1:8
Sub ApplicationBodilySubstances(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)	
	Dim DDate As NotesDateTime
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Peace Officer: " & CurrentDoc.CBTmpPeaceOfficer(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		StrTmp=""
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("Offender")=StrTmp
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("PeaceOfficer") = CurrentDoc.CBTmpPeaceOfficer(0)		
		FieldList("OfficerOccupation") = CurrentDoc.CBTmpPeaceOfficerOcc(0)
		FieldList("OfficerAgency") = CurrentDoc.CBTmpAgency(0)
		FieldList("OfficerRegion")=CurrentDoc.CBTmpRegion(0)
		
		If CurrentDoc.HasItem("CBTmpDerivedDate") Then
			If CurrentDoc.CBTmpDerivedDate(0)<>"" Then
				Set item = CurrentDoc.GetFirstItem("CBTmpDerivedDate")
				Set DDate=item.datetimevalue
				Select Case Day(DDate.lslocaltime)
				Case 1, 21, 31
					StrTmp="st"
				Case 2, 22
					StrTmp="nd"
				Case 3, 23
					StrTmp="rd"
				Case Else
					StrTmp="th"
				End Select
				StrTmp=Day(DDate.lslocaltime) & StrTmp
				FieldList("DerivedDate")=Format(DDate.lslocaltime,"dd/mm/yyyy")
			End If
			FieldList("Reasons")=CurrentDoc.CBTmpReasons(0)
		End If
		
		FormDatedInformation		
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CrownBriefCover:1:8
Sub CrownBriefCover(Process As String)
	Dim page As Integer
	Dim ns As New NotesSession
	Dim AccInt As Integer, ChrgInt As Integer, WitInt
	Dim XMLNodeName List As String
	Dim v As Variant
	Dim nam As NotesName
	Dim CommittedDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim TodayDate As New notesdatetime (Now)
	
	Select Case Process
	Case "RetrieveDlg"
		ContinuePrompting = False
		'Save the new form with the pertinent data
		Call CBForm.makeresponse(CurrentDoc)
		' Save the data from the dlg box
		CreateCBDlgData
		' Save the data necessary to render the form in Intelliprint
		CreateCBFormData
		
		CBForm.save True,True
		
		'Force the view to reindex so the doc appears after the refresh
		ThisUI.refresh			
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CourtBriefDescription(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		AccInt = 1
		' Get Accused Information
		Forall data In CurrentDoc.AccusedUNID
			'If no accused have been selected then skip
			If data<>"" Then
				Set doc=Currentdatabase.getdocumentbyUNID(data)
				If AccInt = 1 Then
					FieldList("FileName")=RetrieveItemValue(doc, "Surname")(0)
					If doc.HasItem("ArrestDateTime") Then
						FieldList("ArrestDate") = Format(RetrieveItemValue(doc, "ArrestDateTime")(0),"DD MMM YYYY")		
					End If
				End If			
				
				StrTmp = RetrieveItemValue(doc, "Surname")(0) & " " &_
				RetrieveItemValue(doc, "Given1")(0) & " " &_
				RetrieveItemValue(doc, "Given2")(0)
				StrTmp=Fulltrim(StrTmp)
				FieldList("AccusedName"&Cstr(AccInt))=StrTmp
				FieldList("AccusedFPSNo"&Cstr(AccInt))=doc.FPS(0)
				
				StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
				RetrieveItemValue(doc, "Street")(0)
				StrTmp=Fulltrim(StrTmp)
				FieldList("AccusedStreet"&Cstr(AccInt))=StrTmp
				
				StrTmp = RetrieveItemValue(doc, "TownCity")(0) & " " &_
				RetrieveItemValue(doc, "Prov")(0) & " " &_
				RetrieveItemValue(doc, "PostalCode")(0)
				StrTmp=Fulltrim(StrTmp)
				FieldList("AccusedCity"&Cstr(AccInt))=StrTmp
				
				XMLNodeName("Level1")="RMSDoc=" & data
				XMLNodeName("Level2")="CriminalRecordAvail"
				v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
				If Not Datatype(v)=11 Then
					StrTmp = ""			
					Forall record In v
						StrTmp = StrTmp & record & ", "
					End Forall
					FieldList("CriminalRecord"&Cstr(AccInt))=StrTmp
				End If
				
				XMLNodeName("Level1")="RMSDoc=" & data
				XMLNodeName("Level2")="CriminalRecordBadge"
				v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
				If Not Datatype(v)=11 Then
					FieldList("CriminalRecordBy"&Cstr(AccInt))=v(0)
				End If
				
				XMLNodeName("Level1")="RMSDoc=" & data
				XMLNodeName("Level2")="StatementTaken"
				v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
				If Not Datatype(v)=11 Then
					StrTmp = ""			
					Forall record In v
						StrTmp = StrTmp & record & ", "
					End Forall
					FieldList("Statement"&Cstr(AccInt))=StrTmp
				End If
				
				XMLNodeName("Level1")="RMSDoc=" & data
				XMLNodeName("Level2")="StatementBadge"
				v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
				If Not Datatype(v)=11 Then
					FieldList("CautionedStatementBy"&Cstr(AccInt))=v(0)
				End If
				
				FieldList("FormOfRelease"&Cstr(AccInt))=doc.FormOfRelease(0)
				
				AccInt = AccInt + 1
			End If
		End Forall
		
		
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		FieldList("CourtRoom")=CurrentDoc.CourtRoom(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.OccurrenceNumber
			StrTmp = StrTmp & data & ", "
		End Forall
		FieldList("OccurrenceNumbers")=Left(StrTmp,Len(StrTmp)-2)
		
		Set nam = ns.CreateName(currentdoc.AssignedTo(0))
		StrTmp=currentdoc.AssignedToRank(0) & " "
		StrTmp = StrTmp & nam.Common & " #"
		StrTmp = StrTmp & currentdoc.AssignedToBadge(0)
		FieldList("OfficerIC")=Fulltrim(StrTmp)
		FieldList("OfficerICUnit")=Fulltrim(currentdoc.AssignedToDistrict(0) & " " & currentdoc.AssignedToPlatoon(0))
		
		' Get Charge Information
		ChrgInt = 1
		Forall data In CurrentDoc.ChargeUNID
			If data<>"" Then
				Set doc=Currentdatabase.getdocumentbyUNID(data)
				If doc.HasItem("TimeDateCommitted") Then
					Set item=doc.GetFirstItem("TimeDateCommitted")
					Set CommittedDate=item.datetimevalue
					
					v=Cdat(CommittedDate.DateOnly)
					If Isempty(EarliestDate) Then
						EarliestDate=v
					End If
					If Isempty(LatestDate) Then
						LatestDate=v
					End If
					
					If v<EarliestDate Then
						EarliestDate=v			
					End If
					If v>LatestDate Then
						LatestDate=v		
					End If
				End If
				
				FieldList("Charge"&Cstr(ChrgInt))=RetrieveItemValue(doc, "Charge")(0)
				
				ChrgInt =ChrgInt + 1
			End If
		End Forall
		
		FieldList("OffenceDate") = Format(EarliestDate,"DD MMM YYYY")			
		
		
		' Get Witness Information
		WitInt = 1
		Forall data In CurrentDoc.WitnessUNID
			If data<>"" Then
				Set doc=Currentdatabase.getdocumentbyUNID(data)
				
				If doc.HasItem("CompanyName") Then
					If Not doc.CompanyName(0) = "" Then
						FieldList("WitnessHomePhone"&Cstr(WitInt))=doc.CompanyPhone(0)
						StrTmp=doc.CompanyName(0)
					Else
						FieldList("WitnessHomePhone"&Cstr(WitInt))=RetrieveItemValue(doc, "HomePhone")(0)
						StrTmp = RetrieveItemValue(doc, "Surname")(0) & " " &_
						RetrieveItemValue(doc, "Given1")(0) & " " &_
						RetrieveItemValue(doc, "Given2")(0)
						StrTmp=Fulltrim(StrTmp)
					End If
				Else
					FieldList("WitnessHomePhone"&Cstr(WitInt))=RetrieveItemValue(doc, "HomePhone")(0)
					StrTmp = RetrieveItemValue(doc, "Surname")(0) & " " &_
					RetrieveItemValue(doc, "Given1")(0) & " " &_
					RetrieveItemValue(doc, "Given2")(0)
					StrTmp=Fulltrim(StrTmp)
				End If			
				FieldList("WitnessName"&Cstr(WitInt))=StrTmp
				FieldList("WitnessStatus"&Cstr(WitInt))=RetrieveItemValue(doc, "Type")(0)
				
				StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
				RetrieveItemValue(doc, "Street")(0)
				StrTmp=Fulltrim(StrTmp)
				FieldList("WitnessAddress"&Cstr(WitInt))=StrTmp
				
				StrTmp = RetrieveItemValue(doc, "TownCity")(0) & " " &_
				RetrieveItemValue(doc, "Prov")(0) & " " &_
				RetrieveItemValue(doc, "PostalCode")(0)
				FieldList("WitnessCity"&Cstr(WitInt))=StrTmp
				
				FieldList("WitnessBusinessPhone"&Cstr(WitInt))=RetrieveItemValue(doc, "BusinessPhone")(0)
				
				XMLNodeName("Level1")="RMSDoc=" & data
				XMLNodeName("Level2")="WitnessInformation"
				v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
				If Not Datatype(v)=11 Then
					StrTmp = ""			
					Forall record In v
						StrTmp = StrTmp & record & ", "
					End Forall
					FieldList("WitnessInformation"&Cstr(WitInt))=StrTmp
				End If
				
				WitInt =WitInt + 1
			End If
		End Forall
		
		FieldList("CourtDate")=Format(CurrentDoc.FirstAppearance(0),"DD MMM YYYY")		
		FieldList("CourtStatus")="First Appearance"
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:NoticeOfIncreasedPenalty:1:8
Sub NoticeOfIncreasedPenalty(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim SampleDate As notesdatetime
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)				
		
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("ServedName")=StrTmp 'added Apr 25, 2014 Brian Henry for Affidavit of service linked to this IP format
		FieldList("AccusedNameSignature")= """" & StrTmp & """"
		
		' Serving Officer
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpPeaceOfficer(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpPeaceOfficer(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname & " Badge# " & doc.Field3(0) & NL & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
		End If		
		FieldList("PeaceOfficer")=StrTmp
		FieldList("PeaceOfficerSignature")= """" & fullname & """"
			' added Apr 25, 2014 Brian henry
			' The affidavit of service (IJ0507) is now linked to this report.
			' Pass form name so it enters the value for the affidavit
		FieldList("CopyOf") = "Notice of Application for Increased Penalty"
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:WitnessList:1:8
Sub WitnessList(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Witnesses: "
		Forall Witness In CurrentDoc.CBTmpWitnessList
			Set doc=CurrentDatabase.GetDocumentByUNID(Witness)
			StrTmp2=StrTmp2 & "    " & 	RetrieveItemValue(doc, "Given1")(0) & " " &_
			RetrieveItemValue(doc, "Given2")(0) & " " &_
			RetrieveItemValue(doc, "Given3")(0) & " " &_
			RetrieveItemValue(doc, "Surname")(0)
			StrTmp2=Fulltrim(StrTmp2)
		End Forall
		
		StrTmp=StrTmp  & StrTmp2
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		StrTmp = ""
		Forall WitnessUNID In CurrentDoc.CBTmpWitnessList
			'Set doc=CurrentDatabase.getdocumentbyUNID(WitnessUNID)
			StrTmp=StrTmp & WitnessUNID & ";"
		End Forall
		CBForm.IPUnids=StrTmp
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CertificateOfPhotographer:1:8
Sub CertificateOfPhotographer(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim PhotoDate As notesdatetime
	Dim TodayDate As New notesdatetime (Now)
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		CBForm.CBFormLongDetails=CBForm.CBFormShortDetails(0) & NL & "Photographer: " & CurrentDoc.CBTmpPhotographer(0)
		
	Case "CreateForm"
		
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpPhotographer(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpPhotographer(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpPhotographer(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpPhotographer(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & fullname & " #" & doc.Field3(0) & NL & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpPhotographer(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpPhotographer(0)
		End If		
		FieldList("Photographer")=StrTmp
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpCertify
			StrTmp = StrTmp + ", " + data
		End Forall
		FieldList("Certify")=StrTmp
		
		FieldList("PhotoTakenAt")= CurrentDoc.CBTmpPhotoTakenAt(0)
		
		If CurrentDoc.CBTmpPhotoTakenDate(0)<>"" Then
			Set item=CurrentDoc.GetFirstItem("CBTmpPhotoTakenDate")
			Set PhotoDate=item.datetimevalue
			Select Case Day(PhotoDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(PhotoDate.lslocaltime) & StrTmp
			FieldList("PhotoTakenDate")=Format(PhotoDate.lslocaltime,"mmmm") & " " & StrTmp & ", " & Year(PhotoDate.lslocaltime)
		End If
		If CurrentDoc.CBTmpPhotoTakenTime(0)<>"" Then
			FieldList("PhotoTakenTime")=Format(CurrentDoc.CBTmpPhotoTakenTime(0),"hh:mm")
		End If
		
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpMember(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpMember(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpPMember(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpMember(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & fullname & " #" & doc.Field3(0) & NL & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpMember(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpMember(0)
		End If		
		FieldList("Member")=StrTmp
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ApplicationOrderDisposition:1:8
Sub ApplicationOrderDisposition(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim SeizedDate As notesdatetime
	Dim CourtDate As notesdatetime
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpPeaceOfficer(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Articles Seized from: " & CurrentDoc.CBTmpOrderTo(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber") = CurrentDoc.OccurrenceNumber(0)
		
		FieldList("PeaceOfficer") =  CurrentDoc.CBTmpPeaceOfficer(0)
		FieldList("Agency") =  CurrentDoc.CBTmpAgency(0)
		
		' Break out the pieces for the articles seized date
		Set item=CurrentDoc.GetFirstItem("CBTmpSeizedDate")
		Set SeizedDate=item.datetimevalue
		Select Case Day(SeizedDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(SeizedDate.lslocaltime) & StrTmp
		FieldList("SeizedDay")=StrTmp
		StrTmp=Format(SeizedDate.lslocaltime,"dddd")
		FieldList("SeizedDayName")=StrTmp
		FieldList("SeizedMonth")=Format(SeizedDate.lslocaltime,"mmmm")
		FieldList("SeizedYear")=Year(SeizedDate.lslocaltime)
		
		FieldList("Person") =  CurrentDoc.CBTmpOrderTo(0)
		FieldList("SeizedPerson") =  CurrentDoc.CBTmpOrderTo(0)
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDay")=StrTmp
		StrTmp=Format(CourtDate.lslocaltime,"dddd")
		FieldList("CourtDayName")=StrTmp
		StrTmp=Left(StrTmp,Len(StrTmp)-3)
		FieldList("CourtDayNameAbrev")=StrTmp
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
		FieldList("CourtYear")=Year(CourtDate.lslocaltime)
		FieldList("CourtTime")=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0) + ", " + CurrentDoc.CBTmpCourtRoom(0) + ", " +_
		CurrentDoc.CBTmpCourtAddress(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:WarrantAuthorizedEntry:1:8
Sub WarrantAuthorizedEntry(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CommittedDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim OffenceLocation As String
	Dim Charges As String
	Dim  OffenceDate As notesdatetime
	Dim  EntryFromDate As notesdatetime
	Dim  EntryToDate As notesdatetime
	
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Dwelling: " & CurrentDoc.CBTmpDwelling(0) 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB")=Format(doc.DOB(0),"yyyy/mm/dd")
		FieldList("AccusedOccupation") = doc.Occupation(0)
		StrTmp = CurrentDoc.CBTmpAccusedTown(0)
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("AccusedTown1")= Trim(Strleft(StrTmp,"of"))
			FieldList("AccusedTown2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("AccusedTown2")= StrTmp
		End If
		
		FieldList("AccusedProv1")="Province"
		FieldList("AccusedProv2")=CurrentDoc.CBTmpAccusedProv(0)
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Cycle through charges and determine the earliest latest dates involved
		' and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			If OffenceLocation="" Then
				OffenceLocation=doc.committedtown(0)
			End If
			
			' Build a string of charges
			'Charges=Charges & doc.charge(0) & NL
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges") = Charges
		
		Set OffenceDate = New NotesDateTime(Format(EarliestDate,"Short Date"))
		Select Case Day(OffenceDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(OffenceDate.lslocaltime) & StrTmp
		FieldList("OffenceDay")=StrTmp
		FieldList("OffenceMonth")=Format(OffenceDate.lslocaltime,"mmmm")
		FieldList("OffenceYear")=Year(OffenceDate.lslocaltime)
		StrTmp = OffenceLocation
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("OffenceLocation1")= Trim(Strleft(StrTmp,"of"))
			FieldList("OffenceLocation2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("OffenceLocation2")= StrTmp
		End If
		
		FieldList("RecitalWords")=CurrentDoc.CBTmpRecitalWords(0)
		
		' Authorization to enter a dwelling house information
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryFromDate")
		If item.Type = 1024 Then
			Set EntryFromDate=item.datetimevalue
			Select Case Day(EntryFromDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(EntryFromDate.lslocaltime) & StrTmp
			FieldList("EntryFromDay")=StrTmp
			FieldList("EntryFromMonth")=Format(EntryFromDate.lslocaltime,"mmmm")
			FieldList("EntryFromYear")=Year(EntryFromDate.lslocaltime)
			FieldList("EntryFromTime")=Left(Format(CurrentDoc.CBTmpEntryFromTime(0),"h:mm AM/PM"),5)
		End If
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryToDate")
		If item.Type = 1024 Then
			Set EntryToDate=item.datetimevalue
			Select Case Day(EntryToDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(EntryToDate.lslocaltime) & StrTmp
			FieldList("EntryToDay")=StrTmp
			FieldList("EntryToMonth")=Format(EntryToDate.lslocaltime,"mmmm")
			FieldList("EntryToYear")=Year(EntryToDate.lslocaltime)
			FieldList("EntryToTime")=Left(Format(CurrentDoc.CBTmpEntryToTime(0),"h:mm AM/PM"),5)
		End If
		
		FieldList("Conditions")=CurrentDoc.CBTmpConditions(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:FormDatedInformation:1:8
Sub FormDatedInformation
	' Break out the pieces for the Dated information
	Set item = CurrentDoc.GetFirstItem("CBTmpDated")
	If item.Type = 1024 Then
		Set Dated=item.datetimevalue
		Select Case Day(Dated.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(Dated.lslocaltime) & StrTmp
		FieldList("FormDay")=StrTmp
		FieldList("FormDate")=Format(Dated.lslocaltime,"mmmm") & " " & StrTmp & ", " & Year(Dated.lslocaltime)
		FieldList("FormMonth")=Format(Dated.lslocaltime,"mmmm")
		FieldList("FormYear")=Year(Dated.lslocaltime)
		FieldList("FormTime")=Left(Format(CurrentDoc.CBTmpDatedTime(0),"h:mm AM/PM"),5)
		StrTmp=Format(CurrentDoc.CBTmpDatedTime(0),"h:mm AM/PM")
		If Right(StrTmp,2) = "AM" Then
			FieldList("FormTimeAMPM")="fore"
		Elseif Right(StrTmp,2) = "PM" Then
			FieldList("FormTimeAMPM")="after"
		Else
			FieldList("FormTimeAMPM")=""
		End If	
	End If
	
	If Not Strleft(CurrentDoc.CBTmpDatedLocation(0)," of ") = "" Then
		FieldList("FormMunicipalityType")= Trim(Strleft(CurrentDoc.CBTmpDatedLocation(0),"of"))
		FieldList("FormMunicipalityName")= Trim(Strright(CurrentDoc.CBTmpDatedLocation(0),"of"))
	Else
		FieldList("FormMunicipalityType")= CurrentDoc.CBTmpDatedLocation(0)
	End If
	FieldList("FormMunicipality")=CurrentDoc.CBTmpDatedLocation(0)
End Sub

'++LotusScript Development Environment:2:2:InformationObtainSWtoSeizeFirearms:1:8
Sub InformationObtainSWtoSeizeFirearms(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim overflowtext As String, overflowflag As Integer, retval As Integer, PrinterName As String
	Dim AddFormats() As String, ad As Integer, n As Integer, textlen As Integer
	Dim AdditionalPages() As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpDwellingOwner(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  CurrentDoc.CBTmpDwelling(0) & " at " & CurrentDoc.CBTmpDwellingAddress(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("DwellingOwner") = CurrentDoc.CBTmpDwellingOwner(0)
		FieldList("DwellingAddress")=CurrentDoc.CBTmpDwellingAddress(0)
		StrTmp = CurrentDoc.CBTmpGrounds(0)
		textlen = Len(StrTmp)
		n = 1
		' In Inches, multiply by 100 to get width and height.
		RetVal = IPSFitText(PrinterName, StrTmp,750, 96, "Times New Roman", 10, 1)
		If retval >= textlen Then
			FieldList("TextPage"+Cstr(n)) = StrTmp
		Else
			overflowflag = 1
			Do Until RetVal >= textlen
				Overflowtext = Mid$(StrTmp, RetVal + 2)	
				StrTmp = Left$(StrTmp, RetVal + 1)
				Overflowtext = Strrightback(StrTmp, " ") + Overflowtext
				StrTmp = Strleftback(StrTmp, " ")
				
				FieldList("TextPage"+Cstr(n)) = StrTmp
				
				StrTmp = Overflowtext
				textlen = Len(StrTmp)
				
				RetVal = IPSFitText(PrinterName, StrTmp,750,1000, "Arial", 11, 1)
				
				Redim Preserve AdditionalPages(1 To n)
				AdditionalPages(n) = Cstr(n)
				n = n + 1
			Loop
			FieldList("TextPage"+Cstr(n)) = StrTmp
		End If
		
		FormDatedInformation
		
		ad = 0
		If OverFlowFlag = 1 Then
			ad = ad + 1
			Redim Preserve AddFormats(1 To ad)
			AddFormats(ad) = "Canada Appendix A"
			CBForm.AdditionalPages = AdditionalPages
		Else
			If CBForm.HasItem("AdditionalPages") Then
				CBForm.RemoveItem("AdditionalPages")
			End If
		End If
		
		If ad <> 0 Then
			CBForm.AdditionalIPFormats = AddFormats
		Else
			If CBForm.HasItem("AdditionalIPFormats") Then
				CBForm.RemoveItem("AdditionalIPFormats")
			End If
		End If
		
		CBForm.IPIndex = 1
	End Select
End Sub

'++LotusScript Development Environment:2:2:InformationObtainWE:1:8
Sub InformationObtainWE(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim entryFDate As notesdatetime, entryTDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  CurrentDoc.CBTmpDwelling(0) & " at " & CurrentDoc.CBTmpDwellingAddress(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		
		' Accussed Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpGroundsToArrest
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("GroundsToArrest")=StrTmp
		
		FieldList("GroundsToBelieve")=CurrentDoc.CBTmpGrounds(0)
		
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("DwellingOcc") = CurrentDoc.CBTmpDwellingOcc(0)
		FieldList("DwellingAddress")=CurrentDoc.CBTmpDwellingAddress(0)
		'FieldList("DwellingTown")=CurrentDoc.CBTmpDwellingTown(0)
		If Not Strleft(CurrentDoc.CBTmpDwellingTown(0)," of ") = "" Then
			FieldList("DwellingMunicipalityType")= Trim(Strleft(CurrentDoc.CBTmpDwellingTown(0),"of"))
			FieldList("DwellingMunicipalityName")= Trim(Strright(CurrentDoc.CBTmpDwellingTown(0),"of"))
		Else
			FieldList("DwellingMunicipalityType")= CurrentDoc.CBTmpDwellingTown(0)
		End If
		FieldList("DwellingProv")=CurrentDoc.CBTmpDwellingProv(0)
		
		FieldList("DwellingGrounds")=CurrentDoc.CBTmpGroundsForDwelling(0)
		
		' Break out the pieces for the entry dates
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryFromDate")
		Set entryFDate=item.datetimevalue
		Select Case Day(entryFDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(entryFDate.lslocaltime) & StrTmp
		FieldList("EntryFDay")=StrTmp
		FieldList("EntryFMonth")=Format(entryFDate.lslocaltime,"mmmm")
		FieldList("EntryFYear")=Year(entryFDate.lslocaltime)
		FieldList("EntryFTime")=Format(CurrentDoc.CBTmpEntryFromTime(0),"h:mm AM/PM")
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryToDate")
		Set entryTDate=item.datetimevalue
		Select Case Day(entryTDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(entryTDate.lslocaltime) & StrTmp
		FieldList("EntryTDay")=StrTmp
		FieldList("EntryTMonth")=Format(entryTDate.lslocaltime,"mmmm")
		FieldList("EntryTYear")=Year(entryTDate.lslocaltime)
		FieldList("EntryTTime")=Format(CurrentDoc.CBTmpEntryToTime(0),"h:mm AM/PM")
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpAppRecital
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("ApplicableRecital")=StrTmp
		
		FieldList("GroundsForEntry")=CurrentDoc.CBTmpEntryGrounds(0)
		FieldList("Conditions")=CurrentDoc.CBTmpConditions(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:1:RecognizanceOfKeepThePeace:1:8
Public Function RecognizanceOfKeepThePeace(process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim OffenceDate As notesdatetime
	Dim Charges As String, n As Integer
	Dim myDate As NotesDateTime
	Dim sDate As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		ContinuePrompting = False		
		CBForm.makeresponse CurrentDoc		
		CreateCBDlgData		
		CreateCBFormData		
		CBForm.save True,True			
		ThisUI.refresh	
	Case "CreateDlg"		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (Accused - " & CurrentDoc.CBTmpPerson(0) & ")"
		CBForm.CBFormShortDetails=StrTmp		
		CBForm.CBFormLongDetails=StrTmp & NL & "Taken and acknowleged before me at the " & Currentdoc.CBTmpAgency(0) & " of " & _
		CurrentDoc.CBTmpRegion(0) & " on " & CurrentDoc.CBTmpAckDate(0)		
	Case "CreateForm"		
		With CurrentDoc
			FieldList("Accused")=.CBTmpPerson(0)
			FieldList("AccusedDOB")=.CBTmpDOB(0)
			FieldList("AccusedOccupation") = .CBTmpOccupation(0)
			FieldList("AccusedAddress") = .CBTmpAddress(0)
			FieldList("AccusedAmount") = .CBTmpAmount(0)
			FieldList("AccusedCash") =.CBTmpCash(0)
			FieldList("Surety1")=.CBTmpSurety1(0)
			FieldList("Surety1DOB")=.CBTmpSurety1DOB(0)
			FieldList("Surety1Occupation") = .CBTmpSurety1Occupation(0)
			FieldList("Surety1Amount") = .CBTmpSurety1Amount(0)
			FieldList("Surety1Cash") =.CBTmpSurety1Cash(0)
			FieldList("Surety1Address") = .CBTmpSurety1Address(0)
			FieldList("Surety2")=.CBTmpSurety2(0)
			FieldList("Surety2DOB")=.CBTmpSurety2DOB(0)
			FieldList("Surety2Occupation") = .CBTmpSurety2Occupation(0)
			FieldList("Surety2Amount") = .CBTmpSurety2Amount(0)
			FieldList("Surety2Cash") =.CBTmpSurety2Cash(0)
			FieldList("Surety2Address") = .CBTmpSurety2Address(0)
			FieldList("Surety3")=.CBTmpSurety3(0)
			FieldList("Surety3DOB")=.CBTmpSurety3DOB(0)
			FieldList("Surety3Occupation") = .CBTmpSurety3Occupation(0)
			FieldList("Surety3Amount") = .CBTmpSurety3Amount(0)
			FieldList("Surety3Cash") =.CBTmpSurety3Cash(0)
			FieldList("Surety3Address") = .CBTmpSurety3Address(0)
			If Not .CBTmpAckDate(0) = "" Then			
				Set mydate = New NotesDateTime(.CBTmpAckDate(0))			
				sDate = mydate.DateOnly		
				StrTmp= daysuffix(Cint(Day(sDate)))		
				FieldList("AckDay")= StrTmp
				FieldList("AckMonth") = MonthName(Month(.CBTmpAckDate(0)))
				FieldList("AckYear") = Year(.CBTmpAckDate(0))				
			End If
			FieldList("Agency") = .CBTmpAgency(0)
			FieldList("Region") = .CBTmpRegion(0)
			FieldList("TermMonths") = .CBTmpGoodBehavior(0)
			FieldList("Commencing") = .CBTmpCommencingOn(0)
			FieldList("OtherConditions") = .CBTmpConditions(0)
		End With
	End Select		
End Function

'++LotusScript Development Environment:2:1:DatetoWords:1:8
Function DatetoWords(indate As notesdatetime) As String
	Dim tmpTxt As String, dayval As Integer
	On Error Goto exitfunction
	
	tmpTxt = Format(indate.DateOnly ,"d")
	
	dayval = Cint(tmpTxt)
	Select Case dayval
	Case 1,21,31
		tmpTxt = tmpTxt + "st"
	Case 2,22
		tmpTxt = tmpTxt + "nd"
	Case 3,23
		tmpTxt = tmpTxt + "rd"
	Case Else
		tmpTxt = tmpTxt + "th"
	End Select
	
	tmpTxt = tmpTxt + " day of "
	
	tmpTxt = tmpTxt + Format(indate.DateOnly ,"mmmm")
	
	tmpTxt = tmpTxt + ", " + Format(indate.DateOnly ,"yyyy")
	
	DatetoWords = tmpTxt
	
	Exit Function
	
exitfunction:
	DatetoWords = "Line: " + Cstr(Erl()) + " Error: " + Error()
	Exit Function
End Function

'++LotusScript Development Environment:2:2:WarrantRemandingPrisoner:1:8
Sub WarrantRemandingPrisoner(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim OffenceDate As notesdatetime
	Dim Charges As String, n As Integer
	Dim v As Variant
	
	Const AbstPursTo = |@Implode(CBTmpAbstainPursuantTo;", ")|
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Remanded To: " & CurrentDoc.CBTmpCourtLocation(0) & " - " & Format(CurrentDoc.CBTmpRemandedDate(0),"mmmm dd, yyyy") &_
		" @ " & Format(CurrentDoc.CBTmpRemandedTime(0),"h:mm")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		FieldList("DetentionCenter")=CurrentDoc.CBTmpDetentionCenter(0)
		
		StrTmp=""
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB") = Format(doc.DOB(0),"mmmm dd, yyyy")
		
		FieldList("RemandedLocation")=CurrentDoc.CBTmpRemandedLocation(0)
		FieldList("RemandedDateTime")=Format(CurrentDoc.CBTmpRemandedDate(0),"mmmm dd, yyyy") &_
		" @ " & Format(CurrentDoc.CBTmpRemandedTime(0),"hh:mm") &_
		" " & CurrentDoc.CBTmpRemandedTown(0) & ", " & CurrentDoc.CBTmpRemandedProv(0)
		
		n = 1
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set OffenceDate=item.datetimevalue
			
			FieldList("Offence"+Cstr(n))=doc.Charge(0)
			FieldList("OffenceDate"+Cstr(n))="Offence Date: " & Format(OffenceDate.lslocaltime,"mmmm dd, yyyy")
			
			n = n + 1
		End Forall
		
		FieldList("Abstain")=CurrentDoc.CBTmpAbstain(0)
		FieldList("AbstainFrom")=CurrentDoc.CBTmpAbstainFrom(0)
		v=Evaluate(AbstPursTo,CurrentDoc)
		'FieldList("AbstainPursuantTo")=CurrentDoc.CBTmpAbstainPursuantTo(0)
		FieldList("AbstainPursuantTo")=v(0)
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0) & ", " & CurrentDoc.CBTmpCourtAddress(0)
		
		FieldList("CourtTime")=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm ")
		StrTmp=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		If Right(StrTmp,2) = "AM" Then
			FieldList("CourtTimeAMPM")="fore"
		Else
			FieldList("CourtTimeAMPM")="after"
		End If
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:NoticeofHearing:1:8
Sub NoticeofHearing(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As notesdatetime, IADate As notesdatetime, IRDate As NotesDateTime
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL & "Applicant: " & CurrentDoc.CBTmpApplicant(0) & NL & "Respondent: " & CurrentDoc.CBTmpRespondent(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber") =  CurrentDoc.OccurrenceNumber(0)
		FieldList("Applicant") = CurrentDoc.CBTmpApplicant(0)
		FieldList("Respondent") = CurrentDoc.CBTmpRespondent(0)
		FieldList("ApplicantAgent") = CurrentDoc.CBTmpApplicantAgent(0)
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		If item.Type = 1024 Then
			Set CourtDate=item.datetimevalue
			Select Case Day(CourtDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(CourtDate.lslocaltime) & StrTmp
			FieldList("CourtDay")=StrTmp
			FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
			FieldList("CourtYear")=Year(CourtDate.lslocaltime)
			FieldList("CourtTime")=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		End If
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpAppType
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("ApplicationType") = StrTmp
		
		' Break out the pieces for the applicant date
		Set item=CurrentDoc.GetFirstItem("CBTmpApplicantDate")
		If item.Type = 1024 Then
			Set IADate=item.datetimevalue
			Select Case Day(IADate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(IADate.lslocaltime) & StrTmp
			FieldList("ApplicantDay")=StrTmp
			FieldList("ApplicantMonth")=Format(IADate.lslocaltime,"mmmm")
			FieldList("ApplicantYear")=Year(IADate.lslocaltime)
		End If
		
		' Break out the pieces for the respondent date
		Set item=CurrentDoc.GetFirstItem("CBTmpRespondentDate")
		If item.Type = 1024 Then
			Set IRDate=item.datetimevalue
			Select Case Day(IRDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(IRDate.lslocaltime) & StrTmp
			FieldList("RespondentDay")=StrTmp
			FieldList("RespondentMonth")=Format(IRDate.lslocaltime,"mmmm")
			FieldList("RespondentYear")=Year(IRDate.lslocaltime)
		End If
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:RetrieveCBRMSDocData:1:8
Sub RetrieveCBRMSDocData (UNID As String, FormName As String)
	' This routine is passed the UNID of a RMS doc and the name of a form or subform we need to populate
	Dim RMSDoc  As notesdocument
	Dim XMLNodeName List As String
	Dim Form As notesform
	Dim v As Variant
	Dim item As notesitem
	
	Set RMSDoc=CurrentdataBase.GetDocumentbyUNID(UNID)
	Set form=Currentdatabase.getform(FormName)
	Forall field In form.fields
		' First look inside the Court Brief for the data. If found this would indicate that the data had no place to be stored in the 
		' original RMS doc or a previous user had insufficient authority to store it back to the RMS Doc.
		' locally stored data will always have precedence over data stored in the original
		If Ucase(Left(field,5))="CBTMP" Then
			field=Right(Field,Len(Field)-5)
		End If
		
		XMLNodeName("Level1")="RMSDoc=" & UNID
		XMLNodeName("Level2")=field
		
		v=GetXMLItemValue("LocalRMSDocDataXML",XMLNodeName)
		
		' If the data type of v is 11 (Boolean) then the result was False
		' If the data type is anything  else then results were returned
		If Not Datatype(v)=11 Then
			' an XML item was found so use it
			Set item=CurrentDoc.replaceitemvalue("CBTmp" & field,v)			
		Else
			' an XML item was not found so try and restore it from the original Person doc
			If RMSDoc.hasitem(field) Then
				' get the item
				Set item=RMSdoc.getfirstitem(field)
				' copy it to the current doc and change the name
				Set item=CurrentDoc.copyitem(item,"CBTmp" & field)
			End If
		End If
	End Forall
End Sub

'++LotusScript Development Environment:2:2:NoticeOfTrial:1:8
Sub NoticeOfTrial(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim TodayDate As New notesdatetime (Now)
	Dim CourtDate As notesdatetime, NotifiedDate As NotesDateTime
	Dim CommittedDate As NotesDateTime
	Dim OffenceDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Officer: " & CurrentDoc.CBTmpPeaceOfficer(0) & " Notification Date: " &_
		Format(CurrentDoc.CBTmpNotifiedDate(0),"yyyy-mmm-dd")
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Officer")=CurrentDoc.CBTmpPeaceOfficer(0)
		Set item=CurrentDoc.GetFirstItem("CBTmpNotifiedDate")
		Set NotifiedDate=item.datetimevalue
		FieldList("NotifiedDate")=Format(NotifiedDate.lslocaltime,"mm/dd/yyyy")
		
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		FieldList("CourtDate")=Format(CourtDate.lslocaltime,"mm/dd/yyyy")
		FieldList("CourtTime")=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtRoom")=CurrentDoc.CBTmpCourtRoom(0)
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			
			' Build a string of charges
			'Charges=Charges  & doc.charge(0) & ", "
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges")=Charges
		
		FieldList("OffenceDate")=EarliestDate
		Set OffenceDate = New NotesDateTime(Format(EarliestDate,"Short Date"))
		FieldList("OffenceDate")=Format(OffenceDate.lslocaltime,"mm/dd/yyyy")
		
		FieldList("Remarks")=CurrentDoc.CBTmpRemarks(0)
		FieldList("Attorney")=CurrentDoc.CBTmpCrownAttorney(0)
		
		FieldList("LockedDownDate")=Format(TodayDate.lslocaltime,"mmmm") + " " + Cstr(Day(TodayDate.lslocaltime)) + ", " + Cstr(Year(TodayDate.lslocaltime))
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:StatementCivilianWitness:1:8
Sub StatementCivilianWitness(Process As String)
	Set ws = New NotesUIWorkspace	
	NL=Chr$(13) & Chr$(10)
	Dim iofficer As String
	
	Set lookupdb = GetLookupDatabase
	Const CivilianStatementEntryConstant = |@Implode(@Trim(Type:@Text(StatementDateTime):StatementLocation);" ")|
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		' The Choices need to be refreshed from RMS everytime
		
		Set item=Currentdoc.replaceitemvalue("CBTmpChoices","")
		Set view=CurrentDatabase.getview("By Occurrence")
		
		If CBForm.isnewnote Then
			IntTmp=Ubound(CurrentDoc.OccurrenceNumber)
			If IntTmp>0 Then
				' >0 really means more then 1 Occurrences in this CB. If so then prompt for a choice
				flag= ws.dialogbox("CB_PromptForOccNum" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
				If flag=False Then
					ContinuePrompting=False
					Exit Sub
				End If
			End If
			CurrentDoc.CBTmpCurrentOccNum=CurrentDoc.CurrentOccNum(0)
			CurrentDoc.CBTmpCurrentExpandedOccNum=CurrentDoc.CurrentExpandedOccNum(0)
			
		End If
		StrTmp=CurrentDoc.CBTmpCurrentExpandedOccNum(0)
		Set doc=view.getdocumentbykey(StrTmp)
		' The first doc will always be the Occurrence Report
		If Not (Doc Is Nothing) Then CurrentDoc.CBTmpCurrentOccUNID=doc.universalID
		Do While Not (Doc Is Nothing)
			If CurrentDoc.CBTmpCurrentOccNum(0)=doc.OccurrenceNumber(0) Then
				'Print doc.form(0)
				Select Case doc.form(0)
				Case "Statement"
					' We can't always depend on users flagging persons as Civilian Witnesses so assume Civilian unless
					' Type has been set to Police witness
					Set ParentDoc=Currentdatabase.GetdocumentbyUNID(doc.parentDocumentUNID)
					flag = True
					Forall InvolvementType In ParentDoc.Type
						If InvolvementType="Police Witness" Then
							flag=False
							Exit Forall
						End If
					End Forall
					If Flag = True Then
						v=Evaluate(CivilianStatementEntryConstant,doc)
						v=v(0)  & "|" & doc.UniversalID
						item.appendtotextlist v
					End If
				End Select
				
				Set doc=view.getnextdocument(doc)
			Else
				Exit Do
			End If
		Loop
		If CBForm.IsNewNote Then
			flag= ws.dialogbox("CB_PromptStatementDlg" ,True,True ,False,False,False,False,StrTmp, ,True,False,True)
			' if the user hit cancel or didn't make any selection we don't want the final prompt to be displayed
			If Flag=False Or CurrentDoc.CBTmpStatementList(0)="" Then
				ContinuePrompting=False
				Exit Sub
			Else
				'Populate the default values 
				Set doc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpStatementList(0))
				Set ParentDoc=CurrentDatabase.getdocumentbyUNID(doc.ParentDocumentUNID)
				RetrieveCBRMSDocData ParentDoc.UniversalID,"CB_CivilianStatementDlg"
				CurrentDoc.CBTmpStatementDateTime=doc.StatementDateTime(0)
				CurrentDoc.CBTmpStatementLocation=doc.statementlocation(0)
			End If
		End If
	Case "CreateDlg"
		
		StrTmp=Trim(Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpStatementOf(0) &_
		" (" & CurrentDoc.CBTmpCurrentOccNum(0) & ") ")
		CBForm.CBFormShortDetails=StrTmp
		
		StrTmp=""
		If CurrentDoc.CBTmpStatementList(0)<>"" Then
			Set doc=CurrentDatabase.getdocumentbyUNID(CurrentDoc.CBTmpStatementList(0))
			v=Evaluate(CivilianStatementEntryConstant,doc)
			StrTmp=StrTmp & v(0)
		End If
		
		CBForm.CBFormLongDetails=CBForm.CBFormShortDetails(0) & NL & StrTmp
		
		StrTmp = ""		
		If lookupdb.IsOpen Then
			Forall officer In CurrentDoc.CBTmpReportingOfficer
				StrTmp = StrTmp & OfficerLookup(officer) & NL
			End Forall		
		Else
			Forall officer In CurrentDoc.CBTmpReportingOfficer
				StrTmp = StrTmp & officer & NL
			End Forall
		End If
		
		CBForm.CBFormLongDetails=CBForm.CBFormLongDetails(0) & NL & "Interviewing Person: " & Fulltrim(StrTmp)
		
	Case "CreateForm"
		
		CBForm.IPUnids=CurrentDoc.CBTmpStatementList(0)
		FieldList("OccurrenceNumber")=CurrentDoc.CBTmpCurrentOccNum(0)
		FieldList("StatementOf")=CurrentDoc.CBTmpStatementOf(0)
		FieldList("DOB")=CurrentDoc.CBTmpDOB(0)
		
		StrTmp = ""
		If lookupdb.IsOpen Then
			Forall officer In CurrentDoc.CBTmpReportingOfficer
				Set employeeview = lookupdb.GetView("Employee by Name")
				Set doc=employeeview.GetDocumentByKey(officer,True)
				If Not doc Is Nothing Then
					If Strleft(officer,"/") <> "" Then
						fullname = Strleft(officer,"/")
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					Else
						fullname = officer
						lname = Strright(fullname," ")
						fname = Strleft(fullname," ")
					End If
					iofficer = Fulltrim(doc.Field2(0) & " " & fullname & " Badge# " & doc.Field3(0) & NL & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
				Else
					iofficer = officer
				End If
				StrTmp = StrTmp & iofficer & NL
			End Forall		
		Else
			Forall officer In CurrentDoc.CBTmpReportingOfficer
				StrTmp = StrTmp & officer  & NL 
			End Forall
		End If
		FieldList("InterviewedBy")=StrTmp
		
		FieldList("StatementDate")=Format(CurrentDoc.CBTmpStatementCommencedDate(0),"dd mmm, yyyy")
		FieldList("StatementTime")=Format(CurrentDoc.CBTmpStatementCommencedTime(0),"hh:mm AM/PM")
		FieldList("StatementCompletedDate")=Format(CurrentDoc.CBTmpStatementCompletedDate(0),"dd mmm, yyyy")
		FieldList("StatementCompletedTime")=Format(CurrentDoc.CBTmpStatementCompletedTime(0),"hh:mm AM/PM")
		FieldList("StatementLocation")=CurrentDoc.CBTmpStatementLocation(0)
		FieldList("ConditionOfPerson")=CurrentDoc.CBTmpConditionOfPerson(0)
		
		StrTmp = ""		
		If lookupdb.IsOpen Then
			StrTmp = StrTmp & OfficerLookup(CurrentDoc.CBTmpThirdPartyContactDetails(0)) & NL
		Else
			StrTmp = StrTmp & CurrentDoc.CBTmpThirdPartyContactDetails(0)
		End If
		FieldList("ThirdPartyContactDetails")=StrTmp
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ReportToJudge:1:8
Sub ReportToJudge(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim SamplesDate As notesdatetime
	Dim ConditionsDate As notesdatetime
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpJudge(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & " Accused: " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		FieldList("ReportTo")=CurrentDoc.CBTmpReportTo(0)
		FieldList("Judge")=CurrentDoc.CBTmpJudge(0)
		
		' Serving Officer
		StrTmp = ""
		If lookupdb.IsOpen Then
			Set employeeview = lookupdb.GetView("Employee by Name")
			Set doc=employeeview.GetDocumentByKey(CurrentDoc.CBTmpPeaceOfficer(0),True)
			If Not doc Is Nothing Then
				If Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/") <> "" Then
					fullname = Strleft(CurrentDoc.CBTmpPeaceOfficer(0),"/")
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				Else
					fullname = CurrentDoc.CBTmpPeaceOfficer(0)
					lname = Strright(fullname," ")
					fname = Strleft(fullname," ")
				End If
				StrTmp = Fulltrim(doc.Field2(0) & " " & lname & " " & fname & " Badge# " & doc.Field3(0) & " " & CurrentDoc.Agency(0) & " - " & doc.Field4(0))
			Else
				StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
			End If
		Else
			StrTmp = CurrentDoc.CBTmpPeaceOfficer(0)
		End If		
		FieldList("PeaceOfficer")=StrTmp
		
		FieldList("ExecutionOf")=CurrentDoc.CBTmpExecutionOf(0)
		FieldList("Samples")=CurrentDoc.CBTmpSamples(0)
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("Offender")=StrTmp
		
		FieldList("SamplesTakenUnder")=CurrentDoc.CBTmpSamplesTakenUnder(0)
		
		Set item = CurrentDoc.GetFirstItem("CBTmpSamplesTakenDate")
		If item.Type = 1024 Then
			Set SamplesDate =item.datetimevalue
			Select Case Day(SamplesDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(SamplesDate.lslocaltime) & StrTmp
			FieldList("SamplesTakenDay")=StrTmp
			FieldList("SamplesTakenMonth")=Format(SamplesDate.lslocaltime,"mmmm")
			FieldList("SamplesTakenYear")=Year(SamplesDate.lslocaltime)
			FieldList("SamplesTakenTime")=Format(CurrentDoc.CBTmpSamplesTakenTime(0),"h:mm AM/PM")
		End If
		
		FieldList("SamplesTakenBy")=CurrentDoc.CBTmpSamplesTakenBy(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpSamplesTaken
			StrTmp = StrTmp & data & ", "
		End Forall
		FieldList("SamplesTaken")=StrTmp
		FieldList("ConditionsOf")=CurrentDoc.CBTmpConditionsOf(0)
		
		Set item = CurrentDoc.GetFirstItem("CBTmpConditionsDated")
		If item.Type = 1024 Then
			Set ConditionsDate =item.datetimevalue
			FieldList("ConditionsDate")=Format(ConditionsDate.lslocaltime,"yyyy-mm-dd")
		End If
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:RecogEnteredBeforeOfficer:1:8
Sub RecogEnteredBeforeOfficer(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CourtDate As notesdatetime, FingerprintDate As notesdatetime
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Court Date/Time: " & Format(CurrentDoc.CBTmpCourtDate(0),"yyyy-mmm-dd") & " " & _
		Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM") & "  Court Location: " & CurrentDoc.CBTmpCourtLocation(0) & _
		"  Court Room: " & CurrentDoc.CBTmpCourtRoom(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		' Get Accused Information
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		
		StrTmp = RetrieveItemValue(doc, "StreetNumber")(0) & " " &_
		RetrieveItemValue(doc, "Street")(0) & " " &_
		RetrieveItemValue(doc, "TownCity")(0) & " " &_
		RetrieveItemValue(doc, "Prov")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedAddress")=StrTmp
		FieldList("AccusedDOB")=Format(RetrieveItemValue(doc, "DOB")(0) ,"yyyy/mm/dd")
		FieldList("AccusedOccupation")=doc.Occupation(0)
		
		' Cycle through charges and determine the earliest latest dates involved and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			' Build a string of charges
			'Charges=Charges & RetrieveItemValue(doc, "Charge")(0)  & ", "
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		FieldList("Charges")=Charges
		
		'FieldList("Charges")=Left(Charges,Len(Charges)-2)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpCustodyRelease
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("CustodyRelease") = StrTmp
		FieldList("LeviedAmount") = Format(Cstr(CurrentDoc.CBTmpLeviedAmount(0)),"##0.00")
		FieldList("DepositAmount") = Format(Cstr(CurrentDoc.CBTmpDepositAmount(0)),"##0.00")
		FieldList("DepositHerewith") = CurrentDoc.CBTmpDepositWith(0)
		FieldList("DepositHerewith2") = ""
		
		' Break out the pieces for the court date
		Set item=CurrentDoc.GetFirstItem("CBTmpCourtDate")
		Set CourtDate=item.datetimevalue
		Select Case Day(CourtDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(CourtDate.lslocaltime) & StrTmp
		FieldList("CourtDay")=StrTmp
		
		StrTmp=Format(CourtDate.lslocaltime,"dddd")
		FieldList("CourtDayName")=StrTmp
		' YCJA form doesn't require full day name
		StrTmp=Left(StrTmp,Len(StrTmp)-3)
		FieldList("CourtDayNameAbrev")=StrTmp
		
		FieldList("CourtMonth")=Format(CourtDate.lslocaltime,"mmmm")
		FieldList("CourtYear")=Year(CourtDate.lslocaltime)
		FieldList("CourtTime")=Left(Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM"),5)
		StrTmp=Format(CurrentDoc.CBTmpCourtTime(0),"h:mm AM/PM")
		If Right(StrTmp,2) = "AM" Then
			FieldList("CourtTimeAMPM")="fore"
		Else
			FieldList("CourtTimeAMPM")="after"
		End If
		
		FieldList("CourtLocation")=CurrentDoc.CBTmpCourtLocation(0)
		FieldList("CourtAddress")=CurrentDoc.CBTmpCourtAddress(0)
		FieldList("CourtRoomNumber")=CurrentDoc.CBTmpCourtRoom(0)
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		
		' There is not always a fingerprint date so check first (changed Sept. 25, 2005 Brian Henry)
		If CurrentDoc.CBTmpFingerPrintDate(0)<>"" Then
		' Break out the pieces for the Fingerprint date
			Set item=CurrentDoc.GetFirstItem("CBTmpFingerprintDate")
			Set FingerprintDate=item.datetimevalue
			Select Case Day(FingerprintDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(FingerprintDate.lslocaltime) & StrTmp
			FieldList("FingerprintDay")=StrTmp
			
			StrTmp=Format(FingerprintDate.lslocaltime,"dddd")
			FieldList("FingerprintDayName")=StrTmp
		     ' YCJA form doesn't require full day name
			StrTmp=Left(StrTmp,Len(StrTmp)-3)
			FieldList("FingerprintDayNameAbrev")=StrTmp
			
			FieldList("FingerprintMonth")=Format(FingerprintDate.lslocaltime,"mmmm")
			FieldList("FingerprintYear")=Year(FingerprintDate.lslocaltime)
			FieldList("FingerprintTime")=Left(Format(CurrentDoc.CBTmpFingerprintTime(0),"h:mm AM/PM"),5)
			StrTmp=Format(CurrentDoc.CBTmpFingerprintTime(0),"h:mm AM/PM")
			If Right(StrTmp,2) = "AM" Then
				FieldList("FingerprintTimeAMPM")="fore"
			Else
				FieldList("FingerprintTimeAMPM")="after"
			End If
		End If
		FieldList("FingerprintPoliceStation")=CurrentDoc.CBTmpFingerprintLocation(0)
		FieldList("FingerprintPoliceStationAddress")=CurrentDoc.CBTmpFingerprintAddress(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:CertificateOfPractitioner:1:8
Sub CertificateOfPractitioner(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim SampleDate As notesdatetime
	
	Set lookupdb = GetLookupDatabase
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpMPIdentifiedPerson(0)
		CBForm.CBFormShortDetails=StrTmp
		If CurrentDoc.CBTmpMedicalPractitioner(0) <> "" Then
			StrTmp=StrTmp & NL &  "Medical Practitioner: " & CurrentDoc.CBTmpMedicalPractitioner(0)
			CBForm.CBFormLongDetails=StrTmp
		Else
			StrTmp=StrTmp & NL &  "Qualified Technician: " & CurrentDoc.CBTmptechnician(0)
			CBForm.CBFormLongDetails=StrTmp
		End If
		
	Case "CreateForm"
		
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)		
		
		' Qualified Practitioner Information
		FieldList("MedicalPractitioner")=CurrentDoc.CBTmpMedicalPractitioner(0) 
		FieldList("PersonIdentified")=CurrentDoc.CBTmpIdentifiedPerson(0) 
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpMPCertify
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("MPCertify") = StrTmp
		
		' Break out the pieces for the first sample date
		Set item=CurrentDoc.GetFirstItem("CBTmpMPFirstSampleDate")
		Set SampleDate=item.datetimevalue
		Select Case Day(SampleDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(SampleDate.lslocaltime) & StrTmp
		FieldList("MPFirstSampleDay")=StrTmp
		FieldList("MPFirstSampleMonth")=Format(SampleDate.lslocaltime,"mmmm")
		FieldList("MPFirstSampleYear")=Year(SampleDate.lslocaltime)
		FieldList("MPFirstSampleTime")=Format(CurrentDoc.CBTmpMPFirstSampleTime(0),"hh:mm")
		FieldList("MPFirstSampleSeal")= CurrentDoc.CBTmpMPFirstSampleSealNo(0)
		
		' Break out the pieces for the second sample date
		Set item=CurrentDoc.GetFirstItem("CBTmpMPAdditionalSampleDate")
		Set SampleDate=item.datetimevalue
		Select Case Day(SampleDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(SampleDate.lslocaltime) & StrTmp
		FieldList("MPAdditionalSampleDay")=StrTmp
		FieldList("MPAdditionalSampleMonth")=Format(SampleDate.lslocaltime,"mmmm")
		FieldList("MPAdditionalSampleYear")=Year(SampleDate.lslocaltime)
		FieldList("MPAdditionalSampleTime")=Format(CurrentDoc.CBTmpMPAdditionalSampleTime(0),"hh:mm")
		FieldList("MPAdditionalSampleSeal")= CurrentDoc.CBTmpMPAdditionalSampleSealNo(0)
		
		StrTmp = CurrentDoc.CBTmpMPLocationTaken(0)
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("MPLocation1")= Trim(Strleft(StrTmp,"of"))
			FieldList("MPLocation2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("MPLocation2")= StrTmp
		End If
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpMPSamples
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("MPSamples") = StrTmp
		
		
		' Qualified Technician Information
		FieldList("Technician")=CurrentDoc.CBTmpTechnician(0) 
		FieldList("QualifiedPractitioner")=CurrentDoc.CBTmpTMedicalPractitioner(0) 
		FieldList("TechPersonIdentified")=CurrentDoc.CBTmpTIdentifiedPerson(0) 
		
		' Break out the pieces for the first sample date
		Set item=CurrentDoc.GetFirstItem("CBTmpTFirstSampleDate")
		Set SampleDate=item.datetimevalue
		Select Case Day(SampleDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(SampleDate.lslocaltime) & StrTmp
		FieldList("TFirstSampleDay")=StrTmp
		FieldList("TFirstSampleMonth")=Format(SampleDate.lslocaltime,"mmmm")
		FieldList("TFirstSampleYear")=Year(SampleDate.lslocaltime)
		FieldList("TFirstSampleTime")=Format(CurrentDoc.CBTmpTFirstSampleTime(0),"hh:mm")
		FieldList("TFirstSampleSeal")= CurrentDoc.CBTmpTFirstSampleSealNo(0)
		
		' Break out the pieces for the second sample date
		Set item=CurrentDoc.GetFirstItem("CBTmpTAdditionalSampleDate")
		Set SampleDate=item.datetimevalue
		Select Case Day(SampleDate.lslocaltime)
		Case 1, 21, 31
			StrTmp="st"
		Case 2, 22
			StrTmp="nd"
		Case 3, 23
			StrTmp="rd"
		Case Else
			StrTmp="th"
		End Select
		StrTmp=Day(SampleDate.lslocaltime) & StrTmp
		FieldList("TAdditionalSampleDay")=StrTmp
		FieldList("TAdditionalSampleMonth")=Format(SampleDate.lslocaltime,"mmmm")
		FieldList("TAdditionalSampleYear")=Year(SampleDate.lslocaltime)
		FieldList("TAdditionalSampleTime")=Format(CurrentDoc.CBTmpTAdditionalSampleTime(0),"hh:mm")
		FieldList("TAdditionalSampleSeal")= CurrentDoc.CBTmpTAdditionalSampleSealNo(0)
		
		StrTmp = CurrentDoc.CBTmpTLocationTaken(0)
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("TLocation1")= Trim(Strleft(StrTmp,"of"))
			FieldList("TLocation2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("TLocation2")= StrTmp
		End If
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpTSamples
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("TSamples") = StrTmp
		
		FormDatedInformation
	End Select
End Sub

'++LotusScript Development Environment:2:2:NoticeToProduceDocuments:1:8
Sub NoticeToProduceDocuments(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim CommittedDate As NotesDateTime
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim OffenceLocation As String
	Dim AdditionalLocation As String
	Dim Charges As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Notice Date: " & Format(CurrentDoc.CBTmpNoticeDate(0),"yyyy-mmm-dd") & "    Documents: " & CurrentDoc.CBTmpDocuments(0) 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region")=CurrentDoc.JudicialRegion(0)
		FieldList("OccurrenceNumber")=CurrentDoc.OccurrenceNumber(0)
		FieldList("NoticeDate")=Format(CurrentDoc.CBTmpNoticeDate(0),"DD MMM YYYY")
		
		StrTmp=""
		Forall entry In CurrentDoc.CBTmpAct
			StrTmp=StrTmp & " " & entry
		End Forall
		FieldList("Act")=StrTmp
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp = RetrieveItemValue(doc, "Given1")(0) & " " &_
		RetrieveItemValue(doc, "Given2")(0) & " " &_
		RetrieveItemValue(doc, "Surname")(0)
		StrTmp=Fulltrim(StrTmp)
		FieldList("AccusedName")=StrTmp
		FieldList("ServedName")=StrTmp
		
		' Cycle through charges and determine the earliest latest dates involved
		' and how many locations
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Set item=doc.GetFirstItem("TimeDateCommitted")
			Set CommittedDate=item.datetimevalue
			
			v=Cdat(CommittedDate.DateOnly)
			If Isempty(EarliestDate) Then
				EarliestDate=v
			End If
			If Isempty(LatestDate) Then
				LatestDate=v
			End If
			
			If v<EarliestDate Then
				EarliestDate=v			
			End If
			If v>LatestDate Then
				LatestDate=v		
			End If
			If OffenceLocation="" Then
				OffenceLocation=RetrieveItemValue(doc, "CommittedTown")(0)
			Else
				If OffenceLocation<>RetrieveItemValue(doc, "CommittedTown")(0) Then
					AdditionalLocation=RetrieveItemValue(doc, "CommittedTown")(0)
				End If
			End If
			
			' Build a string of charges
			'Charges=Charges & "Contrary to section " & RetrieveItemValue(doc, "Charge")(0)& NL
			
		End Forall
		
		Charges = CurrentDoc.CBTmpCharges(0)
		
		If EarliestDate=LatestDate Then
			' all offences occurred on the same date
			StrTmp="on or about " & Format(EarliestDate,"DD MMM YYYY")			
		Else
			' offences occurred on a range of dates
			StrTmp="commencing on or about " & Format(EarliestDate,"DD MMM YYYY") & " and ending on or about " & Format(LatestDate,"DD MMM YYYY")
		End If
		FieldList("OffenceDate")=StrTmp
		FieldList("OffenceLocation")=OffenceLocation
		If AdditionalLocation<>"" Then
			FieldList("AdditionalLocation")="and elsewhere in the Province of Ontario"
		Else
			FieldList("AdditionalLocation")=""
		End If
		
		FieldList("Charges")=Charges
		FieldList("Documents")=CurrentDoc.CBTmpDocuments(0)
			' added Apr 25, 2014 Brian henry
			' The affidavit of service (IJ0507) is now linked to this report.
			' Pass form name so it enters the value for the affidavit
		FieldList("CopyOf") = "Notice of Intention to Introduce Copies of Documents at Trial"
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:WarrantEnterDwelling:1:8
Sub WarrantEnterDwelling(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim  EntryFromDate As notesdatetime
	Dim  EntryToDate As notesdatetime
	
	Select Case Process
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Dwelling: " & CurrentDoc.CBTmpDwelling(0) 
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("AccusedDOB")=Format(doc.DOB(0),"yyyy/mm/dd")
		FieldList("AccusedOccupation") = doc.Occupation(0)
		StrTmp = CurrentDoc.CBTmpAccusedTown(0)
		If Not Strleft(StrTmp," of ") = "" Then
			FieldList("AccusedTown1")= Trim(Strleft(StrTmp,"of"))
			FieldList("AccusedTown2")= Trim(Strright(StrTmp,"of"))
		Else
			FieldList("AccusedTown2")= StrTmp
		End If
		
		FieldList("AccusedProv1")="Province"
		FieldList("AccusedProv2")=CurrentDoc.CBTmpAccusedProv(0)
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)		
		
		' Authorization to enter a dwelling house information
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("ArrestConditions")=CurrentDoc.CBTmpArrestConditions(0)
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryFromDate")
		If item.Type = 1024 Then
			Set EntryFromDate=item.datetimevalue
			Select Case Day(EntryFromDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(EntryFromDate.lslocaltime) & StrTmp
			FieldList("EntryFromDay")=StrTmp
			FieldList("EntryFromMonth")=Format(EntryFromDate.lslocaltime,"mmmm")
			FieldList("EntryFromYear")=Year(EntryFromDate.lslocaltime)
			FieldList("EntryFromTime")=Left(Format(CurrentDoc.CBTmpEntryFromTime(0),"h:mm AM/PM"),5)
		End If
		
		Set item=CurrentDoc.GetFirstItem("CBTmpEntryToDate")
		If item.Type = 1024 Then
			Set EntryToDate=item.datetimevalue
			Select Case Day(EntryToDate.lslocaltime)
			Case 1, 21, 31
				StrTmp="st"
			Case 2, 22
				StrTmp="nd"
			Case 3, 23
				StrTmp="rd"
			Case Else
				StrTmp="th"
			End Select
			StrTmp=Day(EntryToDate.lslocaltime) & StrTmp
			FieldList("EntryToDay")=StrTmp
			FieldList("EntryToMonth")=Format(EntryToDate.lslocaltime,"mmmm")
			FieldList("EntryToYear")=Year(EntryToDate.lslocaltime)
			FieldList("EntryToTime")=Left(Format(CurrentDoc.CBTmpEntryToTime(0),"h:mm AM/PM"),5)
		End If
		
		FieldList("Conditions")=CurrentDoc.CBTmpConditions(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:1:GetLookupDatabase:1:8
Function GetLookupDatabase
	Dim ws As New NotesUIWorkspace
	Dim s As New NotesSession
	Dim db As NotesDatabase
	Dim controldoc As notesdocument
	Dim controlview As NotesView	
	Dim ludb As New NotesDatabase( "", "" )
	Dim repid As String
	Dim dbfile As String
	
	Set db = s.CurrentDatabase
	Set controlview = db.GetView("(Control)")
	Set controldoc = controlview.GetFirstDocument
	
	If Not controldoc Is Nothing Then
		If Instr(controldoc.LUPath(0),"\") <> 0 Then
			' Path provided in file name
			dbFile = controldoc.LUPath(0)
		Else
			' no path provided, so append path of current database
			dbFile = Strleftback(db.FilePath,"\") + "\" + controldoc.LUPath(0)
		End If
		ludb.Open db.Server, dbFile
		If ludb.IsOpen Then
			Set GetLookupDatabase = ludb
		Else
			ws.Prompt PROMPT_OK, "Error", "Lookup database could not be located using the replica id provided in the control document!"
			Print "Lookup database could not be located using the replica id provided in the control document!"
		End If
	Else
		ws.Prompt PROMPT_OK, "Error", "Control Document is not setup!"
		Print "Control Document is not setup!"
	End If
End Function



'++LotusScript Development Environment:2:2:RemoveCBTmpFields:1:8
Sub RemoveCBTmpFields
	' after adding a court form remove the Tmp fields
	Forall item In CurrentDoc.items
		If Ucase(Left(item.name,5))="CBTMP" Then
			Call item.remove
		End If
	End Forall
End Sub

'++LotusScript Development Environment:2:1:DaySuffix:1:8
Function DaySuffix(DayNumber As Integer) As String
	Dim StrTmp As String
	'Select Case Day(DayNumber) modified May 5, 2013 Brian Henry - Calling routines already passing day number
	Select Case DayNumber
	Case 1, 21, 31
		StrTmp="st"
	Case 2, 22
		StrTmp="nd"
	Case 3, 23
		StrTmp="rd"
	Case Else
		StrTmp="th"
	End Select
	DaySuffix=Cstr(DayNumber) & StrTmp
End Function

'++LotusScript Development Environment:2:2:RetrieveCBDlgData:1:8
Sub RetrieveCBDlgData
	Set ws = New NotesUIWorkspace
	' This routine retrieves the data captured by the original dialog box used to create it
	' The data is parsed into fields on the Court Brief which are then available to the dialog box
	Dim CBDlgDataXML As String
	
	Dim FieldNameStart As Integer, FieldNameEnd As Integer
	Dim FieldDataStart As Integer, FieldDataEnd As Integer
	Dim casestring As String
	Dim CurrentLocation As Integer
	Dim CharLoc As Integer
	Dim RestoredField As notesitem
	Dim FieldValue As String
	Dim workspace As New notesUIworkspace
	
	ContinuePrompting = True
	
	CBDlgDataXML=CBForm.CBDlgData(0)
	CurrentLocation=1
	FieldNameStart=1
	Do While FieldNameStart<>0
		FieldNameStart=Instr(CurrentLocation,Ucase(CBDlgDataXML),"<CBTMP")
		
		If FieldNameStart<>0 Then
			FieldNameEnd=Instr(FieldNameStart,Ucase(CBDlgDataXML),">")
			FieldName=Mid(CBDlgDataXML,FieldNameStart+1,FieldNameEnd-FieldNameStart-1)
			FieldDataStart=FieldNameStart+Len(FieldName)+2
			CurrentLocation=FieldNameEnd
			FieldDataEnd=Instr(CurrentLocation,Ucase(CBDlgDataXML),Ucase("</" & FieldName & ">"))
			
			' Once you know the field name you can quickly find the data
			FieldValue=Mid(CBDlgDataXML,FieldDataStart,FieldDataEnd-FieldDataStart)
			flag=CurrentDoc.hasitem(FieldName)
			If flag=True Then
				' This must be the an additional element to this field
				Set RestoredField=CurrentDoc.GetFirstItem(FieldName)
				Call RestoredField.AppendToTextList(FieldValue)
			Else
				' Restore the field
				Set RestoredField=CurrentDoc.ReplaceItemValue(FieldName,FieldValue)
			End If
		End If
	Loop
	
	casestring = "RetrieveDlg"
	
	Select Case CBForm.IntelliprintFormatName(0)
	' Process should always be "RetrieveDlg"		
		
	' Single Function Call to handle all Statements	
	Case "Canada IJ P023 Adult Statement Form", "Canada IJ P083 Police Officer's Statement", "Canada IJ P029 Victim-Witness Interview", "Canada IJ P066 YCJA Youth Statement Form"
		Statement casestring
		
	'Case "Canada IJ P023 Adult Statement Form"
	'	CautionedStatement casestring
		
	'Case "Canada IJ P029 Victim-Witness Interview"
	'	StatementCivilianWitness casestring
		
	Case "Canada IJ P062 Domestic Violence Supplementary"
		DomesticViolenceReport casestring
		
	'Case "Canada IJ P083 Police Officer's Statement"
	'	StatementPoliceWitness casestring
		
	Case "Canada IJ P086 C.B. Cover 1"
		CrownBriefCover casestring
		
	Case "Canada IJ P098 C.B. Synopsis"
		CourtSynopsis casestring
		
	Case "Canada OT 054 Occurrence Report"
		OccurrenceReport casestring
		
	'Case "Canada IJ P066 YCJA Youth Statement Form"
	'	Statement casestring
		
	Case "Canada OT 056 Supplementary Report"
		SupplementaryReport casestring
		
	Case "Canada CFS 069 Case Submission 1"
		CaseSubmission casestring
		
	Case "Canada CLD-0025 Provincial Standard Court Brief Cover 1"
		CourtBriefCover casestring
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:AuthorizationMedicalRelease:1:8
Sub AuthorizationMedicalRelease(process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim OffenceDate As notesdatetime
	Dim Charges As String, n As Integer
	Dim myDate As NotesDateTime
	Dim sDate As String
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		ContinuePrompting = False
		'Save the new form with the pertinent data
		Call CBForm.makeresponse(CurrentDoc)
		' Save the data from the dlg box
		CreateCBDlgData
		' Save the data necessary to render the form in Intelliprint
		CreateCBFormData
		
		CBForm.save True,True
		
		'Force the view to reindex so the doc appears after the refresh
		ThisUI.refresh	
	Case "CreateDlg"		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (Person - " & CurrentDoc.CBTmpPerson(0) & ")"
		CBForm.CBFormShortDetails=StrTmp		
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"		
		With CurrentDoc
			FieldList("Date")=.CBTmpDate(0)
			FieldList("Location")=.CBTmpLocation(0)
			FieldList("Person") = .CBTmpPerson(0)
			FieldList("StartingDate") = .CBTmpStartingDate(0)
			FieldList("PeaceOfficer") =.CBTmpPeaceOfficer(0)
			FieldList("MedicalPractitioner") =.CBTmpMedicalPractitioner(0)
			FieldList("MedicalPractitionerOf") =.CBTmpMedicalPractitionerOf(0)
			FieldList("EndingDate") =.CBTmpEndingDate(0)
			FieldList("Age") =.CBTmpAge(0)
			FieldList("PersonOf") =.CBTmpPersonOf(0)
			Set mydate = New NotesDateTime(.CBTmpStartingDate(0))			
			sDate = mydate.DateOnly		
			StrTmp= daysuffix(Cint(Day(sDate))) & " " &  Format(sDate,"mmmm")		
			FieldList("StartingDate")= StrTmp		
			Set mydate = New NotesDateTime(.CBTmpEndingDate(0))		
			sDate = mydate.DateOnly		
			StrTmp= daysuffix(Cint(Day(sDate))) & " " &  Format(sDate,"mmmm")		
			FieldList("EndingDate")= StrTmp		
			FieldList("StartingYear")=Year(sDate)
			FieldList("EndingYear") = Year(sDate) 
		End With
	End Select	
End Sub

'++LotusScript Development Environment:2:2:InformationObtainSW:1:8
Sub InformationObtainSW(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpDwellingOwner(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Search " & CurrentDoc.CBTmpDwelling(0) & " at " & CurrentDoc.CBTmpDwellingAddress(0) &_
		NL & "For " & Currentdoc.CBTmpSearchFor(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("Agency") = CurrentDoc.Agency(0)
		FieldList("InformantOccupation") = CurrentDoc.CBTmpInformantOcc(0)
		FieldList("Dwelling")=CurrentDoc.CBTmpDwelling(0)
		FieldList("DwellingOwner") = CurrentDoc.CBTmpDwellingOwner(0)
		FieldList("DwellingAddress")=CurrentDoc.CBTmpDwellingAddress(0)
		FieldList("SearchFor")=CurrentDoc.CBTmpSearchFor(0)
		
		StrTmp = ""
		Forall data In CurrentDoc.CBTmpReasonableGround
			StrTmp = StrTmp + data + ", "
		End Forall
		FieldList("ReasonableGround")=StrTmp
		FieldList("Offence")=CurrentDoc.CBTmpOffence(0)
		FieldList("GroundsOfBelief")=CurrentDoc.CBTmpGrounds(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:OrderTakeBodilySubstances:1:8
Sub OrderTakeBodilySubstances(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim Charges As String
	
	Select Case Process
		
	Case "CreateDlg"
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0) & " (" & CurrentDoc.CBTmpAccused(0) & ")"
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		FieldList("Region") = CurrentDoc.JudicialRegion(0)
		FieldList("OfficerRegion")=CurrentDoc.CBTmpRegion(0)
		
		StrTmp=""
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		If Not doc Is Nothing Then
			StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
			FieldList("Offender")=StrTmp
			FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)
		End If
		
		' Cycle through charges 
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			If Not doc Is Nothing Then
				Charges=Charges & doc.charge(0) & ", "
			End If
		End Forall
		
		FieldList("Offence")=Left(Charges, Len(Charges)-2)
		
		FieldList("Circumstances")=CurrentDoc.CBTmpCircumstances(0)
		
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:NoticeToCCCAndCEA:1:8
Sub NoticeToCCCAndCEA(Process As String)
	Set ws = New NotesUIWorkspace
	NL=Chr$(13) & Chr$(10)
	Dim EarliestDate As Variant
	Dim LatestDate As Variant
	Dim CommittedDate As NotesDateTime
	Dim NoticeDate As NotesDateTime
	Dim OffenceLocation As String, OffenceDate As notesdatetime
	Dim Charges As String
	Dim TodayDate As New notesdatetime (Now)
	Dim i As Integer
	
	Select Case Process
	' Retrieve info for Dialog Box	
	Case "RetrieveDlg"
		
	Case "CreateDlg"
		
		StrTmp=Format(Now,"yyyy-mm-dd hh:mm") & " " & CBForm.CBFormName(0)
		CBForm.CBFormShortDetails=StrTmp
		StrTmp=StrTmp & NL &  "Accused: " & CurrentDoc.CBTmpAccused(0)
		CBForm.CBFormLongDetails=StrTmp
		
	Case "CreateForm"
		
		StrTmp=""
		Set doc=Currentdatabase.getdocumentbyUNID(CurrentDoc.CBTmpAccusedUNID(0))
		StrTmp=Fulltrim(doc.Given1(0) & " " & doc.given2(0) & " " & doc.Surname(0))
		FieldList("AccusedName")=StrTmp
		FieldList("ServedName")=StrTmp 'added Apr 28, 2014 Brian Henry for Affidavit of service linked to this IP format
			
		FieldList("OccurrenceNumber")=doc.OccurrenceNumber(0)
		
		' Cycle through charges 
		Forall charge In CurrentDoc.CBTmpChargesUNID
			Set doc=Currentdatabase.getdocumentbyUNID(Charge)
			Charges=Charges & doc.charge(0) & NL
		End Forall
		
		'Charges = CurrentDoc.CBTmpCharges(0)
		
		FieldList("Offences")=Charges
		
		StrTmp = ""
		i = 1
		Forall data In CurrentDoc.CBTmpDocuments
			StrTmp = StrTmp + Cstr(i) + ".  " + data + NL + NL
			i = i + 1
		End Forall
		FieldList("Documents") = StrTmp
			' added Apr 28, 2014 Brian henry
			' The affidavit of service (IJ0507) is now linked to this report.
			' Pass form name so it enters the value for the affidavit
			FieldList("CopyOf") = "Notice Persuant to the CC and the Canada Evidence Act"
		FormDatedInformation
		
	End Select
End Sub

'++LotusScript Development Environment:2:2:ReplaceXMLItemValue:1:8
Sub ReplaceXMLItemValue(FieldName As String, XMLNodeName List As String, XMLNodeValue As Variant)
	Dim DataString As String
	Dim DataStringLength As Integer
	Dim LeadingNodeNameStart As Integer
	Dim LeadingNodeNameEnd As Integer
	Dim TrailingNodeNameStart As Integer
	Dim TrailingNodeNameEnd As Integer
	'Dim NodeName As String
	Dim NodeValue As String
	Dim StrTmp As String
	Dim IntTmp As Integer
	Dim item As notesitem
	Dim XMLStartSegment As String
	Dim XMLEndSegment As String
	Dim NL As String
	
	NL=Chr$(13) & Chr$(10)
	
	Set item=CurrentDoc.GetFirstItem(FieldName)
	DataString=item.values(0)
	XMLStartSegment=DataString
TryAgain:
	LeadingNodeNameEnd=1	
	'NodeName="InitialString"	
	Forall NodeNameEntry In XMLNodeName
		StrTmp="<" & NodeNameEntry & ">"
		LeadingNodeNameStart=Instr(LeadingNodeNameEnd,DataString,StrTmp)
		' Child nodes need to be found within the length of thier parent however the first node won't
		' have a parent therefore set the highwater mark so it passes the test
		If TrailingNodeNameStart=0 Then TrailingNodeNameStart=LeadingNodeNameStart
		' Child nodes will be within the length of thier parent
		If LeadingNodeNameStart<>0 And LeadingNodeNameStart<=TrailingNodeNameStart Then
			' Leading Node name was found
			LeadingNodeNameEnd=LeadingNodeNameStart + Len(StrTmp) -1
			StrTmp="</" & NodeNameEntry & ">"
			TrailingNodeNameStart=Instr(LeadingNodeNameEnd,DataString,StrTmp)
			If TrailingNodeNameStart<>0 Then
				' Trailing Node name found
				TrailingNodeNameEnd=TrailingNodeNameStart + Len(StrTmp) -1
				NodeValue=Mid(DataString,(LeadingNodeNameEnd+1),TrailingNodeNameStart-(LeadingNodeNameEnd+1))
				
				XMLStartSegment=Left(DataString,LeadingNodeNameEnd)
				IntTmp=(Len(DataString)-TrailingNodeNameStart)+1
				XMLEndSegment=Right(DataString,IntTmp)
			Else
				' Trailing node name was not found. Indicates a malformed XML string
				Messagebox "Malformed XML String encountered", 0 , "Enterpol Court Brief"
			End If
			
		Else
			' Node was not found so create it
			'Print "Node not Found"
			DataString=XMLStartSegment & "<" & NodeNameEntry & "></" & NodeNameEntry & ">" & NL & NodeValue &  XMLEndSegment
			Goto TryAgain
		End If
		
	End Forall
	' If the routine made it this far then we can substitute the value passed into the data string
	StrTmp=""
	Forall ValueEntry In XMLNodeValue
		StrTmp=StrTmp & ValueEntry & "~"
	End Forall
	StrTmp=Left(StrTmp,Len(StrTmp)-1)
	DataString= XMLStartSegment &  StrTmp & XMLEndSegment
	item.values=DataString
	
End Sub

'++LotusScript Development Environment:2:1:GetStatutesDatabase:1:8
Function GetStatutesDatabase
	Dim ws As New NotesUIWorkspace
	Dim s As New NotesSession
	Dim db As NotesDatabase
	Dim controldoc As NotesDocument
	Dim controlview As NotesView	
	Dim ludb As New NotesDatabase( "", "" )
	Dim repid As String
	Dim dbfile As String
	
	Set db = s.CurrentDatabase
	Set controlview = db.GetView("(Control)")
	Set controldoc = controlview.GetFirstDocument
	
	If Not controldoc Is Nothing Then
		If InStr(controldoc.LUPath(0),"\") <> 0 Then
			' Path provided in file name
			dbFile = controldoc.LUPath(0)
		Else
			' no path provided, so append path of current database
			dbFile = StrLeftBack(db.FilePath,"\") + "\" + controldoc.CandSReplID(0)
		End If
		ludb.Open db.Server, dbFile
		If ludb.IsOpen Then
			Set GetStatutesDatabase = ludb
		Else
			ws.Prompt PROMPT_OK, "Error", "Statutes database could not be located using the path provided in the control document!"
			Print "Lookup database could not be located using the path provided in the control document!"
		End If
	Else
		ws.Prompt PROMPT_OK, "Error", "Control Document is not setup!"
		Print "Control Document is not setup!"
	End If

End Function